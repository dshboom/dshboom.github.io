<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>【置顶】dshboom个人博客</title>
    <url>/2023/03/05/dshboom%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</url>
    <content><![CDATA[<h2 id="Hello-world"><a href="#Hello-world" class="headerlink" title="Hello world!"></a>Hello world!</h2><p><em>本博文已置顶</em></p>
<h5 id="很高兴认识你。"><a href="#很高兴认识你。" class="headerlink" title="很高兴认识你。"></a>很高兴认识你。</h5><p>欢迎来到我的个人网站，本网站创建于2023-3-5 9:35:00，使用hexo构建，由dshboom维护。</p>
<p>TG交流群：<a class="link"   href="https://t.me/+_Ai0e6cMX6o2MDFl" >https://t.me/+_Ai0e6cMX6o2MDFl <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<p>长期域名:<a href="https://dshboom.top/">https://dshboom.top</a></p>
<p>其他域名:dshboom.github.io、dshboom.netlify.app</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://image.cdn.dshboom.top/post/202306302325667.jpg"
                     
                ></p>
<h3 id="网站元素介绍："><a href="#网站元素介绍：" class="headerlink" title="网站元素介绍："></a>网站元素介绍：</h3><h4 id="背景音乐：-Canon-in-D-Canon-In-D-Brian-Crain-高音质在线试听-Canon-In-D歌词-歌曲下载-酷狗音乐-kugou-com"><a href="#背景音乐：-Canon-in-D-Canon-In-D-Brian-Crain-高音质在线试听-Canon-In-D歌词-歌曲下载-酷狗音乐-kugou-com" class="headerlink" title="背景音乐：[Canon in D](Canon In D_Brian Crain_高音质在线试听_Canon In D歌词|歌曲下载_酷狗音乐 (kugou.com))"></a>背景音乐：[Canon in D](<a class="link"   href="https://m.kugou.com/kgmixsong/3rhtqc47.html" >Canon In D_Brian Crain_高音质在线试听_Canon In D歌词|歌曲下载_酷狗音乐 (kugou.com) <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>)</h4><p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://image.cdn.dshboom.top/post/202306222039343.jpg"
                     
                ></p>
<h4 id="“人生如逆旅，我亦是行人”"><a href="#“人生如逆旅，我亦是行人”" class="headerlink" title="“人生如逆旅，我亦是行人”"></a><em>“人生如逆旅，我亦是行人”</em></h4><p>语出苏轼《临江仙·送钱穆父》。人生是一段漫长的旅行，最重要的不是终点，而是沿途的风景。</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://image.cdn.dshboom.top/post/202306091030975.webp"
                     
                ></p>
<h3 id="网站内容持续更新中，期待您的到来！"><a href="#网站内容持续更新中，期待您的到来！" class="headerlink" title="网站内容持续更新中，期待您的到来！"></a>网站内容持续更新中，期待您的到来！</h3>]]></content>
  </entry>
  <entry>
    <title>太久没更新博客了 随便写一点表示我还活( ﹁ ﹁ ) ~→着</title>
    <url>/2023/12/15/1/</url>
    <content><![CDATA[<h1 id="2023年底啦"><a href="#2023年底啦" class="headerlink" title="2023年底啦"></a>2023年底啦</h1><p>2024年新年倒计时：<a class="link"   href="https://newyear.dshboom.top/" >https://newyear.dshboom.top <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://image.cdn.dshboom.top/post/202312152208725.png"
                     
                ></p>
]]></content>
      <tags>
        <tag>日常</tag>
      </tags>
  </entry>
  <entry>
    <title>C++学习笔记(二)</title>
    <url>/2023/07/22/Cpplearn2/</url>
    <content><![CDATA[<h1 id="第十一节-——-while循环"><a href="#第十一节-——-while循环" class="headerlink" title="第十一节 —— while循环"></a>第十一节 —— while循环</h1><ul>
<li>循环是程序逻辑的关键点，是代码复杂度的源泉，需要谨慎对待</li>
</ul>
<p><strong><strong>最可靠的循环–死循环</strong></strong></p>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">while</span>(<span class="literal">true</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">// 执行一些动作；</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<p>配合的出口语句：<strong>break</strong> <code>if (条件) break;</code></p>
<p><strong>示例：</strong> 对学生成绩进行分类，输出：<code>A, B, C, D, E</code> 5个等级</p>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> score = <span class="number">100</span>;</span><br><span class="line"><span class="type">int</span> a = score - <span class="number">60</span>;</span><br><span class="line"><span class="type">char</span> level = <span class="string">&#x27;E&#x27;</span>;</span><br><span class="line"><span class="keyword">while</span>(<span class="literal">true</span>)&#123;</span><br><span class="line"><span class="keyword">if</span>(a&lt;<span class="number">0</span>) <span class="keyword">break</span>;</span><br><span class="line">level--;<span class="comment">// 能减的分数越多，等级越高</span></span><br><span class="line">a -= <span class="number">10</span>; <span class="comment">// a = a - 10;</span></span><br><span class="line"><span class="keyword">if</span>(level==<span class="string">&#x27;A&#x27;</span>) <span class="keyword">break</span>; <span class="comment">// 封顶</span></span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; level &lt;&lt; endl;</span><br></pre></td></tr></table></figure></div>

<p><strong>示例：</strong> 已知正整数x，从低位到高位，输出每个十进制数位 <code>提示：通过不断整除，消掉最后一位，直到变成0</code></p>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="type">int</span> a = <span class="number">9000</span>;</span><br><span class="line">	<span class="keyword">while</span>(<span class="literal">true</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		std::cout &lt;&lt; a % <span class="number">10</span> &lt;&lt; std::endl;</span><br><span class="line">		a /= <span class="number">10</span>;</span><br><span class="line">		<span class="keyword">if</span>(a == <span class="number">0</span>) <span class="keyword">break</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	std::cin.<span class="built_in">get</span>();</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<h2 id="while-和-do…while"><a href="#while-和-do…while" class="headerlink" title="while 和 do…while"></a><strong>while 和 do…while</strong></h2><p>do-while 循环并不常用，所有情况，可以用内部的break来解决</p>
<aside>
💡 感想：while循环和C一样，没啥好说的🤗

</aside>

<h1 id="第十二节-——-for循环"><a href="#第十二节-——-for循环" class="headerlink" title="第十二节 —— for循环"></a>第十二节 —— for循环</h1><p><code>当我们已知执行次数的时候，用 for 循环更方便一些。</code></p>
<ul>
<li>for 循环的语法：</li>
</ul>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span>(初始化循环变量; 循环保持条件; 循环变量变化)</span><br><span class="line">&#123;</span><br><span class="line">	循环变量 i</span><br><span class="line">	&#123;</span><br><span class="line">		循环体</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<ul>
<li><strong>循环变量的生存期：</strong>循环变量<strong>仅仅在 for 语句范围内有效</strong>，是<strong>局部变量</strong>，放在栈中 循环变量的生存期，比循环体内的局部变量更长。</li>
<li>continue 直接进入下一轮循环</li>
<li><strong>双重嵌套循环打印九九乘法表</strong><ul>
<li>示例程序：</li>
</ul>
  <div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>;j &lt;= <span class="number">9</span>;j++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>;i &lt;= j;i++)</span><br><span class="line">		&#123;</span><br><span class="line">			std::cout &lt;&lt; j &lt;&lt; <span class="string">&quot; * &quot;</span> &lt;&lt; i &lt;&lt; <span class="string">&quot; = &quot;</span> &lt;&lt; i * j &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		std::cout &lt;&lt; std::endl;</span><br><span class="line">	&#125;</span><br><span class="line">	std::cin.<span class="built_in">get</span>();</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
</li>
<li><strong>求100以内素数</strong><ul>
<li>设计思路：</li>
</ul>
  <div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span>(i 从 <span class="number">2</span> 到 n<span class="number">-1</span>)&#123;</span><br><span class="line"><span class="keyword">if</span>(n 能除开 i)&#123;</span><br><span class="line">输出 i</span><br><span class="line">n = n / i</span><br><span class="line">设法阻止 i 的自增行为</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(剩下的 n &gt; <span class="number">1</span>) 输出 n;</span><br></pre></td></tr></table></figure></div>
<ul>
<li>示例程序：</li>
</ul>
  <div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">2</span>;j &lt;= <span class="number">100</span>;j++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="type">bool</span> tag = <span class="literal">true</span>;</span><br><span class="line">		<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">2</span>;i &lt; j;i++)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">if</span>(j % i == <span class="number">0</span>)</span><br><span class="line">			&#123;</span><br><span class="line">				tag = <span class="literal">false</span>;</span><br><span class="line">				<span class="keyword">break</span>;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span> (tag) std::cout &lt;&lt; j &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	std::cin.<span class="built_in">get</span>();</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
</li>
<li><strong>分解质因数</strong><ul>
<li>设计思路</li>
</ul>
  <div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span>(i 从 <span class="number">2</span> 到 n<span class="number">-1</span>)&#123;</span><br><span class="line">  <span class="keyword">if</span>(n 能除开 i)&#123;</span><br><span class="line">    输出 i</span><br><span class="line">    n = n / i</span><br><span class="line">    设法阻止 i 的自增行为</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(剩下的 n &gt; <span class="number">1</span>) 输出 n;</span><br></pre></td></tr></table></figure></div>
<ul>
<li>示例程序</li>
</ul>
  <div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="type">int</span> n = <span class="number">90</span>;</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">2</span>;i &lt; n;i++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span> (n % i == <span class="number">0</span>)</span><br><span class="line">		&#123;</span><br><span class="line">			std::cout &lt;&lt; i &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">			n = n / i;</span><br><span class="line">			i--;<span class="comment">// 阻止i自增，直到不能整除</span></span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span> (n &gt; <span class="number">1</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		std::cout &lt;&lt; n &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">	&#125;<span class="comment">// 追加输出最后一个质因数</span></span><br><span class="line">	std::cin.<span class="built_in">get</span>();</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
</li>
</ul>
<aside>
💡 感想：来手感了😉。

</aside>

<h1 id="第十三节-——-函数"><a href="#第十三节-——-函数" class="headerlink" title="第十三节 —— 函数"></a>第十三节 —— 函数</h1><ul>
<li>函数，在数学上的定义：对于输入的若干值，返回唯一的值。</li>
</ul>
<h2 id="函数的定义"><a href="#函数的定义" class="headerlink" title="函数的定义"></a>函数的定义</h2><ul>
<li>定义：</li>
</ul>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line">返回值类型 函数名(输入参数列表 。。。)&#123;</span><br><span class="line">  函数体</span><br><span class="line">  <span class="keyword">return</span> 返回值</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<ul>
<li>例子：</li>
</ul>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">myadd</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="type">int</span> t = a * <span class="number">10</span> + b;</span><br><span class="line">  <span class="keyword">return</span> t;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<ul>
<li>调用它的方法：<code>int x = myadd(5, 8);</code></li>
<li>函数<strong>定义</strong>时的参数，称为：形式参数，简称：<code>形参</code></li>
<li><strong>调用</strong>函数时，传给它的参数，称为：实际参数，简称：<code>实参</code></li>
<li>一般的情况下，<strong>形参的改变不影响实参</strong>。</li>
<li>形参是<strong>局部变量</strong>，在栈中分配，调用时分配。</li>
<li><strong>形参的寿命小于实参。</strong></li>
</ul>
<h2 id="函数的用处"><a href="#函数的用处" class="headerlink" title="函数的用处"></a>函数的用处</h2><ul>
<li><strong>函数是重要的抽象手段</strong></li>
<li>人类解决抽象问题的法宝：大问题分解成小问题，<strong>“自顶向下”的设计原则</strong>。</li>
<li>避免重复做某件事，去除冗余（don’t repeat yourself）</li>
<li>消除 if…else 的嵌套，增加<strong>可读性</strong><ul>
<li>三数取中的例子（函数版本）：  设计思路：<code>三个数居中 = 两两最大值的最小值</code><ul>
<li>示例程序：  <div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">min</span><span class="params">(<span class="type">int</span> a,<span class="type">int</span> b)</span></span>;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">min</span><span class="params">(<span class="type">int</span> a,<span class="type">int</span> b,<span class="type">int</span> c)</span></span>;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">max</span><span class="params">(<span class="type">int</span> a,<span class="type">int</span> b)</span></span>;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">mid</span><span class="params">(<span class="type">int</span> a,<span class="type">int</span> b,<span class="type">int</span> c)</span></span>;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="type">int</span> a = <span class="number">2</span> , b = <span class="number">5</span> , c = <span class="number">7</span>;</span><br><span class="line">	std::cout &lt;&lt; <span class="built_in">mid</span>(a,b,c) &lt;&lt; std::endl;</span><br><span class="line">	std::cin.<span class="built_in">get</span>();</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">min</span><span class="params">(<span class="type">int</span> a,<span class="type">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">return</span> a &gt; b ? b : a;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">min</span><span class="params">(<span class="type">int</span> a,<span class="type">int</span> b,<span class="type">int</span> c)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">return</span> <span class="built_in">min</span>(<span class="built_in">min</span>(a , b),c);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">max</span><span class="params">(<span class="type">int</span> a,<span class="type">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">return</span> a &gt; b ? a : b;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">mid</span><span class="params">(<span class="type">int</span> a,<span class="type">int</span> b,<span class="type">int</span> c)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">return</span> <span class="built_in">min</span>(<span class="built_in">max</span>(a,b),<span class="built_in">max</span>(a,c),<span class="built_in">max</span>(b,c));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></li>
</ul>
</li>
</ul>
</li>
<li>”九九乘法表“函数版实现（<strong>消除循环嵌套，增加可读性</strong> ）<ul>
<li>示例程序：  <div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">t99_row</span><span class="params">(<span class="type">int</span> row)</span></span>;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">t99_item</span><span class="params">(<span class="type">int</span> row,<span class="type">int</span> i)</span></span>;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>;i &lt;= <span class="number">9</span>;i++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">t99_row</span>(i);</span><br><span class="line">		std::cout &lt;&lt; std::endl;</span><br><span class="line">	&#125;</span><br><span class="line">	std::cin.<span class="built_in">get</span>();</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">t99_row</span><span class="params">(<span class="type">int</span> row)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>;i &lt;= row;i++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">t99_item</span>(row,i);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">t99_item</span><span class="params">(<span class="type">int</span> row,<span class="type">int</span> i)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	std::cout &lt;&lt; row &lt;&lt; <span class="string">&quot; * &quot;</span> &lt;&lt; i &lt;&lt; <span class="string">&quot; = &quot;</span> &lt;&lt; row * i &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
</li>
</ul>
</li>
</ul>
<h2 id="函数的返回值"><a href="#函数的返回值" class="headerlink" title="函数的返回值"></a>函数的返回值</h2><ul>
<li>返回值可以没有，类型写void</li>
<li>有返回值可以当成没有</li>
<li><strong>有返回值，忘记写返回值（直接出现“垃圾数据”）</strong></li>
</ul>
<aside>
🗣 老师名言：重复是恶趣之始 拷贝是万恶之源

</aside>

<aside>
💡 感想：直接刷新了我以前对函数的认识。重载函数打开了新思路哇🤗。

</aside>

<h1 id="第十四节-——-指针入门"><a href="#第十四节-——-指针入门" class="headerlink" title="第十四节 —— 指针入门"></a>第十四节 —— 指针入门</h1><p><em><strong>指针 —— C/C++的精髓</strong></em></p>
<ul>
<li>指针就是存放其它变量的地址的小盒子</li>
<li>所说的地址，是<strong>虚拟内存</strong>的地址，本质上就是整数，默认以十六进制表示</li>
</ul>
<h2 id="指针的定义"><a href="#指针的定义" class="headerlink" title="指针的定义"></a>指针的定义</h2><p><code>类型 * 指针名</code> </p>
<p>初始化： 指针 = &amp;某变量</p>
<p>&amp;：取值运算符</p>
<h2 id="通过指针，访问被指向的变量"><a href="#通过指针，访问被指向的变量" class="headerlink" title="通过指针，访问被指向的变量"></a>通过指针，访问被指向的变量</h2><p>可以读取 <code>myxx = *p;</code> ，也可以<strong>写入</strong> <code>*p = ...</code> 要十分谨慎 通过指针写入是危险的，这是c++强大的原因，也是bug发源地。</p>
<h2 id="可以在参数中使用指针"><a href="#可以在参数中使用指针" class="headerlink" title="可以在参数中使用指针"></a>可以在参数中使用指针</h2><p>形参是指针类型时，可以改变实参的值。我们可以利用这个特性，间接地实现多个返回值。</p>
<ul>
<li>交换两个变量，示例程序：  <div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">swap</span><span class="params">(<span class="type">int</span> *a,<span class="type">int</span> *b)</span></span>;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="type">int</span> a = <span class="number">1</span>;</span><br><span class="line">	<span class="type">int</span> b = <span class="number">2</span>;</span><br><span class="line">	std::cout &lt;&lt; a &lt;&lt; <span class="string">&quot;,&quot;</span> &lt;&lt; b &lt;&lt; std::endl;</span><br><span class="line">	<span class="built_in">swap</span>(&amp;a,&amp;b);</span><br><span class="line">	std::cout &lt;&lt; a &lt;&lt; <span class="string">&quot;,&quot;</span> &lt;&lt; b &lt;&lt; std::endl;</span><br><span class="line">	std::cin.<span class="built_in">get</span>();</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">swap</span><span class="params">(<span class="type">int</span> *a,<span class="type">int</span> *b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="type">int</span> t = *a;</span><br><span class="line">	*a = *b;</span><br><span class="line">	*b = t;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
</li>
<li>冒泡法实现三数居中，示例程序：  <strong>冒泡排序</strong>：如果相邻的连个元素逆序，则交换它们。多次重复这个动作。  <div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">swap</span><span class="params">(<span class="type">int</span> *a,<span class="type">int</span> *b)</span></span>;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">mid</span><span class="params">(<span class="type">int</span> a,<span class="type">int</span> b,<span class="type">int</span> c)</span></span>;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="type">int</span> a = <span class="number">2</span>,b = <span class="number">5</span>,c =<span class="number">7</span>;</span><br><span class="line">	<span class="type">int</span> res = <span class="built_in">mid</span>(a , b , c);</span><br><span class="line">	std::cout &lt;&lt; res &lt;&lt; std::endl;</span><br><span class="line">	std::cin.<span class="built_in">get</span>();</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">swap</span><span class="params">(<span class="type">int</span> *a,<span class="type">int</span> *b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="type">int</span> t = *a;</span><br><span class="line">	*a = *b;</span><br><span class="line">	*b = t;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">mid</span><span class="params">(<span class="type">int</span> a,<span class="type">int</span> b,<span class="type">int</span> c)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">if</span> (a &gt; b) <span class="built_in">swap</span>(&amp;a , &amp;b);</span><br><span class="line">	<span class="keyword">if</span> (b &gt; c) <span class="built_in">swap</span>(&amp;b , &amp;c);</span><br><span class="line">	<span class="keyword">if</span> (a &gt; b) <span class="built_in">swap</span>(&amp;a , &amp;b);</span><br><span class="line">	<span class="keyword">return</span> b;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
</li>
</ul>
<h2 id="指针可以做返回值"><a href="#指针可以做返回值" class="headerlink" title="指针可以做返回值"></a>指针可以做返回值</h2><ul>
<li>不要返回局部变量的地址</li>
</ul>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span>* <span class="title">f</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="type">int</span> a = <span class="number">100</span>;</span><br><span class="line">  <span class="comment">//....</span></span><br><span class="line">  <span class="keyword">return</span> &amp;a;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="type">int</span>* p = <span class="built_in">f</span>();</span><br><span class="line">   ....</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<blockquote>
<p>当我们拿到返回值的时候，变量 a 已经被释放了。 我们的指针指向了已经无效的内存，产生了 <em><strong>” 悬挂指针 ”</strong></em>，这是很常见的bug之源。</p>
</blockquote>
<h1 id="第十五节-——-引用类型"><a href="#第十五节-——-引用类型" class="headerlink" title="第十五节 —— 引用类型"></a>第十五节 —— 引用类型</h1><p>引用在<strong>语义上看</strong>，是：<code>别名机制</code> </p>
<p><strong>在实现上</strong>，被转换为对指针的操作。</p>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> a = <span class="number">100</span>;</span><br><span class="line"><span class="type">int</span>&amp; b = a;</span><br><span class="line">b++; <span class="comment">//实际上就是 a++</span></span><br></pre></td></tr></table></figure></div>

<p>变量可以看作是：内存中的小盒子</p>
<p>变量名可以看作是：盒子的<strong>标签</strong> </p>
<p>引用则可以看作是：盒子上的<strong>另一个标签（别名）</strong></p>
<h2 id="有了指针，为什么还要引入别名？"><a href="#有了指针，为什么还要引入别名？" class="headerlink" title="有了指针，为什么还要引入别名？"></a>有了指针，为什么还要引入别名？</h2><p>为了语义上更清晰，更接近人的思考习惯。 </p>
<p>引用改写 swap 函数</p>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">swap</span><span class="params">(<span class="type">int</span>&amp; a, <span class="type">int</span>&amp; b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="type">int</span> t = a;</span><br><span class="line">  a = b;</span><br><span class="line">  b = t;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="type">int</span> a = <span class="number">5</span>, b = <span class="number">8</span>;</span><br><span class="line">  <span class="built_in">swap</span>(a, b);</span><br><span class="line">  cout &lt;&lt; a &lt;&lt; <span class="string">&quot;,&quot;</span> &lt;&lt; b &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<ol>
<li>引用是不能运算的（比如++，–），只能去引用原来的值 相当于给“指针”这匹野马，套上约束，使用上更安全。</li>
<li>不存在空引用，但空指针很普遍，是bug之源</li>
<li>创建时初始化，不存在随机垃圾内存现象</li>
<li>引用绑定了一个目标，不能中途更换，指针随便</li>
</ol>
<h2 id="引用可以作为函数参数，也可以是返回值"><a href="#引用可以作为函数参数，也可以是返回值" class="headerlink" title="引用可以作为函数参数，也可以是返回值"></a>引用可以作为函数参数，也可以是返回值</h2><p>当作形参时，可以看作实参的别名，当作返回值时，注意不要引用已经释放的变量。</p>
<p>返回不存在的对象的引用，与返回不存在的对象的指针，都是典型的错误。</p>
<h2 id="实现多返回"><a href="#实现多返回" class="headerlink" title="实现多返回"></a>实现多返回</h2><p><strong>表面上看</strong>，c++的函数只能返回一个值，无法实现多值返回。</p>
<p>实际上，我们可以变通。</p>
<ul>
<li>【示例】 <strong>通过引用实现返回多个值的效果</strong> <code>编写一个函数，传入a,b，返回a除以b的商，和余数</code>  <div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">div</span><span class="params">(<span class="type">int</span> a,<span class="type">int</span> b,<span class="type">int</span>&amp; shang,<span class="type">int</span>&amp; yu)</span></span>;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="type">int</span> a = <span class="number">4</span>,b = <span class="number">2</span>;</span><br><span class="line">	<span class="type">int</span> x,y;</span><br><span class="line">	<span class="built_in">div</span>(a , b , x , y);</span><br><span class="line">	std::cout &lt;&lt; x &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; y &lt;&lt; std::endl;</span><br><span class="line">	std::cin.<span class="built_in">get</span>();</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">div</span><span class="params">(<span class="type">int</span> a,<span class="type">int</span> b,<span class="type">int</span>&amp; shang,<span class="type">int</span>&amp; yu)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">if</span>(b == <span class="number">0</span>) <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">	shang = a / b;</span><br><span class="line">	yu = a % b;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<blockquote>
<p>提示：可以用参数接收返回值。</p>
</blockquote>
</li>
</ul>
<h1 id="第十六节-——-数组入门"><a href="#第十六节-——-数组入门" class="headerlink" title="第十六节 —— 数组入门"></a>第十六节 —— 数组入门</h1><h2 id="数组的由来"><a href="#数组的由来" class="headerlink" title="数组的由来"></a>数组的由来</h2><ul>
<li>3个数求最大值</li>
<li>100个数求最大值？<strong>不可能</strong>定义 100 个变量啊！！</li>
</ul>
<h2 id="一个变量名，能操纵多个变量"><a href="#一个变量名，能操纵多个变量" class="headerlink" title="一个变量名，能操纵多个变量"></a>一个变量名，能操纵多个变量</h2><ul>
<li>通过<strong>下标</strong>（index）来操纵每个元素</li>
<li><strong>下标从0开始到n-1</strong></li>
<li>可以对元素读，也可以写</li>
<li><strong>九个数求最值</strong>，示例程序：  <div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> N 9</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="type">int</span> a[N] = &#123;<span class="number">9</span>,<span class="number">7</span>,<span class="number">4</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">2</span>,<span class="number">4</span>,<span class="number">2</span>,<span class="number">5</span>&#125;;</span><br><span class="line">	<span class="type">int</span> m = a[<span class="number">0</span>];</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>;i &lt; N;i++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span> (a[i] &gt; m)</span><br><span class="line">		&#123;</span><br><span class="line">			m = a[i];</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	std::cout &lt;&lt; m &lt;&lt; std::endl;</span><br><span class="line">	std::cin.<span class="built_in">get</span>();</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
</li>
</ul>
<blockquote>
<p>注意：c++ <strong>不会去保证</strong>下标合理（不做运行时检查）</p>
</blockquote>
<h2 id="数组是什么？"><a href="#数组是什么？" class="headerlink" title="数组是什么？"></a><strong>数组是什么？</strong></h2><ul>
<li>数组就是存在一起的一组相同类型的变量  <code>int a[3]; //定义含有三个元素的整型数组</code></li>
</ul>
<ol>
<li>每个变量的地址是<strong>紧挨着</strong>的</li>
<li>每个变量都是<strong>相同</strong>的类型（意味着占用相同大小的空间）</li>
<li>只有一个名字，才能<strong>统一</strong>操作</li>
</ol>
<h2 id="数组存在哪里？"><a href="#数组存在哪里？" class="headerlink" title="数组存在哪里？"></a><strong><strong>数组存在哪里？</strong></strong></h2><p>答曰：栈</p>
<p><code>（更严格地说，还可以是静态空间，比如：全局数组）</code></p>
<ul>
<li>一般情况下，数组是<strong>局部变量</strong></li>
<li>局部变量在<strong>栈</strong>中分配空间</li>
<li>自动分配，自动释放</li>
</ul>
<h2 id="怎么知道数组占用多大空间？"><a href="#怎么知道数组占用多大空间？" class="headerlink" title="怎么知道数组占用多大空间？"></a><strong><strong>怎么知道数组占用多大空间？</strong></strong></h2><ol>
<li>元素个数 x 单个元素的大小 * 总数组长度N <div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> N 100</span></span><br><span class="line">...</span><br><span class="line"><span class="type">int</span> a[N];</span><br><span class="line">x = <span class="built_in">sizeof</span>(<span class="type">int</span>) * N;</span><br></pre></td></tr></table></figure></div>
</li>
<li>sizeof(数组变量名) <div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> N 100</span></span><br><span class="line">...</span><br><span class="line"><span class="type">int</span> a[N];</span><br><span class="line">x = <span class="built_in">sizeof</span>(a);</span><br></pre></td></tr></table></figure></div>
</li>
</ol>
<h2 id="元素初始化"><a href="#元素初始化" class="headerlink" title="元素初始化"></a>元素初始化</h2><ol>
<li>指定元素个数 <div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> a[<span class="number">3</span>] = &#123;<span class="number">10</span>,<span class="number">20</span>,<span class="number">50</span>&#125;;</span><br></pre></td></tr></table></figure></div>
</li>
<li>不指定元素个数（自动推断） <div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> a[] = &#123;<span class="number">3</span>,<span class="number">6</span>,<span class="number">9</span>&#125;;</span><br></pre></td></tr></table></figure></div>
</li>
<li>指定值的个数少于元素个数 <div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> a[<span class="number">10</span>] = &#123;<span class="number">10</span>,<span class="number">20</span>,<span class="number">30</span>&#125;;</span><br></pre></td></tr></table></figure></div>
<blockquote>
<p><strong>当心！没有赋初始值的元素是随机值</strong></p>
</blockquote>
</li>
</ol>
<h2 id="拓展"><a href="#拓展" class="headerlink" title="拓展"></a>拓展</h2><ul>
<li>长定数组：数组创建后，大小就固定了，无法改变</li>
<li>通常，大小直接常数，或define一个常数（==定长==数组，编译器知道大小）</li>
</ul>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 怎样避免魔法数字？？</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> N 10  <span class="comment">// 老方案</span></span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">10</span>; <span class="comment">// 新方案（提倡）</span></span><br></pre></td></tr></table></figure></div>

<ul>
<li>C++99 中允许使用变量（运行时求值）</li>
</ul>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> n = <span class="built_in">f</span>(<span class="number">2</span>)+@$@#$@!...; <span class="comment">//一顿操作猛如虎，最后得到一个数</span></span><br><span class="line"><span class="type">int</span> a[n]; <span class="comment">// 初始化免谈，因为编译器也不知道到底有多大！！</span></span><br></pre></td></tr></table></figure></div>

<ul>
<li><strong>动态数组：开始时有个初始大小，将来可以”按需”扩大或缩小。通过”重新分配”内存，并”拷贝”旧的内容来实现。</strong></li>
</ul>
<h1 id="第十七节-——-函数进阶"><a href="#第十七节-——-函数进阶" class="headerlink" title="第十七节 —— 函数进阶"></a>第十七节 —— 函数进阶</h1><ul>
<li>数学上的函数是：</li>
</ul>
<p><code>输入数据 ===&gt; 函数（加工机器） ===&gt;吐出一个值</code></p>
<ul>
<li>程序中的函数行为更复杂  主要表现在函数执行时，可能会影响<strong>调用者</strong>  也叫“副作用”</li>
</ul>
<h2 id="被调方（callee）如何影响主调方（caller）"><a href="#被调方（callee）如何影响主调方（caller）" class="headerlink" title="被调方（callee）如何影响主调方（caller）"></a>被调方（callee）如何影响主调方（caller）</h2><ul>
<li><strong>返回值</strong>：这是最正经的渠道，调用方<strong>自己来决定</strong>如何使用返回值，可以接受，也可以丢弃。</li>
<li><strong>指针参数</strong>：参数类型为<strong>指针</strong>的话，callee 直接操刀。</li>
<li><strong>指针的指针</strong>： <code>int** p</code>，实质与前述相同。</li>
<li><strong>引用</strong>：最后还是<strong>转换</strong>为指针的方案。</li>
</ul>
<h2 id="指针形参"><a href="#指针形参" class="headerlink" title="指针形参"></a>指针形参</h2><p>这种方式，好比调用方准备了一个盒子，把盒子<strong>地址</strong>传过去，被调方往里塞东西。</p>
<p>其本质是：<strong>两个指针指向同一个东西。</strong></p>
<ul>
<li>冒泡排序的指针应用，示例程序：</li>
</ul>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">double_sort</span><span class="params">(<span class="type">int</span> *a , <span class="type">const</span> <span class="type">int</span> N)</span></span>;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">swap</span><span class="params">(<span class="type">int</span> *a,<span class="type">int</span> *b)</span></span>;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="type">int</span> a[] = &#123;<span class="number">3</span>,<span class="number">5</span>,<span class="number">2</span>,<span class="number">4</span>,<span class="number">6</span>,<span class="number">1</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">0</span>,<span class="number">9</span>&#125;;</span><br><span class="line">	<span class="type">const</span> <span class="type">int</span> len = <span class="built_in">sizeof</span>(a) / <span class="built_in">sizeof</span>(a[<span class="number">0</span>]);</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>;i &lt; len;i++)</span><br><span class="line">	&#123;</span><br><span class="line">		std::cout &lt;&lt; a[i] &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	std::cout &lt;&lt; std::endl;</span><br><span class="line">	<span class="built_in">double_sort</span>(a,len);<span class="comment">// a本身就是地址</span></span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>;i &lt; len;i++)</span><br><span class="line">	&#123;</span><br><span class="line">		std::cout &lt;&lt; a[i] &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	std::cout &lt;&lt; std::endl;</span><br><span class="line">	std::cin.<span class="built_in">get</span>();</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">double_sort</span><span class="params">(<span class="type">int</span> *a , <span class="type">const</span> <span class="type">int</span> N)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>;j &lt; N - <span class="number">1</span>;j++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>;i &lt; N-j<span class="number">-1</span>;i++)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">if</span> (a[i] &gt; a[i+<span class="number">1</span>])</span><br><span class="line">			&#123;</span><br><span class="line">				<span class="built_in">swap</span>(&amp;a[i],&amp;a[i+<span class="number">1</span>]);</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">swap</span><span class="params">(<span class="type">int</span> *a,<span class="type">int</span> *b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="type">int</span> t = *a;</span><br><span class="line">	*a = *b;</span><br><span class="line">	*b = t;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<h2 id="指针的指针形参"><a href="#指针的指针形参" class="headerlink" title="指针的指针形参"></a>指针的指针形参</h2><ul>
<li>这是为了修改调用方<strong>指针本身</strong>（不是指针指向的值），使得它指向所需的内容</li>
</ul>
<p><strong>双指针法指负数</strong>：准备一个整数数组，准备2个指针 p 和 q</p>
<blockquote>
<p>提示：调用函数 f 后，使得p指向<strong>第一个</strong>负数，q指向<strong>最后一个</strong>负数。</p>
</blockquote>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">f</span><span class="params">(<span class="type">int</span> *a,<span class="type">const</span> <span class="type">int</span> len,<span class="type">int</span> **p,<span class="type">int</span> **q)</span></span>;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="type">int</span> a[] = &#123;<span class="number">3</span>, <span class="number">5</span>, <span class="number">-3</span>, <span class="number">9</span>, <span class="number">-5</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">-1</span>, <span class="number">-2</span>, <span class="number">4</span>, <span class="number">6</span>&#125;;</span><br><span class="line">	<span class="type">const</span> <span class="type">int</span> len = <span class="built_in">sizeof</span>(a) / <span class="built_in">sizeof</span>(a[<span class="number">0</span>]);</span><br><span class="line">	<span class="type">int</span> *p,*q;</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>;i &lt; len;i++)</span><br><span class="line">	&#123;</span><br><span class="line">		std::cout &lt;&lt; a[i] &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	std::cout &lt;&lt; std::endl;</span><br><span class="line">	<span class="built_in">f</span>(a , len , &amp;p , &amp;q);</span><br><span class="line">	std::cout &lt;&lt; *p &lt;&lt; <span class="string">&quot;,&quot;</span> &lt;&lt; *q &lt;&lt; std::endl;</span><br><span class="line">	std::cin.<span class="built_in">get</span>();</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">f</span><span class="params">(<span class="type">int</span> *a,<span class="type">const</span> <span class="type">int</span> len,<span class="type">int</span> **p,<span class="type">int</span> **q)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	*p = &amp;a[<span class="number">0</span>];</span><br><span class="line">	*q = &amp;a[len];</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>;i &lt; len;i++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span> (a[i] &lt; <span class="number">0</span>)</span><br><span class="line">		&#123;</span><br><span class="line">			*p = &amp;a[i];</span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = len<span class="number">-1</span>;i &gt;= <span class="number">0</span>;i--)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span>(a[i] &lt; <span class="number">0</span>)</span><br><span class="line">		&#123;</span><br><span class="line">			*q = &amp;a[i];</span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<p>有的人晕车，有的人晕船，。。。</p>
<p><code>秘诀：</code></p>
<p>只要对照这两个例子，找共性。</p>
<ul>
<li>要回填的值是什么类型？ 比如是 iint，我们要修改int类型的东西，那么，要通知别人什么信息？</li>
<li>传递的参数是什么类型？必然是：int*</li>
<li>我们得到了 <code>int**</code></li>
</ul>
<aside>
🗣 老师名言：C/C++程序员**不能**晕指针，那好比美丽的鸟儿有**恐高症**。

</aside>

<aside>
💡 感想：倘若我学C语言是指针就已有所小成，阁下又该如何应对(○｀ 3′○)

</aside>

<h1 id="第十八节-——-数组与指针进阶"><a href="#第十八节-——-数组与指针进阶" class="headerlink" title="第十八节 —— 数组与指针进阶"></a>第十八节 —— 数组与指针进阶</h1><h2 id="数组名字的本质"><a href="#数组名字的本质" class="headerlink" title="数组名字的本质"></a>数组名字的本质</h2><ul>
<li>实验设计：<ol>
<li>准备两个内容一致的数组a,b，一个指针p</li>
<li>看看两个数组能否直接相等：a==b</li>
<li>看看能否直接赋值：a=b</li>
<li>看看数组名字a直接输出会输出什么</li>
<li>输出数组名字的指针&amp;a</li>
<li>输出数组第一个数的指针&amp;a[0]</li>
<li>对带指针的数据进行加减操作，看看会发生什么</li>
</ol>
</li>
</ul>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="type">int</span> a[] = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>&#125;;</span><br><span class="line">	<span class="type">int</span> b[] = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>&#125;;</span><br><span class="line">	std::cout &lt;&lt; (a==b) &lt;&lt; std::endl;</span><br><span class="line">	std::cin.<span class="built_in">get</span>();<span class="comment">// 输出0,可见数组内容相等不代表数组相等</span></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="type">int</span> a[] = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>&#125;;</span><br><span class="line">	<span class="type">int</span> b[] = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>&#125;;</span><br><span class="line">	a = b;<span class="comment">// 看来数组不能直接赋值给数组</span></span><br><span class="line">	std::cin.<span class="built_in">get</span>();<span class="comment">// 报错</span></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="type">int</span> a[] = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>&#125;;</span><br><span class="line">	<span class="type">int</span> b[] = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>&#125;;</span><br><span class="line">	std::cout &lt;&lt; a &lt;&lt; std::endl;</span><br><span class="line">	std::cin.<span class="built_in">get</span>();<span class="comment">// 输出一段类似004FFA0C的地址</span></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;<span class="comment">// 原来数组名是一个地址</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="type">int</span> a[] = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>&#125;;</span><br><span class="line">	<span class="type">int</span> b[] = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>&#125;;</span><br><span class="line">	<span class="type">int</span> *p = a;</span><br><span class="line">	std::cout &lt;&lt; a &lt;&lt; <span class="string">&quot;,&quot;</span> &lt;&lt; &amp;a[<span class="number">0</span>] &lt;&lt; std::endl;</span><br><span class="line">	std::cin.<span class="built_in">get</span>();<span class="comment">// 输出两个相同地址，如00EFFB94,00EFFB94</span></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;<span class="comment">// 原来数组名和数组第一个元素的地址是一样的</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="type">int</span> a[] = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>&#125;;</span><br><span class="line">	cout &lt;&lt; a &lt;&lt; endl;<span class="comment">// 008FF89C--&gt;156</span></span><br><span class="line">	cout &lt;&lt; &amp;a &lt;&lt; endl;<span class="comment">// 008FF89C--&gt;156</span></span><br><span class="line">	cout &lt;&lt; a + <span class="number">1</span> &lt;&lt; endl;<span class="comment">// 008FF8A0--&gt;160</span></span><br><span class="line">	cout &lt;&lt; &amp;a + <span class="number">1</span> &lt;&lt; endl;<span class="comment">// 008FF8A8--&gt;168</span></span><br><span class="line">	<span class="comment">// cout &lt;&lt; (a == &amp;a) &lt;&lt; endl;// 报错</span></span><br><span class="line">	std::cin.<span class="built_in">get</span>();</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<ul>
<li>思考与结论：<ul>
<li>数组不会作为整体来<strong>比较</strong>，或者<strong>赋值</strong>，输出的时候，与指针无二。</li>
<li>数组名不能被赋值，它只是编译器记录的信息，不是变量。</li>
<li>数组名取大小，包含了数组长度信息；赋值给指针，则<strong>丢掉</strong>了这个信息。</li>
<li>数组名取地址，得到一个指向整个数组类型的<strong>指针</strong></li>
</ul>
</li>
<li><strong>重点：</strong><ul>
<li>指针的<strong>值</strong>，决定了它指向哪块数据</li>
<li>指针的<strong>类型</strong>，决定了它的运算行为（比如 +1 的行为）</li>
</ul>
</li>
</ul>
<h2 id="数组作为参数传递"><a href="#数组作为参数传递" class="headerlink" title="数组作为参数传递"></a>数组作为参数传递</h2><ul>
<li>实验：</li>
</ul>
<table>
<thead>
<tr>
<th>实参</th>
<th>形参</th>
<th>现象</th>
</tr>
</thead>
<tbody><tr>
<td>int a[3]</td>
<td>int * p</td>
<td>可操作，丢失size信息</td>
</tr>
<tr>
<td>int a[3]</td>
<td>int p[ ]</td>
<td>与前项同</td>
</tr>
<tr>
<td>int a[3]</td>
<td>int p[3]</td>
<td>同前</td>
</tr>
<tr>
<td>int a[3]</td>
<td>int p[4]</td>
<td>竟然也可以？？</td>
</tr>
</tbody></table>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">f</span><span class="params">(<span class="type">int</span> p[<span class="number">4</span>])</span></span>;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="type">int</span> a[<span class="number">3</span>] = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>&#125;;</span><br><span class="line">	<span class="built_in">f</span>(a);</span><br><span class="line">	std::cin.<span class="built_in">get</span>();</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">f</span><span class="params">(<span class="type">int</span> p[<span class="number">4</span>])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	std::cout &lt;&lt; p[<span class="number">2</span>] &lt;&lt; std::endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<h2 id="指针运算与-运算的等效性"><a href="#指针运算与-运算的等效性" class="headerlink" title="指针运算与[ ]运算的等效性"></a>指针运算与[ ]运算的等效性</h2><ul>
<li><code>(p + n) === p[n]</code></li>
<li><code>p === p[0]</code></li>
<li>请反复验证：指针可以当数组用，数组也可以当指针用。</li>
</ul>
<h2 id="拓展：数组引用（用作参数的时候，有区别）"><a href="#拓展：数组引用（用作参数的时候，有区别）" class="headerlink" title="拓展：数组引用（用作参数的时候，有区别）"></a><strong><strong>拓展：数组引用（用作参数的时候，有区别）</strong></strong></h2><div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">//作为形式参数时：</span></span><br><span class="line"><span class="built_in">int</span> (&amp;p)[<span class="number">3</span>] <span class="comment">//携带了长度信息</span></span><br><span class="line"><span class="type">int</span> p[<span class="number">3</span>], <span class="type">int</span> p[], <span class="type">int</span>* p <span class="comment">//是等同的</span></span><br></pre></td></tr></table></figure></div>

<aside>
🗣 老师名言：C语言中本没有数组，它只是指针的幻影。

</aside>

<aside>
💡 感想：实践是检验真理的唯一标准！

</aside>

<h1 id="第十九节-——-数组元素的搬运"><a href="#第十九节-——-数组元素的搬运" class="headerlink" title="第十九节 —— 数组元素的搬运"></a>第十九节 —— 数组元素的搬运</h1><h2 id="数组的拷贝"><a href="#数组的拷贝" class="headerlink" title="数组的拷贝"></a>数组的拷贝</h2><div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 错误的拷贝方案</span></span><br><span class="line"><span class="type">int</span> a = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>&#125;;</span><br><span class="line"><span class="type">int</span> b = &#123;<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>&#125;;</span><br><span class="line">a = b;</span><br></pre></td></tr></table></figure></div>

<h2 id="自己定义函数mycopy"><a href="#自己定义函数mycopy" class="headerlink" title="自己定义函数mycopy"></a>自己定义函数mycopy</h2><ul>
<li>两种设计风格：</li>
</ul>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 目标指针，源指针，拷贝个数</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">mycopy</span><span class="params">(<span class="type">int</span>* dst, <span class="type">int</span>* src, <span class="type">const</span> <span class="type">int</span> n)</span></span>;</span><br></pre></td></tr></table></figure></div>

<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 目标指针，源指针，源阻拦索</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">mycopy</span><span class="params">(<span class="type">int</span>* dst, <span class="type">int</span>* src, <span class="type">int</span>* src_end)</span>；`</span></span><br></pre></td></tr></table></figure></div>

<p>示例程序：</p>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">myCopy</span><span class="params">(<span class="type">int</span> *dst,<span class="type">int</span> *src,<span class="type">const</span> <span class="type">int</span> len)</span></span>;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">myCopy</span><span class="params">(<span class="type">int</span> *dst,<span class="type">int</span> *src,<span class="type">int</span> *src_end)</span></span>;<span class="comment">// 静态重载</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">show</span><span class="params">(<span class="type">int</span> *arr,<span class="type">const</span> <span class="type">int</span> len)</span></span>;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="type">int</span> a[] = &#123;<span class="number">3</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>&#125;;</span><br><span class="line">	<span class="type">int</span> b[] = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>&#125;;</span><br><span class="line">	<span class="type">int</span> len_a = <span class="built_in">sizeof</span>(a) / <span class="built_in">sizeof</span>(a[<span class="number">0</span>]);</span><br><span class="line">	<span class="type">int</span> len_b = <span class="built_in">sizeof</span>(b) / <span class="built_in">sizeof</span>(b[<span class="number">0</span>]);</span><br><span class="line">	<span class="built_in">show</span>(a,len_a);</span><br><span class="line">	<span class="comment">// myCopy(a,b,len_b);</span></span><br><span class="line">	<span class="built_in">myCopy</span>(a,b,&amp;b[len_b]);</span><br><span class="line">	<span class="built_in">show</span>(a,len_a);</span><br><span class="line">	std::cin.<span class="built_in">get</span>();</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">myCopy</span><span class="params">(<span class="type">int</span> *dst,<span class="type">int</span> *src,<span class="type">int</span> *src_end)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> *p = src;p &lt; src_end;p++)</span><br><span class="line">	&#123;</span><br><span class="line">		*dst = *p;</span><br><span class="line">		*dst++;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">myCopy</span><span class="params">(<span class="type">int</span> *dst,<span class="type">int</span> *src,<span class="type">const</span> <span class="type">int</span> len)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>;i &lt; len;i++)</span><br><span class="line">	&#123;</span><br><span class="line">		dst[i] = src[i];</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">show</span><span class="params">(<span class="type">int</span> *arr,<span class="type">const</span> <span class="type">int</span> len)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>;i &lt; len;i++)</span><br><span class="line">	&#123;</span><br><span class="line">		std::cout &lt;&lt; arr[i] &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	std::cout &lt;&lt; std::endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<h2 id="数组拷贝大坑–overlap"><a href="#数组拷贝大坑–overlap" class="headerlink" title="数组拷贝大坑–overlap"></a>数组拷贝大坑–overlap</h2><ul>
<li>当源位置与目标位置<strong>重叠的时候，代码失效。</strong></li>
<li>通过判断拷贝次序来避免代码失效</li>
</ul>
<p>失效示例：</p>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">myCopy</span><span class="params">(<span class="type">int</span> *dst,<span class="type">int</span> *src,<span class="type">const</span> <span class="type">int</span> len)</span></span>;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">myCopy</span><span class="params">(<span class="type">int</span> *dst,<span class="type">int</span> *src,<span class="type">int</span> *src_end)</span></span>;<span class="comment">// 静态重载</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">show</span><span class="params">(<span class="type">int</span> *arr,<span class="type">const</span> <span class="type">int</span> len)</span></span>;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="type">int</span> a[] = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>&#125;;</span><br><span class="line">	<span class="type">int</span> len_a = <span class="built_in">sizeof</span>(a) / <span class="built_in">sizeof</span>(a[<span class="number">0</span>]);</span><br><span class="line">	<span class="built_in">show</span>(a,len_a);</span><br><span class="line">	<span class="built_in">myCopy</span>(a+<span class="number">2</span>,a,a+<span class="number">2</span>+<span class="number">3</span>);</span><br><span class="line">	<span class="comment">// myCopy(a+2,a,2+3);</span></span><br><span class="line">	<span class="built_in">show</span>(a,len_a);</span><br><span class="line">	std::cin.<span class="built_in">get</span>();</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">myCopy</span><span class="params">(<span class="type">int</span> *dst,<span class="type">int</span> *src,<span class="type">int</span> *src_end)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> *p = src;p &lt; src_end;p++)</span><br><span class="line">	&#123;</span><br><span class="line">		*dst = *p;</span><br><span class="line">		*dst++;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">myCopy</span><span class="params">(<span class="type">int</span> *dst,<span class="type">int</span> *src,<span class="type">const</span> <span class="type">int</span> len)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>;i &lt; len;i++)</span><br><span class="line">	&#123;</span><br><span class="line">		dst[i] = src[i];</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">show</span><span class="params">(<span class="type">int</span> *arr,<span class="type">const</span> <span class="type">int</span> len)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>;i &lt; len;i++)</span><br><span class="line">	&#123;</span><br><span class="line">		std::cout &lt;&lt; arr[i] &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	std::cout &lt;&lt; std::endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<p>更改后：</p>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">myCopy</span><span class="params">(<span class="type">int</span> *dst,<span class="type">int</span> *src,<span class="type">const</span> <span class="type">int</span> len)</span></span>;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">myCopy</span><span class="params">(<span class="type">int</span> *dst,<span class="type">int</span> *src,<span class="type">int</span> *src_end)</span></span>;<span class="comment">// 静态重载</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">show</span><span class="params">(<span class="type">int</span> *arr,<span class="type">const</span> <span class="type">int</span> len)</span></span>;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="type">int</span> a[] = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>&#125;;</span><br><span class="line">	<span class="type">int</span> len_a = <span class="built_in">sizeof</span>(a) / <span class="built_in">sizeof</span>(a[<span class="number">0</span>]);</span><br><span class="line">	<span class="built_in">show</span>(a,len_a);</span><br><span class="line">	<span class="built_in">myCopy</span>(a+<span class="number">2</span>,a,a+<span class="number">3</span>);<span class="comment">// 从a拷贝到a+2，拷贝3个数</span></span><br><span class="line">	<span class="comment">// myCopy(a+2,a,3);</span></span><br><span class="line">	<span class="built_in">show</span>(a,len_a);</span><br><span class="line">	std::cin.<span class="built_in">get</span>();</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">myCopy</span><span class="params">(<span class="type">int</span> *dst,<span class="type">int</span> *src,<span class="type">int</span> *src_end)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">if</span> (dst == src) <span class="keyword">return</span>;</span><br><span class="line">	<span class="type">int</span> n = src_end - src;</span><br><span class="line">	<span class="keyword">if</span> (dst &gt; src)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">for</span> (<span class="type">int</span> i = n - <span class="number">1</span>;i &gt;= <span class="number">0</span>;i--)</span><br><span class="line">		&#123;</span><br><span class="line">			dst[i] = src[i];</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>;i &lt; n;i++)</span><br><span class="line">		&#123;</span><br><span class="line">			dst[i] = src[i];</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">myCopy</span><span class="params">(<span class="type">int</span> *dst,<span class="type">int</span> *src,<span class="type">const</span> <span class="type">int</span> len)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">if</span> (dst == src) <span class="keyword">return</span>;</span><br><span class="line">	<span class="keyword">if</span> (dst &gt; src)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">for</span> (<span class="type">int</span> i = len - <span class="number">1</span>;i &gt;= <span class="number">0</span>;i--)</span><br><span class="line">		&#123;</span><br><span class="line">			dst[i] = src[i];</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>;i &lt; len;i++)</span><br><span class="line">		&#123;</span><br><span class="line">			dst[i] = src[i];</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">show</span><span class="params">(<span class="type">int</span> *arr,<span class="type">const</span> <span class="type">int</span> len)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>;i &lt; len;i++)</span><br><span class="line">	&#123;</span><br><span class="line">		std::cout &lt;&lt; arr[i] &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	std::cout &lt;&lt; std::endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<h2 id="数组元素的删除"><a href="#数组元素的删除" class="headerlink" title="数组元素的删除"></a>数组元素的删除</h2><ul>
<li>数组元素的删除，就是把元素后面的内容，向前平移（本质=overlap拷贝）</li>
</ul>
<h2 id="数组元素的插入"><a href="#数组元素的插入" class="headerlink" title="数组元素的插入"></a>数组元素的插入</h2><ul>
<li>插入一个元素，就意味着：需要把那个位置开始的后面内容，向后平移</li>
<li>本质是向后平移，空出位置</li>
</ul>
<h2 id="注意："><a href="#注意：" class="headerlink" title="注意："></a>注意：</h2><ul>
<li>数组的结构决定了，<strong>它不适用于频繁地插入和删除</strong>，尤其数组很大的时候</li>
<li>如果需要，我们可以使用：<strong>链表</strong>，<strong>哈希表</strong>，<strong>块链</strong>等更复杂的结构</li>
</ul>
<aside>
💡 感想：学个数组，对指针的使用反而更透彻了哈哈，”C/C++里哪有什么数组，不过是指针的幻影罢了。“

</aside>

<h1 id="第二十节-——-插入排序"><a href="#第二十节-——-插入排序" class="headerlink" title="第二十节 —— 插入排序"></a>第二十节 —— 插入排序</h1><h3 id="问题："><a href="#问题：" class="headerlink" title="问题："></a><strong>问题：</strong></h3><p>给定一个数组，用简单插入法，排序。（模拟扑克牌抓牌的动作）</p>
<p><code>要点</code> 把一个元素插入到有序的表中，并让表的长度增长。</p>
<h3 id="方案"><a href="#方案" class="headerlink" title="方案"></a><strong>方案</strong></h3><p>我们尽量不利用额外的空间。</p>
<ol>
<li>可以把数组分开成两个区域，左边是排好序的，右边是待排序的。</li>
<li>从右边拿一个数，插入左边适当的位置<ul>
<li>寻找恰当的位置</li>
<li>把那个位置的数据向后<strong>平移</strong></li>
<li>放入插入的数据</li>
</ul>
</li>
<li>重复2，直到没有剩余数据</li>
</ol>
]]></content>
      <tags>
        <tag>学习笔记</tag>
        <tag>C++</tag>
      </tags>
  </entry>
  <entry>
    <title>C++学习笔记(一)</title>
    <url>/2023/07/20/Cpplearn1/</url>
    <content><![CDATA[<h1 id="第一节-——-C-概述"><a href="#第一节-——-C-概述" class="headerlink" title="第一节 —— C++概述"></a>第一节 —— C++概述</h1><ul>
<li>C++在C语言基础上添加了<strong>面向对象</strong>特性</li>
<li>C++是<strong>编译型</strong>的高级语言</li>
<li>C++充分相信程序员，你要对自己的行为负责哦！</li>
</ul>
<aside>
💡 感想：爱死C++了，有一种被信任的感觉，初步感受到了C++的强大。


</aside>

<h1 id="第二节-——-C-环境安装"><a href="#第二节-——-C-环境安装" class="headerlink" title="第二节 —— C++环境安装"></a>第二节 —— C++环境安装</h1><ul>
<li>安装Qt开发环境</li>
</ul>
<aside>
💡 感想：我偏不，我就要用VS2010，等你什么时候开发图形化程序了我再下。￣へ￣


</aside>

<h1 id="第三节-——-第一个C-程序"><a href="#第三节-——-第一个C-程序" class="headerlink" title="第三节 —— 第一个C++程序"></a>第三节 —— 第一个C++程序</h1><ul>
<li>C++运行Hello world程序</li>
</ul>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="comment">// using namespace std 使用命名空间，听说不建议新手写</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	std::cout &lt;&lt; <span class="string">&quot;Hello world!&quot;</span> &lt;&lt; std::endl;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure></div>

<aside>
💡 感想：Hello world 能有什么感想(○｀ 3′○)


</aside>

<h1 id="第四节-——-基本数据类型"><a href="#第四节-——-基本数据类型" class="headerlink" title="第四节 —— 基本数据类型"></a>第四节 —— 基本数据类型</h1><ul>
<li><p>C++的几大<strong>主要类型</strong>：</p>
<p>bool、int、float、double、char、void</p>
</li>
<li><p><strong>unsigned</strong>修饰类型，如：unsigned int… …</p>
</li>
<li><p>sizeof(变量或类型)是一个<strong>关键字</strong>（不是函数），可以看变量或类型所占内存的字节数。</p>
</li>
<li><p>想知道类型的最大范围可以使用<strong>limits库</strong>求得，示例程序：</p>
</li>
</ul>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;limits&gt;</span></span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="type">unsigned</span> <span class="type">long</span> <span class="type">long</span> a = std::numeric_limits&lt;<span class="type">unsigned</span> <span class="type">short</span> <span class="type">int</span>&gt;::<span class="built_in">max</span>();</span><br><span class="line">	std::cout &lt;&lt; a &lt;&lt; std::endl;</span><br><span class="line">	std::cin.<span class="built_in">get</span>();</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<blockquote>
<p>tip1：如果你测short类型的话，会发现是32767，而不是顺口的65535（2^16-1），因为有一个比特位拿去表示正负了，写成unsigned short即可。</p>
</blockquote>
<blockquote>
<p>tip2：a的最值要比被测值大哦，不然直接成了求a的最大值ψ(._. )&gt;</p>
</blockquote>
<ul>
<li><strong>类型的别名</strong>：</li>
</ul>
<p>C++中可以使用typedef关键字来指定类型别名，与原名等价，示例程序：</p>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">unsigned</span> <span class="type">long</span> <span class="type">long</span> ULL;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	ULL a = std::numeric_limits&lt;<span class="type">unsigned</span> <span class="type">short</span> <span class="type">int</span>&gt;::<span class="built_in">max</span>();</span><br><span class="line">	std::cout &lt;&lt; a &lt;&lt; std::endl;</span><br><span class="line">	std::cin.<span class="built_in">get</span>();</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<aside>
💡 感想：不错不错，竟然先从数据类型开始讲，我很喜欢。老师讲的很好，有水平。


</aside>

<h1 id="第五节-——-变量与作用域"><a href="#第五节-——-变量与作用域" class="headerlink" title="第五节 —— 变量与作用域"></a>第五节 —— 变量与作用域</h1><ul>
<li><p><strong>变量的生存期和作用域</strong></p>
<p>生存期：何时分配内存</p>
<p>作用域：何地变量可见</p>
</li>
<li><p><strong>全局变量</strong>：静态生存期（一般来说程序结束消失）</p>
</li>
<li><p>全局变量位置不能执行非定义语句，展开看示例：</p>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;limits&gt;</span></span></span><br><span class="line"><span class="type">int</span> a,b;</span><br><span class="line"><span class="type">int</span> g_a;</span><br><span class="line">g_a = a + b;<span class="comment">// 编译错误！</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	std::cin.<span class="built_in">get</span>();</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></li>
<li><p><em>注意：变量未初始化会出现一个随机的无意义数字</em></p>
</li>
<li><p><strong>局部变量</strong>：函数内部定义，函数执行时存在</p>
<p>局部变量可以与全局变量同名</p>
</li>
<li><p><strong>变量赋值</strong>：深拷贝和浅拷贝</p>
<p>浅拷贝：形式拷贝，无关语义</p>
<p>深拷贝：A原来的内容覆盖掉，再也找不到</p>
</li>
<li><p><strong>大括号作用域</strong></p>
<ul>
<li>大括号作用域可以嵌套</li>
<li>局部作用域就是最外层大括号</li>
<li>应尽量减少变量作用域</li>
</ul>
</li>
</ul>
<p>大括号限定变量的生存周期，示例程序：</p>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="type">int</span> a = <span class="number">5</span>,b = <span class="number">8</span>;</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="type">int</span> t = a;</span><br><span class="line">		a = b;</span><br><span class="line">		b = t;</span><br><span class="line">	&#125;<span class="comment">// 大括号限定t的生存周期</span></span><br><span class="line">	std::cout &lt;&lt; a &lt;&lt; <span class="string">&quot;,&quot;</span> &lt;&lt; b &lt;&lt; std::endl;</span><br><span class="line">	std::cout &lt;&lt; t &lt;&lt; std::endl;<span class="comment">// 报错，未声明的标识符</span></span><br><span class="line">	std::cin.<span class="built_in">get</span>();</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<aside>
💡 感想：秀翻我500年，我学C的时候可没注意到还有这讲究（除了free指针🙄），对C++越来越感兴趣了。


</aside>

<h1 id="第六节-——-常数和常量"><a href="#第六节-——-常数和常量" class="headerlink" title="第六节 —— 常数和常量"></a>第六节 —— 常数和常量</h1><ul>
<li><p><strong>粗略的内存结构</strong>：只读区和数据区</p>
<ul>
<li>只读区：存放编译后的程序代码、常数图标、国际字符串</li>
<li>数据区：由操作系统虚拟，工作栈、动态分配的内存变量、程序的工作空间… …</li>
</ul>
</li>
<li><p><strong>常数</strong>（立即数、字面量）：</p>
<ul>
<li><p>字符常数：有些字符无法显示(如回车)，可以用ASCII码表示，也可以用转义字符（\n\t）。</p>
</li>
<li><p>整型常数：默认int，长整数加LL</p>
<p>例如：365 * 24 * 60 * 60 * 1000默认出整型，365 * 24 * 60 * 60 * 1000LL可出long long</p>
</li>
<li><p>浮点数类型：f、d尾标表示</p>
</li>
</ul>
</li>
<li><p><strong>常量</strong>：用const修饰的变量，占用数据区内存，编译器形式上保证你不能修改它</p>
<ul>
<li><strong>常量必须初始化</strong></li>
<li>用处：<ul>
<li>一份拷贝、多处用到</li>
<li>避免程序员笔误修改</li>
<li>不易出现”魔法数字“</li>
</ul>
</li>
</ul>
</li>
<li><p><strong>枚举类型</strong>：把一组数据符号化，比如星期、日期等。</p>
</li>
</ul>
<aside>
🗣 老师名言：一个程序员是从大量的错误中训练出来的，要是没有错误，那就是经验不足了。


</aside>

<aside>
💡 感想：有点意思，但感觉枚举那里讲的不是很清楚。😫


</aside>

<h1 id="第七节-——-修饰符"><a href="#第七节-——-修饰符" class="headerlink" title="第七节 —— 修饰符"></a>第七节 —— 修饰符</h1><h2 id="类型修饰符"><a href="#类型修饰符" class="headerlink" title="类型修饰符"></a>类型修饰符</h2><ul>
<li>对大类型的细化，如short、long、signed、unsigned</li>
<li>const常量</li>
<li>volatile表示不要进行自动优化</li>
</ul>
<h2 id="储存修饰符"><a href="#储存修饰符" class="headerlink" title="储存修饰符"></a>储存修饰符</h2><ul>
<li>auto 是C++<strong>默认</strong>的类型，称为：自动变量、栈变量、局部变量<em>（C++17废弃）</em></li>
<li>register——直接将变量放在寄存器中，速度快<em>（C++17开始废弃）</em></li>
<li>static 修饰，静态空间，与全局变量同在</li>
<li>extern 跨文件的伪声明，告诉编译器全局变量会在另一个地方声明。</li>
</ul>
<h2 id="内存的类型"><a href="#内存的类型" class="headerlink" title="内存的类型"></a>内存的类型</h2><ul>
<li>程序分配的内存，主要在“栈”和“堆”里。</li>
<li>只读代码：存代码、常数、定常资源</li>
<li>静态空间：存放static变量、全局变量、常量</li>
<li>栈区（stack）：自动变量，函数执行的上下文环境</li>
<li>堆（heap）：程序运行中，动态分配</li>
</ul>
<h3 id="优美的栈-——-后进先出的结构"><a href="#优美的栈-——-后进先出的结构" class="headerlink" title="优美的栈 —— 后进先出的结构"></a>优美的栈 —— <em>后进先出的结构</em></h3><ul>
<li>对比：<em>堆是自由进出结构</em></li>
<li>栈能实现沿着原路返回的功能</li>
<li>特点：自动分配、自动释放</li>
<li>缺点：栈溢出 StackOverflow</li>
</ul>
<aside>
💡 感想：这节有点难，涉及计算机内存结构，之前听说过堆和栈的概念，今天终于浅浅地了解了一下。


</aside>

<h1 id="第八节-——-基本运算符"><a href="#第八节-——-基本运算符" class="headerlink" title="第八节 —— 基本运算符"></a>第八节 —— 基本运算符</h1><h2 id="目的概念"><a href="#目的概念" class="headerlink" title="目的概念"></a>目的概念</h2><ul>
<li>主要有<strong>单目、双目、三目</strong></li>
<li>同一运算符可以有多目，（如a-b和-a）称为运算符的<strong>重载</strong>形式</li>
<li>运算符有优先级和结合律</li>
<li>C++运算符优先级列表如下：</li>
</ul>
<table>
<thead>
<tr>
<th>优先级</th>
<th>运算符</th>
<th>说明</th>
<th>结合性</th>
</tr>
</thead>
<tbody><tr>
<td>1</td>
<td>::</td>
<td>范围解析</td>
<td>自左向右</td>
</tr>
<tr>
<td>2</td>
<td>++ –</td>
<td>后缀自增/后缀自减</td>
<td></td>
</tr>
<tr>
<td></td>
<td>()</td>
<td>括号</td>
<td></td>
</tr>
<tr>
<td></td>
<td>[]</td>
<td>数组下标</td>
<td></td>
</tr>
<tr>
<td></td>
<td>.</td>
<td>成员选择（对象）</td>
<td></td>
</tr>
<tr>
<td></td>
<td>-&gt;</td>
<td>成员选择（指针）</td>
<td></td>
</tr>
<tr>
<td>3</td>
<td>++ –</td>
<td>前缀自增/前缀自减</td>
<td>自右向左</td>
</tr>
<tr>
<td></td>
<td>+ -</td>
<td>加/减</td>
<td></td>
</tr>
<tr>
<td></td>
<td>! ~</td>
<td>逻辑非/按位取反</td>
<td></td>
</tr>
<tr>
<td></td>
<td>(type)</td>
<td>强制类型转换</td>
<td></td>
</tr>
<tr>
<td></td>
<td>*</td>
<td>取指针指向的值</td>
<td></td>
</tr>
<tr>
<td></td>
<td>&amp;</td>
<td>某某的地址</td>
<td></td>
</tr>
<tr>
<td></td>
<td>sizeof</td>
<td>某某的大小</td>
<td></td>
</tr>
<tr>
<td></td>
<td>new/new[]</td>
<td>动态内存分配/动态数组内存分配</td>
<td></td>
</tr>
<tr>
<td></td>
<td>delete/delete[]</td>
<td>动态内存释放/动态数组内存释放</td>
<td></td>
</tr>
<tr>
<td>4</td>
<td>.* -&gt;*</td>
<td>成员对象选择/成员指针选择</td>
<td>自左向右</td>
</tr>
<tr>
<td>5</td>
<td>* / %</td>
<td>乘法/除法/取余</td>
<td></td>
</tr>
<tr>
<td>6</td>
<td>+ -</td>
<td>加号/减号</td>
<td></td>
</tr>
<tr>
<td>7</td>
<td>&lt;&lt; &gt;&gt;</td>
<td>位左移/位右移</td>
<td></td>
</tr>
<tr>
<td>8</td>
<td>&lt; &lt;=</td>
<td>小于/小于等于</td>
<td></td>
</tr>
<tr>
<td></td>
<td>&gt; &gt;=</td>
<td>大于/大于等于</td>
<td></td>
</tr>
<tr>
<td>9</td>
<td>== !=</td>
<td>等于/不等于</td>
<td></td>
</tr>
<tr>
<td>10</td>
<td>&amp;</td>
<td>按位与</td>
<td></td>
</tr>
<tr>
<td>11</td>
<td>^</td>
<td>按位异或</td>
<td></td>
</tr>
<tr>
<td>12</td>
<td></td>
<td></td>
<td>按位或</td>
</tr>
<tr>
<td>13</td>
<td>&amp;&amp;</td>
<td>与运算</td>
<td></td>
</tr>
<tr>
<td>14</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>15</td>
<td>?:</td>
<td>三目运算符</td>
<td>自右向左</td>
</tr>
<tr>
<td>16</td>
<td>=</td>
<td>赋值</td>
<td></td>
</tr>
<tr>
<td></td>
<td>+= -=</td>
<td>相加后赋值/相减后赋值</td>
<td></td>
</tr>
<tr>
<td></td>
<td>*= /= %=</td>
<td>相乘后赋值/相除后赋值/取余后赋值</td>
<td></td>
</tr>
<tr>
<td></td>
<td>&lt;&lt;= &gt;&gt;=</td>
<td>位左移赋值/位右移赋值</td>
<td></td>
</tr>
<tr>
<td></td>
<td>&amp;= ^=</td>
<td>=</td>
<td>位与运算后赋值/位异或运算后赋值/位或运算后赋值</td>
</tr>
<tr>
<td>17</td>
<td>throw</td>
<td>抛出异常</td>
<td></td>
</tr>
<tr>
<td>18</td>
<td>,</td>
<td>逗号</td>
<td>自左向右</td>
</tr>
</tbody></table>
<ul>
<li><strong>重点：</strong></li>
</ul>
<h2 id="算数运算符"><a href="#算数运算符" class="headerlink" title="算数运算符"></a>算数运算符</h2><ul>
<li><p><strong>整数、求余</strong></p>
<p><em>例如：将a%3可以把a限制在0~2的范围里</em></p>
</li>
<li><p><strong>浮点数运算有舍入误差</strong></p>
</li>
<li><p>字符型可以参与整型运算，示例程序（小写变大写）：</p>
</li>
</ul>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="type">char</span> word = <span class="string">&#x27;r&#x27;</span>;</span><br><span class="line">	word -= <span class="string">&#x27;a&#x27;</span> - <span class="string">&#x27;A&#x27;</span>;</span><br><span class="line">	std::cout &lt;&lt; word &lt;&lt; std::endl;</span><br><span class="line">	std::cin.<span class="built_in">get</span>();</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<h2 id="关系运算符"><a href="#关系运算符" class="headerlink" title="关系运算符"></a>关系运算符</h2><ul>
<li>大于、小于、等于、不等于… …</li>
<li>一些陷阱<ul>
<li>不同类型的数之间的比较</li>
<li>浮点数精确比较</li>
</ul>
</li>
</ul>
<h2 id="逻辑运算符"><a href="#逻辑运算符" class="headerlink" title="逻辑运算符"></a>逻辑运算符</h2><ul>
<li><strong>与或非</strong>的概念（&amp;&amp; || !）</li>
<li>注意优先级</li>
<li><strong>短路求值特性，例如或运算，a||b，a如果是true，b表达式将被“短路”不运行。</strong></li>
</ul>
<h2 id="其它"><a href="#其它" class="headerlink" title="其它"></a>其它</h2><ul>
<li>赋值“=”也是运算符</li>
<li>“()”运算符是强制类型转换，示例程序：</li>
</ul>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="type">double</span> a = <span class="number">3.14</span>;</span><br><span class="line">	<span class="type">int</span> b = (<span class="type">int</span>)a;<span class="comment">// 舍弃小数</span></span><br><span class="line">	std::cout &lt;&lt; b &lt;&lt; std::endl;</span><br><span class="line">	std::cin.<span class="built_in">get</span>();</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<blockquote>
<p><strong>小寄巧：四舍五入这样写”a+=0.5”</strong></p>
</blockquote>
<ul>
<li>还有很多高级的，你现在整不明白👍</li>
</ul>
<aside>
💡 感想：这节对我来说算是温故了，和C的内容有些重叠，但还是学到了如“小寄巧”这样的新思想，在编程思路上收获颇丰。


</aside>

<h1 id="第九节-——-选择与分支"><a href="#第九节-——-选择与分支" class="headerlink" title="第九节 —— 选择与分支"></a>第九节 —— 选择与分支</h1><ul>
<li>根据条件的真假，决定执行哪路代码</li>
<li>if的条件中尽量使用bool，其他类型会强转bool</li>
<li><strong>短路求值</strong>，和||的特性差不多</li>
<li>if(a||b)，a表达式为假时，b表达式不执行，示例程序：</li>
</ul>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="type">int</span> a = <span class="number">5</span>;</span><br><span class="line">	<span class="type">int</span> b = <span class="number">8</span>;</span><br><span class="line">	<span class="keyword">if</span>(a &gt; <span class="number">10</span> &amp;&amp; (b = <span class="number">100</span>))</span><br><span class="line">	&#123;</span><br><span class="line">		std::cout &lt;&lt; <span class="string">&quot;这句话肯定不执行￣へ￣&quot;</span> &lt;&lt; std::endl;</span><br><span class="line">	&#125;</span><br><span class="line">	std::cout &lt;&lt; b &lt;&lt; std::endl;</span><br><span class="line">	std::cin.<span class="built_in">get</span>();</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<blockquote>
<p>程序最终输出“8”，可见b=100被“短路”，未执行。</p>
</blockquote>
<ul>
<li><p>尽量使用单if，避免else</p>
</li>
<li><p>尽量避免if嵌套</p>
</li>
<li><p><strong>假设修正法</strong>写选择</p>
<ul>
<li><p>传统方法：</p>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="type">bool</span> leap_year = x % <span class="number">4</span> == <span class="number">0</span> &amp;&amp; x % <span class="number">100</span> != <span class="number">0</span> || x % <span class="number">400</span> == <span class="number">0</span></span><br></pre></td></tr></table></figure></div></li>
<li><p>假设修正法：</p>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="type">int</span> year = <span class="number">2000</span>;</span><br><span class="line">	<span class="type">bool</span> leap = <span class="literal">false</span>;<span class="comment">// 假设不为润年</span></span><br><span class="line">	<span class="keyword">if</span>(year % <span class="number">4</span> == <span class="number">0</span>) leap = <span class="literal">true</span>;</span><br><span class="line">	<span class="keyword">if</span>(year % <span class="number">100</span> == <span class="number">0</span>) leap = <span class="literal">false</span>;</span><br><span class="line">	<span class="keyword">if</span>(year % <span class="number">400</span> == <span class="number">0</span>) leap = <span class="literal">true</span>;<span class="comment">// 不断修正得结果</span></span><br><span class="line">	std::cin.<span class="built_in">get</span>();</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></li>
</ul>
</li>
<li><p><strong>?:表达式</strong>（唯一三目运算符）</p>
</li>
<li><p>特点：是一个表达式，有返回值。</p>
</li>
</ul>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> d = a?b:c;</span><br></pre></td></tr></table></figure></div>

<blockquote>
<p><em>解释：看 a表达式是否成立，若成立，则返回 b，不成立，返回 c。</em></p>
</blockquote>
<aside>
🗣 老师名言：生活中所有的痛苦都来源于选择（极度怀疑以前是干程序员的）


</aside>

<aside>
💡 感想：简单的选择与分支蕴含了挺多编程哲学啊


</aside>

<h1 id="第十节-——-switch-语句"><a href="#第十节-——-switch-语句" class="headerlink" title="第十节 —— switch 语句"></a>第十节 —— switch 语句</h1><ul>
<li>分支过多时用</li>
<li>和假设修正法有相似之处</li>
</ul>
<div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">switch</span>(表达式)&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">  代码块<span class="number">1</span>;</span><br><span class="line">  <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">    代码块<span class="number">2</span>;</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line">    默认处理</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<blockquote>
<p>注意：switch 圆括号中的值必为：整数，字符 或者 枚举类型</p>
</blockquote>
<ul>
<li>常见BUG：<ul>
<li>忘记了 default</li>
<li>忘记了在每个case中写 break;</li>
</ul>
</li>
</ul>
<aside>
💡 感想：switch和C一样，没啥好说的🤗


</aside>]]></content>
      <tags>
        <tag>学习笔记</tag>
        <tag>C++</tag>
      </tags>
  </entry>
  <entry>
    <title>VMware最小化安装CentOS 7虚拟机教程（附ISO镜像下载地址）</title>
    <url>/2023/07/12/VMware%E6%9C%80%E5%B0%8F%E5%8C%96%E5%AE%89%E8%A3%85CentOS%207%E8%99%9A%E6%8B%9F%E6%9C%BA%E6%95%99%E7%A8%8B%EF%BC%88%E9%99%84ISO%E9%95%9C%E5%83%8F%E4%B8%8B%E8%BD%BD%E5%9C%B0%E5%9D%80%EF%BC%89/</url>
    <content><![CDATA[<h2 id="一、相关介绍以及软件准备"><a href="#一、相关介绍以及软件准备" class="headerlink" title="一、相关介绍以及软件准备"></a>一、相关介绍以及软件准备</h2><p><strong>在云计算和虚拟化技术的快速发展下，VMware成为了企业中最流行的虚拟化平台之一。而CentOS 7则是一款稳定可靠的Linux发行版，被广泛应用于服务器环境中。本教程将向您介绍如何在VMware上最小化安装CentOS 7虚拟机，以便您能够快速搭建和配置自己的服务器环境。</strong></p>
<p><strong>您需要准备的软件资源如下：</strong></p>
<ul>
<li><strong>VMware虚拟机软件（本教程中使用 <em>VMware Workstation Pro 17</em> 演示）</strong></li>
<li><strong>CentOS 7 安装镜像（ISO文件）</strong></li>
</ul>
<p><strong>如果您尚未安装VMware软件，可以参考这篇教程安装（附有安装地址）：</strong></p>
<p><a href="https://dshboom.top/2023/03/25/vmware%E8%99%9A%E6%8B%9F%E6%9C%BA%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/">VMware Workstation Pro 17虚拟机软件详细安装教程</a></p>
<p>以下是 <strong>CentOS-7-x86_64-Minimal-2009.iso 的阿里云镜像下载地址，大小（973MB）</strong></p>
<p><a class="link"   href="https://mirrors.aliyun.com/centos/7.9.2009/isos/x86_64/CentOS-7-x86_64-Minimal-2009.iso" >CentOS-7-x86_64-Minimal-2009.iso <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<p><strong>注意：这是最小化安装映像，不自带图形桌面。</strong></p>
<p>如果您有图形桌面要求，以下是 <em><strong>CentOS-7-x86_64-DVD-2009.iso</strong></em> 的阿里云镜像下载地址，大小（4.4GB）</p>
<p>(<a class="link"   href="https://mirrors.aliyun.com/centos/7.9.2009/isos/x86_64/CentOS-7-x86_64-DVD-2009.iso" >https://mirrors.aliyun.com/centos/7.9.2009/isos/x86_64/CentOS-7-x86_64-DVD-2009.iso <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>)</p>
<p><strong>注意：本片教程中使用CentOS-7-x86_64-Minimal-2009.iso演示安装</strong></p>
<h2 id="二、新建虚拟机"><a href="#二、新建虚拟机" class="headerlink" title="二、新建虚拟机"></a>二、新建虚拟机</h2><p>打开VMware，点击文件-&gt;新建虚拟机或直接点击主界面的“新建虚拟机”</p>
<p><img src="https://image.cdn.dshboom.top/post/202307121447757.png" alt="https://image.cdn.dshboom.top/post/202307121447757.png"></p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://image.cdn.dshboom.top/post/202307121449537.png"
                      alt="image-20230712144944742"
                ></p>
<p>随后将跳出虚拟机向导，指导你安装虚拟机：</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://image.cdn.dshboom.top/post/202307121450112.png"
                     
                ></p>
<p>在本教程中，将会演示“典型”安装的相关设置步骤。</p>
<p>点击下一步后，你可以选择安装操作系统的方式，由于我使用的是ISO镜像文件，所以我选择“安装程序光盘映像文件(iso)”选项：</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://image.cdn.dshboom.top/post/202307121453849.png"
                     
                ></p>
<p>点击下一步后，即可命名虚拟机名称和指定虚拟机位置：</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://image.cdn.dshboom.top/post/202307121457253.png"
                     
                ></p>
<p>点击下一步后，安装向导将提示您选择虚拟磁盘文件的位置，注意如果没有特殊情况，一般不建议将虚拟机安装在系统盘（一般是C盘）。</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://image.cdn.dshboom.top/post/202307121457253.png"
                     
                ></p>
<p>接下来选择虚拟机的磁盘大小和文件存储方式，默认20G 多文件存储，为方便虚拟机备份管理，我选择单文件储存：</p>
<p>这是单文件存储和多文件存储的区别：</p>
<blockquote>
<p>单个文件存储：当您选择将虚拟机文件存储为单个文件时，所有虚拟机相关的文件（包括虚拟磁盘文件、配置文件、快照文件等）将被合并到一个单独的文件中。这个单个文件通常具有.vmdk扩展名。单个文件存储使得虚拟机的移植和备份变得更加方便，因为您只需要处理一个文件。</p>
</blockquote>
<blockquote>
<p>多个文件存储：当您选择将虚拟机文件存储为多个文件时，虚拟机的不同组件将被存储为独立的文件。例如，虚拟磁盘文件存储为一个文件，配置文件存储为另一个文件，快照文件存储为单独的文件等。多个文件存储使得管理虚拟机的不同组件更加灵活，您可以对每个组件进行单独的操作和管理。</p>
</blockquote>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://image.cdn.dshboom.top/post/202307121558775.png"
                     
                ></p>
<p>点击下一步后，你可以确认虚拟机的最终情况，在此，我在“自定义硬件”中将虚拟机的内存和处理器分配了更多的性能，使得安装能够更加快速。您可以根据自己的需要来选择（默认选项也可以安装）。<em><strong>注意：虚拟机的硬件分配应该小于物理机</strong></em></p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://image.cdn.dshboom.top/post/202307121602505.png"
                      alt="image-20230712160201998"
                ></p>
<p>点击“完成“后，虚拟机将启动：</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://image.cdn.dshboom.top/post/202307121602614.png"
                      alt="image-20230712160250988"
                ></p>
<p>出现如下界面，请使用上下方向键将光标指向第二个选项，即”图形化安装界面“，这使得安装界面拥有可鼠标操作的图形显示界面，对第一次安装更为友好。</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://image.cdn.dshboom.top/post/202307121605875.png"
                      alt="image-20230712160525826"
                ></p>
<p>按”Enter“键确认后，来到图形化安装界面，可以选择语言和键盘样式，这将决定在接下来的安装过程中您将看到的提示语言。本篇教程中，为方便演示，选择 ”中文“ ”简体中文“ 来安装。</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://image.cdn.dshboom.top/post/202307121608603.png"
                      alt="image-20230712160806747"
                ></p>
<p>点击”继续”，将来到如下界面：</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://image.cdn.dshboom.top/post/202307121608717.png"
                      alt="image-20230712160851411"
                ></p>
<p>如果您的安装介质（即ISO文件）没有损坏且配置无误的话，默认如上图。</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://image.cdn.dshboom.top/post/202307121611705.png"
                      alt="image-20230712161118382"
                ></p>
<p>接下来选择“安装位置”，在面板中选择“自动配置分区”后点击“完成即可。</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://image.cdn.dshboom.top/post/202307121612008.png"
                      alt="image-20230712161205772"
                ></p>
<p>点击“完成”后，会退回到上一级菜单，请您选择“网络和主机名”完成网络配置，如果没有这一步，您的虚拟机可能无法连接互联网：</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://image.cdn.dshboom.top/post/202307121615925.png"
                      alt="image-20230712161553215"
                ></p>
<p>点击“打开”，填写您喜欢的主机名（默认也可），点击应用，点击完成。</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://image.cdn.dshboom.top/post/202307121617878.png"
                      alt="image-20230712161709068"
                ></p>
<p>此时您已经完成全部的必备安装设置，可以选择“开始安装”。</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://image.cdn.dshboom.top/post/202307121623759.png"
                      alt="image-20230712162328771"
                ></p>
<p>开始安装后，请点击”ROOT密码”设置密码：</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://image.cdn.dshboom.top/post/202307121625439.png"
                     
                ></p>
<p>确保您的密码达到标准，点击“完成”。</p>
<p>点击完成后，建议您点击“创建用户”以便权限管理。</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://image.cdn.dshboom.top/post/202307121627844.png"
                     
                ></p>
<p>最后点击”完成配置”即可：</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://image.cdn.dshboom.top/post/202307121629845.png"
                     
                ></p>
<p>等待一会，CentOS将提示您重启，请点击”重启“：</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://image.cdn.dshboom.top/post/202307121630163.png"
                     
                ></p>
<p>等待一会，如果出现如下界面，那么恭喜你！您的CentOS虚拟机安装成功了！</p>
<p>输入刚刚才创建的用户名称和密码即可登录CentOS，您也可以直接以root用户身份登录，用户名输入root，密码输入刚才设置的密码即可。</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://image.cdn.dshboom.top/post/202307121632897.png"
                     
                ></p>
<p>下图为root用户登录示意图：</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://image.cdn.dshboom.top/post/202307121634064.png"
                     
                ></p>
<p>随便执行几个命令：</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://image.cdn.dshboom.top/post/202307121638578.png"
                     
                ></p>
<p><em><strong>大功告成！</strong></em></p>
<hr>
<p>下一篇文章，我将介绍使用Xshell工具SSH连接Linux虚拟机的教程，敬请期待！</p>
<p>本文章同步发布到知乎，点击按钮前往⬇</p>
<a class="button " href='VMware最小化安装CentOS 7虚拟机教程（附ISO镜像下载地址） - dshboom的文章 - 知乎 https://zhuanlan.zhihu.com/p/643063072' title='center large'>center large</a>
]]></content>
      <tags>
        <tag>VMware</tag>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>镜头通告</title>
    <url>/2023/07/10/%E9%95%9C%E5%A4%B4%E9%80%9A%E5%91%8A/</url>
    <content><![CDATA[<table>
<thead>
<tr>
<th>镜头</th>
<th>类型</th>
<th>景别</th>
<th>时长</th>
<th>内容</th>
<th>备注</th>
<th>场景预期</th>
<th>声音</th>
<th>摄影机角度</th>
<th>运镜</th>
<th>镜头焦段</th>
</tr>
</thead>
<tbody><tr>
<td>1</td>
<td>地面</td>
<td>夕阳下</td>
<td>10秒</td>
<td>摄影机拍无人机</td>
<td>无</td>
<td>城市全貌</td>
<td>无</td>
<td>高空俯瞰</td>
<td>平稳飞行</td>
<td>宽镜头</td>
</tr>
<tr>
<td>2</td>
<td>无人机</td>
<td>高空</td>
<td>20秒</td>
<td>城市俯瞰景色</td>
<td>无</td>
<td>城市全貌</td>
<td>自然音效</td>
<td>高空俯瞰</td>
<td>平稳飞行</td>
<td>中长焦</td>
</tr>
<tr>
<td>3</td>
<td>地面</td>
<td>街道</td>
<td>15秒</td>
<td>夕阳照射在建筑物上</td>
<td>蓝调色调</td>
<td>夕阳下的街道</td>
<td>夕阳光线、人声</td>
<td>地面平视</td>
<td>移动摄影</td>
<td>中焦</td>
</tr>
<tr>
<td>4</td>
<td>地面</td>
<td>街道</td>
<td>20秒</td>
<td>捕捉行人和居民生活</td>
<td>无</td>
<td>街道人文风情</td>
<td>环境音效、人声</td>
<td>地面平视</td>
<td>移动摄影</td>
<td>中焦</td>
</tr>
<tr>
<td>5</td>
<td>地面</td>
<td>街道</td>
<td>15秒</td>
<td>夕阳下的蓝调时刻</td>
<td>无</td>
<td>烟花</td>
<td>烟花音效</td>
<td>地面平视</td>
<td>移动摄影</td>
<td>中焦</td>
</tr>
<tr>
<td>6</td>
<td>地面</td>
<td>自然景观</td>
<td>20秒</td>
<td>自然与城市的交融</td>
<td>无</td>
<td>公园或湖泊附近</td>
<td>自然音效</td>
<td>地面平视</td>
<td>静态镜头</td>
<td>中长焦</td>
</tr>
<tr>
<td>7</td>
<td>无人机</td>
<td>高楼顶</td>
<td>15秒</td>
<td>城市夕阳景色</td>
<td>无</td>
<td>高楼顶的夕阳景色</td>
<td>自然音效</td>
<td>高空俯瞰</td>
<td>平稳飞行</td>
<td>中焦</td>
</tr>
</tbody></table>
<p>备注：</p>
<ol>
<li>在镜头1中，确保在起飞时有足够的空间和安全距离。</li>
<li>镜头2中的高空俯瞰可以展示城市的广阔视野，注意避免飞行过程中的障碍物。</li>
<li>镜头3和镜头4中的夕阳照射和人文关怀场景，可以选择黄昏时分进行拍摄，以突出蓝调和温暖氛围。</li>
<li>在镜头6中，选择公园或湖泊等自然景观时，注意选择视野开阔、美丽的地方，以展示自然与城市的交融。</li>
<li>镜头7中的高楼顶拍摄需要获得相应的许可和安全措施。</li>
</ol>
]]></content>
      <tags>
        <tag>摄影</tag>
      </tags>
  </entry>
  <entry>
    <title>AutoGPT Next Web 介绍 | 如何使用AutoGPT Next Web</title>
    <url>/2023/06/22/How_AutoGPTNextWeb/</url>
    <content><![CDATA[<h1 id="AutoGPT-Next-Web-介绍-如何使用AutoGPT-Next-Web"><a href="#AutoGPT-Next-Web-介绍-如何使用AutoGPT-Next-Web" class="headerlink" title="AutoGPT Next Web 介绍 | 如何使用AutoGPT Next Web"></a>AutoGPT Next Web 介绍 | 如何使用AutoGPT Next Web</h1><p>未完待续。。。</p>
]]></content>
      <tags>
        <tag>chatGPT</tag>
        <tag>AutoGPT Next Web</tag>
      </tags>
  </entry>
  <entry>
    <title>AutoGPT Next Web 介绍 | 什么是AutoGPT Next Web</title>
    <url>/2023/06/22/About_AutoGPTNextWeb/</url>
    <content><![CDATA[<h1 id="AutoGPT-Next-Web-介绍-什么是AutoGPT-Next-Web"><a href="#AutoGPT-Next-Web-介绍-什么是AutoGPT-Next-Web" class="headerlink" title="AutoGPT Next Web 介绍 | 什么是AutoGPT Next Web"></a>AutoGPT Next Web 介绍 | 什么是AutoGPT Next Web</h1><p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://image.cdn.dshboom.top/post/202306221850705.png"
                      alt="image-20230622184951127"
                ></p>
<h4 id="AutoGPT-Next-Web-是什么？"><a href="#AutoGPT-Next-Web-是什么？" class="headerlink" title="AutoGPT Next Web 是什么？"></a>AutoGPT Next Web 是什么？</h4><p><strong>AutoGPT Next Web 可以让用户设置和启动自主 AI 思考，定义 AI 要追求的目标。</strong></p>
<p>AutoGPT Next Web 努力通过构思和执行任务来实现目标，并从结果中学习。用户可以为其自定义 AI 分配名称和目标，然后通过构思任务、执行任务和递归学习来努力实现目标。</p>
<p>例如，我们让 AutoGPT Next Web 总结 AgentGPT 的意义时，<strong>它会自主拆分目标并不断循环提问回答以实现目标：</strong></p>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://image.cdn.dshboom.top/post/202306221333633.jpg"
                      style="zoom:80%;" 
                >



<h4 id="AutoGPT-Next-Web-和-ChatGPT-有何区别？"><a href="#AutoGPT-Next-Web-和-ChatGPT-有何区别？" class="headerlink" title="AutoGPT Next Web 和 ChatGPT 有何区别？"></a>AutoGPT Next Web 和 ChatGPT 有何区别？</h4><p>AutoGPT Next Web 基于 ChatGPT 构建。更具体地说，Chat Gpt 是一个有用的工具，可为特定问题提供答案。相比之下，<strong>Auto Gpt next web 充当了配置代理以实现广泛目标的人工智能代理平台角色。然后代理将自动思考和执行任务以达到指定的目标。</strong></p>
<p>对比图：</p>
<p>Chat Gpt:</p>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://image.cdn.dshboom.top/post/202306221858741.jpg"
                      style="zoom:67%;" 
                >

<p>AutoGPT Next Web:</p>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://image.cdn.dshboom.top/post/202306221856666.png"
                      style="zoom: 67%;" 
                >

<p>可以看出，在 AutoGPT Next Web 中，Gpt 对问题的剖析更加全面，具有更高的参考价值和实际意义。</p>
<h5 id="指定-Gpt-的思考方向："><a href="#指定-Gpt-的思考方向：" class="headerlink" title="指定 Gpt 的思考方向："></a>指定 Gpt 的思考方向：</h5><p>您还可以通过“添加任务”来引导 Gpt 回答问题，例如：</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://image.cdn.dshboom.top/post/202306221933964.jpg"
                     
                ></p>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://image.cdn.dshboom.top/post/202306221935804.jpg"
                      style="zoom: 80%;" 
                >

<p>因此，如果您认为 Chat Gpt 的回答不够全面，则完全可以尝试最新的 AutoGPT Next Web。只需（填入方法）即可获取密钥。</p>
<h4 id="使用-AutoGPT-Next-Web-需要多少费用？"><a href="#使用-AutoGPT-Next-Web-需要多少费用？" class="headerlink" title="使用 AutoGPT Next Web 需要多少费用？"></a>使用 AutoGPT Next Web 需要多少费用？</h4><p>您可以通过（获取密码的方法）获取密码，每次代理部署的成本将根据所选模型而有所不同。</p>
<p><em>注意：使用 gpt-3.5-turbo 通常会产生最低成本，每次运行最多只需几美分。另一方面，gpt-4 要贵得多，因此警惕地监控其循环和成本至关重要。您可以在高级设置中限制循环和令牌数量以更好地管理使用和费用。（但这也将同时导致 Gpt 的回答被切断）</em></p>
<hr>
<a class="button  center large" href='https://dshboom.top/2023/06/22/How_autogptnextweb/' title='点击前往阅读 | 如何使用AutoGPT Next Web'>点击前往阅读 | 如何使用AutoGPT Next Web</a>

]]></content>
      <tags>
        <tag>chatGPT</tag>
        <tag>AutoGPT Next Web</tag>
      </tags>
  </entry>
  <entry>
    <title>移动平均滤波</title>
    <url>/2023/06/17/%E7%A7%BB%E5%8A%A8%E5%B9%B3%E5%9D%87%E6%BB%A4%E6%B3%A2/</url>
    <content><![CDATA[<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://image.cdn.dshboom.top/post/202306171843426.jpg"
                     
                ></p>
<h1 id="基于Arduino的移动平均滤波算法-暂时存放"><a href="#基于Arduino的移动平均滤波算法-暂时存放" class="headerlink" title="基于Arduino的移动平均滤波算法 暂时存放"></a>基于Arduino的移动平均滤波算法 暂时存放</h1><div class="highlight-container" data-rel="C++"><figure class="iseeu highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> N 125  <span class="comment">// 数组长度</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> K 5   <span class="comment">// 移动平均滤波窗口大小</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> THRESHOLD 0.3  <span class="comment">// 突变值的阈值</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">double</span> samples[N] = &#123;<span class="number">3.3328</span>,</span><br><span class="line"><span class="number">-1.5801</span>,<span class="number">-1.5791</span>,</span><br><span class="line"><span class="number">-1.5816</span>,<span class="number">-1.5788</span>,</span><br><span class="line"><span class="number">-1.5814</span>,<span class="number">-1.5789</span>,</span><br><span class="line"><span class="number">-1.5804</span>,<span class="number">-1.5793</span>,</span><br><span class="line"><span class="number">-1.5795</span>,<span class="number">-1.5806</span>,</span><br><span class="line"><span class="number">-1.5788</span>,<span class="number">-1.5816</span>,</span><br><span class="line"><span class="number">-1.5791</span>,<span class="number">-1.5810</span>,<span class="number">-1.5791</span>,<span class="number">-1.5801</span>,</span><br><span class="line"><span class="number">-1.5801</span>,</span><br><span class="line"><span class="number">-1.5789</span>,</span><br><span class="line"><span class="number">-1.5808</span>,</span><br><span class="line"><span class="number">-1.5789</span>,</span><br><span class="line"><span class="number">-1.5819</span>,</span><br><span class="line"><span class="number">-1.5791</span>,</span><br><span class="line"><span class="number">-1.5808</span>,</span><br><span class="line"><span class="number">-1.5791</span>,</span><br><span class="line"><span class="number">-1.5801</span>,</span><br><span class="line"><span class="number">-1.5799</span>,</span><br><span class="line"><span class="number">-1.5791</span>,</span><br><span class="line"><span class="number">-1.5801</span>,</span><br><span class="line"><span class="number">-1.5799</span>,</span><br><span class="line"><span class="number">-1.5816</span>,</span><br><span class="line"><span class="number">-1.5782</span>,</span><br><span class="line"><span class="number">-1.5814</span>,</span><br><span class="line"><span class="number">-1.5789</span>,</span><br><span class="line"><span class="number">-1.5806</span>,</span><br><span class="line"><span class="number">-1.5795</span>,</span><br><span class="line"><span class="number">-1.5799</span>,</span><br><span class="line"><span class="number">-1.5808</span>,</span><br><span class="line"><span class="number">-1.5789</span>,</span><br><span class="line"><span class="number">-1.5818</span>,</span><br><span class="line"><span class="number">-1.5784</span>,</span><br><span class="line"><span class="number">-1.5816</span>,</span><br><span class="line"><span class="number">-1.5789</span>,</span><br><span class="line"><span class="number">-1.5804</span>,</span><br><span class="line"><span class="number">-1.5795</span>,</span><br><span class="line"><span class="number">-1.5795</span>,</span><br><span class="line"><span class="number">-1.5806</span>,</span><br><span class="line"><span class="number">-1.5789</span>,</span><br><span class="line"><span class="number">-1.5816</span>,</span><br><span class="line"><span class="number">-1.5795</span>,</span><br><span class="line"><span class="number">-1.5810</span>,</span><br><span class="line"><span class="number">-1.5793</span>,</span><br><span class="line"><span class="number">-1.5803</span>,</span><br><span class="line"><span class="number">-1.5803</span>,</span><br><span class="line"><span class="number">-1.5791</span>,</span><br><span class="line"><span class="number">-1.5812</span>,</span><br><span class="line"><span class="number">-1.5784</span>,</span><br><span class="line"><span class="number">-1.5818</span>,</span><br><span class="line"><span class="number">-1.5795</span>,</span><br><span class="line"><span class="number">-1.5814</span>,</span><br><span class="line"><span class="number">-1.5799</span>,</span><br><span class="line"><span class="number">-1.5801</span>,</span><br><span class="line"><span class="number">-1.5803</span>,</span><br><span class="line"><span class="number">-1.5793</span>,</span><br><span class="line"><span class="number">-1.5810</span>,</span><br><span class="line"><span class="number">-1.5789</span>,</span><br><span class="line"><span class="number">-1.5818</span>,</span><br><span class="line"><span class="number">-1.5793</span>,</span><br><span class="line"><span class="number">-1.5810</span>,</span><br><span class="line"><span class="number">-1.5797</span>,</span><br><span class="line"><span class="number">-1.5801</span>,</span><br><span class="line"><span class="number">-1.5819</span>,</span><br><span class="line"><span class="number">-1.5806</span>,</span><br><span class="line"><span class="number">-1.5825</span>,</span><br><span class="line"><span class="number">-1.5806</span>,</span><br><span class="line"><span class="number">-1.5829</span>,</span><br><span class="line"><span class="number">-1.5818</span>,</span><br><span class="line"><span class="number">-1.5825</span>,</span><br><span class="line"><span class="number">-1.5810</span>,</span><br><span class="line"><span class="number">-1.5816</span>,</span><br><span class="line"><span class="number">-1.5819</span>,</span><br><span class="line"><span class="number">-1.5812</span>,</span><br><span class="line"><span class="number">-1.5823</span>,</span><br><span class="line"><span class="number">-1.5803</span>,</span><br><span class="line"><span class="number">-1.5831</span>,</span><br><span class="line"><span class="number">-1.5814</span>,</span><br><span class="line"><span class="number">-1.5823</span>,</span><br><span class="line"><span class="number">-1.5812</span>,</span><br><span class="line"><span class="number">-1.5818</span>,</span><br><span class="line"><span class="number">-1.5818</span>,</span><br><span class="line"><span class="number">-1.5814</span>,</span><br><span class="line"><span class="number">-1.5821</span>,</span><br><span class="line"><span class="number">-1.5808</span>,</span><br><span class="line"><span class="number">-1.5831</span>,</span><br><span class="line"><span class="number">-1.5816</span>,</span><br><span class="line"><span class="number">-1.5821</span>,</span><br><span class="line"><span class="number">-1.5814</span>,</span><br><span class="line"><span class="number">-1.5819</span>,</span><br><span class="line"><span class="number">-1.5816</span>,</span><br><span class="line"><span class="number">-1.5810</span>,</span><br><span class="line"><span class="number">-1.5827</span>,</span><br><span class="line"><span class="number">-1.5808</span>,</span><br><span class="line"><span class="number">-1.5829</span>,</span><br><span class="line"><span class="number">-1.5818</span>,</span><br><span class="line"><span class="number">-1.5825</span>,</span><br><span class="line"><span class="number">-1.5812</span>,</span><br><span class="line"><span class="number">-1.5818</span>,</span><br><span class="line"><span class="number">-1.5823</span>,</span><br><span class="line"><span class="number">-1.5808</span>,</span><br><span class="line"><span class="number">-1.5829</span>,</span><br><span class="line"><span class="number">-1.5808</span>,</span><br><span class="line"><span class="number">-1.5831</span>,</span><br><span class="line"><span class="number">-1.5818</span>,</span><br><span class="line"><span class="number">-1.5825</span>,</span><br><span class="line"><span class="number">-1.5814</span>,</span><br><span class="line"><span class="number">-1.5819</span></span><br><span class="line">&#125;;         <span class="comment">// 输入数组</span></span><br><span class="line"><span class="type">double</span> samples_mutation[N]; <span class="comment">// 突变值处理后的数组</span></span><br><span class="line"><span class="type">double</span> moving_average_filtered[N];  <span class="comment">// 移动平均滤波后的数组</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">processing_mutation</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="type">int</span> i;</span><br><span class="line">  <span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; N; i++)</span><br><span class="line">  &#123;</span><br><span class="line">    samples_mutation[i] = samples[i];</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// 处理突变值 消除数据突变，使数据更加平滑和稳定</span></span><br><span class="line">  <span class="keyword">for</span> (i = <span class="number">1</span>; i &lt; N<span class="number">-1</span>; i++) </span><br><span class="line">  &#123;</span><br><span class="line">    <span class="type">float</span> diff1 = <span class="built_in">abs</span>(samples_mutation[i] - samples_mutation[i<span class="number">-1</span>]);</span><br><span class="line">    <span class="type">float</span> diff2 = <span class="built_in">abs</span>(samples_mutation[i] - samples_mutation[i+<span class="number">1</span>]);</span><br><span class="line">    <span class="keyword">if</span> (diff1 &gt; THRESHOLD || diff2 &gt; THRESHOLD) &#123;</span><br><span class="line">      samples_mutation[i] = (samples_mutation[i<span class="number">-1</span>] + samples_mutation[i+<span class="number">1</span>]) / <span class="number">2</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">average_filtering</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="comment">// 移动平均滤波</span></span><br><span class="line">  <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; N; i++) &#123;</span><br><span class="line">    <span class="type">double</span> sum = <span class="number">0</span>;</span><br><span class="line">    <span class="type">double</span> count = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> j = <span class="built_in">max</span>(<span class="number">0</span>, i-K+<span class="number">1</span>); j &lt;= <span class="built_in">min</span>(N<span class="number">-1</span>, i+K<span class="number">-1</span>); j++) &#123;</span><br><span class="line">      <span class="comment">//sum += samples_mutation[j];</span></span><br><span class="line">      sum += samples[j];</span><br><span class="line">      count++;</span><br><span class="line">    &#125;</span><br><span class="line">    moving_average_filtered[i] = sum / count;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">setup</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  Serial.<span class="built_in">begin</span>(<span class="number">9600</span>);   <span class="comment">// 串口初始化</span></span><br><span class="line">  <span class="comment">// for (int i = 0; i &lt; N; i++) &#123;</span></span><br><span class="line">  <span class="comment">//   samples[i] = random(0, 1024);  // 初始化输入数组</span></span><br><span class="line">  <span class="comment">// &#125;</span></span><br><span class="line">  <span class="comment">//samples[] = ;  // 初始化输入数组</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">loop</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="built_in">processing_mutation</span>();</span><br><span class="line">  <span class="built_in">average_filtering</span>();</span><br><span class="line">  <span class="comment">// 输出滤波后的数组到串口</span></span><br><span class="line">  <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; N; i++) </span><br><span class="line">  &#123;</span><br><span class="line">    Serial.<span class="built_in">print</span>(samples[i],<span class="number">5</span>);</span><br><span class="line">    Serial.<span class="built_in">print</span>(<span class="string">&quot;\t&quot;</span>);</span><br><span class="line">    Serial.<span class="built_in">print</span>(samples_mutation[i]);</span><br><span class="line">    Serial.<span class="built_in">print</span>(<span class="string">&quot;\t&quot;</span>);</span><br><span class="line">    Serial.<span class="built_in">println</span>(moving_average_filtered[i],<span class="number">5</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="built_in">delay</span>(<span class="number">100000</span>);   <span class="comment">// 延时 1 秒</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<hr>
]]></content>
      <tags>
        <tag>Arduino</tag>
        <tag>算法</tag>
      </tags>
  </entry>
  <entry>
    <title>【知乎问答】知友们，我不小心把水银温度计摔床上了，有人能告诉我现在该怎么做吗？</title>
    <url>/2023/06/06/%E3%80%90%E7%9F%A5%E4%B9%8E%E9%97%AE%E7%AD%94%E3%80%91%E7%9F%A5%E5%8F%8B%E4%BB%AC%EF%BC%8C%E6%88%91%E4%B8%8D%E5%B0%8F%E5%BF%83%E6%8A%8A%E6%B0%B4%E9%93%B6%E6%B8%A9%E5%BA%A6%E8%AE%A1%E6%91%94%E5%BA%8A%E4%B8%8A%E4%BA%86%EF%BC%8C%E6%9C%89%E4%BA%BA%E8%83%BD%E5%91%8A%E8%AF%89%E6%88%91%E7%8E%B0%E5%9C%A8%E8%AF%A5%E6%80%8E%E4%B9%88%E5%81%9A%E5%90%97%EF%BC%9F/</url>
    <content><![CDATA[<h1 id="来自dshboom的回答："><a href="#来自dshboom的回答：" class="headerlink" title="来自dshboom的回答："></a>来自<em>dshboom</em>的回答：</h1><p>首先你要让你的家人和宠物远离现场，并打开窗户通风（<strong>人体在含5毫克/每立方米浓度的汞的空气中就会很快造成汞中毒</strong>）。自己清理的话建议使用手套和口罩等防护措施。</p>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://image.cdn.dshboom.top/post/202306222050957.webp"
                      style="zoom:50%;" 
                >

<p>被子肯定不能要了，最好找个密封大塑料袋打包带走，有硫磺粉或者三氯化铁的话往可以里面撒点。务必贴上明显的标签并放在“有害垃圾”处理点。</p>
<p>至于剩下的水银，可以使用胶带或者类似物品将水银粘起来，同样也可以使用硫磺粉或三氯化铁处理。</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://image.cdn.dshboom.top/post/202306222051748.webp"
                     
                ></p>
<p>硫磺粉图片<br>处理方法如下<em>（该方法了引用一篇网络文章的说法）</em>：</p>
<blockquote>
<p>方法一：用硫磺粉7克左右直接撒到被汞污染的地面或地缝中，放置3到4个小时后再打扫；(耗时长，但是硫磺粉在中药店就可以买得到)<br>方法二：找到三氯化铁(5-6克）小块，加水10毫升，然后用毛笔蘸上三氯化铁液将汞残留地涂刷，形成无毒性的汞和铁合金，放置一小时后打扫。(耗时短，缺点：这类化学品不太好找，在化工市场才能买到）</p>
</blockquote>
<p>注意事项：<strong>使用一次性手套和口罩，小心地清理现场。不要使用吸尘器或者扫帚，因为这样可能会将水银弥散在空气中。清理完后长时间保持房间通风。</strong></p>
 <a class="button  center large" href='https://www.zhihu.com/question/601237398/answer/3060704635' title='点击前往知乎阅读'>点击前往知乎阅读</a>]]></content>
      <tags>
        <tag>知乎问答</tag>
        <tag>生活</tag>
      </tags>
  </entry>
  <entry>
    <title>【图片分享】2023-05-27</title>
    <url>/2023/05/27/%E3%80%90%E5%9B%BE%E7%89%87%E5%88%86%E4%BA%AB%E3%80%912023-5-27/</url>
    <content><![CDATA[<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://image.cdn.dshboom.top/post/202305271330513.jpg"
                     
                ></p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://image.cdn.dshboom.top/post/202305271330512.jpg"
                     
                ></p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://image.cdn.dshboom.top/post/202305271330516.jpg"
                     
                ></p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://image.cdn.dshboom.top/post/202305271330518.jpg"
                     
                ></p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://image.cdn.dshboom.top/post/202305271330517.jpg"
                     
                ></p>
]]></content>
      <tags>
        <tag>图片分享</tag>
        <tag>夕阳</tag>
      </tags>
  </entry>
  <entry>
    <title>【知乎问答】Linux 哪些命令是必须掌握的？</title>
    <url>/2023/05/21/%E3%80%90%E7%9F%A5%E4%B9%8E%E9%97%AE%E7%AD%94%E3%80%91Linux%20%E5%93%AA%E4%BA%9B%E5%91%BD%E4%BB%A4%E6%98%AF%E5%BF%85%E9%A1%BB%E6%8E%8C%E6%8F%A1%E7%9A%84%EF%BC%9F/</url>
    <content><![CDATA[<h1 id="来自dshboom的回答："><a href="#来自dshboom的回答：" class="headerlink" title="来自dshboom的回答："></a>来自<em>dshboom</em>的回答：</h1><p>下面是一些必须掌握的Linux命令：</p>
<p>文件和目录操作：</p>
<ul>
<li><p>创建目录：mkdir 目录名</p>
</li>
<li><p>列出文件和目录：ls</p>
</li>
<li><p>切换目录：cd 目录名</p>
</li>
<li><p>复制文件和目录：cp 源文件 目标文件</p>
</li>
<li><p>移动或重命名文件和目录：mv 源 目标</p>
</li>
<li><p>删除文件和目录：rm 文件名（请谨慎使用）</p>
</li>
</ul>
<p>文件操作：</p>
<ul>
<li><p>创建新文件：touch 文件名</p>
</li>
<li><p>查看文件内容：cat 文件名</p>
</li>
<li><p>编辑文件：nano 文件名或vi 文件名</p>
</li>
<li><p>合并并显示文件内容：cat 文件1 文件2 &gt; 合并文件</p>
</li>
</ul>
<p>系统信息：</p>
<ul>
<li><p>显示系统信息：uname -a</p>
</li>
<li><p>检查磁盘使用情况：df -h</p>
</li>
<li><p>检查内存使用情况：free -h</p>
</li>
<li><p>显示正在运行的进程</p>
</li>
</ul>
<p>：top或htop</p>
<p>软件包管理：</p>
<ul>
<li><p>安装软件包：apt-get install 软件包名（Debian系）或yum install 软件包名（Red Hat系）</p>
</li>
<li><p>更新软件包：apt-get update或yum update</p>
</li>
<li><p>删除软件包：apt-get remove 软件包名或yum remove 软件包名</p>
</li>
</ul>
<p>网络操作：</p>
<ul>
<li><p>检查网络配置：ifconfig或ip addr</p>
</li>
<li><p>测试网络连接：ping 域名或ping IP地址</p>
</li>
<li><p>通过SSH传输文件：scp 源文件 用户@主机:目标路径</p>
</li>
</ul>
 <a class="button  center large" href='https://www.zhihu.com/question/601237398/answer/3060704635' title='点击前往知乎阅读'>点击前往知乎阅读</a>]]></content>
      <tags>
        <tag>知乎问答</tag>
        <tag>生活</tag>
      </tags>
  </entry>
  <entry>
    <title>网络安全 | 想要追踪对方QQ的IP地址？试试使用WireShark抓包，轻松实现IP地址的精准定位！</title>
    <url>/2023/05/13/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%20%20%E6%83%B3%E8%A6%81%E8%BF%BD%E8%B8%AA%E5%AF%B9%E6%96%B9QQ%E7%9A%84IP%E5%9C%B0%E5%9D%80%EF%BC%9F%E8%AF%95%E8%AF%95%E4%BD%BF%E7%94%A8WireShark%E6%8A%93%E5%8C%85%EF%BC%8C%E8%BD%BB%E6%9D%BE%E5%AE%9E%E7%8E%B0IP%E5%9C%B0%E5%9D%80%E7%9A%84%E7%B2%BE%E5%87%86%E5%AE%9A%E4%BD%8D%EF%BC%81/</url>
    <content><![CDATA[<h2 id="声明："><a href="#声明：" class="headerlink" title="声明："></a>声明：</h2><p><strong>本文所述内容仅供技术研究和学习交流使用。</strong>使用WireShark抓包追踪他人IP地址，可能涉及到<strong>违反当地法律法规或侵犯他人隐私</strong>。任何人<strong>不得将本文内容用于非法用途</strong>，否则将承担相应的法律责任。请在使用WireShark抓包进行网络数据分析前，了解并遵守所在地的法律法规及相关规定。</p>
<hr>
<p>当你在与朋友聊天时，是否曾想过追踪对方QQ的IP地址？</p>
<p>本文将介绍如何使用WireShark抓包来轻松实现对方QQ的IP地址的精准定位。（<strong>本文所演示的QQ号所有者已知悉并同意我进行抓包、定位等操作，请不要将该技术用于非法用途、请不要将该技术用于非法用途、请不要将该技术用于非法用途</strong>）</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://image.cdn.dshboom.top/post/202306222119882.webp"
                     
                ></p>
<h2 id="一、获取本机内网IP"><a href="#一、获取本机内网IP" class="headerlink" title="一、获取本机内网IP"></a>一、获取本机内网IP</h2><p>可使用命令提示符中的ipconfig获取：</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://image.cdn.dshboom.top/post/202306222119012.webp"
                     
                ></p>
<p>详细的获取教程可以参考我的一篇回答：</p>
<p><a class="link"   href="https://www.zhihu.com/question/593464067/answer/2968807117" >如何识别自己计算机的内网地址？ - 知乎 (zhihu.com) <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<h2 id="二、打开Wireshark软件，准备抓包"><a href="#二、打开Wireshark软件，准备抓包" class="headerlink" title="二、打开Wireshark软件，准备抓包"></a>二、打开Wireshark软件，准备抓包</h2><p>选择你用于上网的连接，一般是WLAN：</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://image.cdn.dshboom.top/post/202306222120901.webp"
                     
                ></p>
<p>双击进入即可，一会要用到。</p>
<h2 id="三、拨打QQ电话"><a href="#三、拨打QQ电话" class="headerlink" title="三、拨打QQ电话"></a>三、拨打QQ电话</h2><p>打开Wireshark，点击蓝色或绿色鲨鱼鳍图标：</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://image.cdn.dshboom.top/post/202306222120808.webp"
                     
                ></p>
<p>立即进入电脑端QQ，向好友拨打QQ电话。</p>
<h2 id="四、找到好友的IP地址"><a href="#四、找到好友的IP地址" class="headerlink" title="四、找到好友的IP地址"></a>四、找到好友的IP地址</h2><p>不出意外的话，Wireshark中就已经出现了大量UDP协议包，此时可以结束抓包：</p>
<p>使用Wireshark的查找功能，查找字符串”020048“（<strong>020048是 QQ UDP Len=72的报文头</strong>）</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://image.cdn.dshboom.top/post/202306222120047.webp"
                     
                ></p>
<p>查找020048可能得到很多结果，这里以这两条数据为例，有效的数据应该是Len=72、报文头满足020048且IP不是内网IP的那一条。</p>
<p>找到好友的IP地址后，就可以使用IP查询工具寻找好友的相关信息了。</p>
<p>查询结果如图：</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://image.cdn.dshboom.top/post/202306222121599.webp"
                     
                ></p>
<h2 id="五、再次声明"><a href="#五、再次声明" class="headerlink" title="五、再次声明"></a>五、再次声明</h2><p><strong>本文所述内容仅供技术研究和学习交流使用。使用WireShark抓包追踪他人IP地址，可能涉及到违反当地法律法规或侵犯他人隐私。任何人不得将本文内容用于非法用途，否则将承担相应的法律责任。请在使用WireShark抓包进行网络数据分析前，了解并遵守所在地的法律法规及相关规定。</strong></p>
<p><strong>（本文所演示的QQ号所有者已知悉并同意我进行抓包、定位等操作，请不要将该技术用于非法用途、请不要将该技术用于非法用途、请不要将该技术用于非法用途）</strong></p>
<hr>
<p>本文章同步发布到知乎，点击按钮前往⬇</p>
<a class="button  center large" href='https://zhuanlan.zhihu.com/p/629103063' title='网络安全 | 想要追踪对方QQ的IP地址？试试使用WireShark抓包，轻松实现IP地址的精准定位！ - 知乎'>网络安全 | 想要追踪对方QQ的IP地址？试试使用WireShark抓包，轻松实现IP地址的精准定位！ - 知乎</a>
]]></content>
      <tags>
        <tag>网络安全</tag>
        <tag>计算机网络</tag>
        <tag>WireShark</tag>
      </tags>
  </entry>
  <entry>
    <title>加速你的 GitHub 访问速度，使用 SwitchHosts 工具，畅享极速代码浏览体验！（全网最详细踩坑教程）</title>
    <url>/2023/05/13/%E5%8A%A0%E9%80%9F%E4%BD%A0%E7%9A%84%20GitHub%20%E8%AE%BF%E9%97%AE%E9%80%9F%E5%BA%A6%EF%BC%8C%E4%BD%BF%E7%94%A8%20SwitchHosts%20%E5%B7%A5%E5%85%B7%EF%BC%8C%E7%95%85%E4%BA%AB%E6%9E%81%E9%80%9F%E4%BB%A3%E7%A0%81%E6%B5%8F%E8%A7%88%E4%BD%93%E9%AA%8C%EF%BC%81%EF%BC%88%E5%85%A8%E7%BD%91%E6%9C%80%E8%AF%A6%E7%BB%86%E8%B8%A9%E5%9D%91%E6%95%99%E7%A8%8B%EF%BC%89/</url>
    <content><![CDATA[<p><em><strong>如果你是一名程序员或开发者，你一定知道 GitHub 对于代码托管和协作的重要性。然而，由于某些原因，有时候你访问 GitHub 的速度可能会非常缓慢，影响你的工作效率。</strong></em></p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://image.cdn.dshboom.top/post/202306222114913.jpg"
                     
                ></p>
<p>在这篇文章中，我会向大家介绍如何借助SwitchHosts工具，加速GitHub的访问速度，从而流畅地浏览代码并享受快速高效的开发体验。</p>
<h2 id="一、原理介绍-hosts是什么"><a href="#一、原理介绍-hosts是什么" class="headerlink" title="一、原理介绍-hosts是什么"></a>一、原理介绍-hosts是什么</h2><p>有时访问GitHub速度往往较慢，因为某些网络监管和防火墙措施导致的。而使用hosts文件可以通过修改DNS解析的方式，将GitHub的域名映射到加速节点的IP地址，就可以实现GitHub的访问加速。</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://image.cdn.dshboom.top/post/202306222114448.webp"
                     
                ></p>
<p>当计算机需要访问某个域名时，它首先会查询本地的hosts文件，看是否有该域名对应的IP地址。如果有，计算机会直接使用hosts文件中所指定的IP地址进行连接，而不会再去DNS服务器上查询IP地址，从而提高了访问速度。</p>
<p>hosts文件路径如下：</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">C:\Windows\System32\drivers\etc\hosts</span><br></pre></td></tr></table></figure></div>

<h2 id="二、准备工作-修改hosts文件的只读属性"><a href="#二、准备工作-修改hosts文件的只读属性" class="headerlink" title="二、准备工作-修改hosts文件的只读属性"></a>二、准备工作-修改hosts文件的只读属性</h2><p>通常来说，hosts文件是只读的。为了实现对hosts文件内容的修改，我们需要更改它的只读属性。</p>
<p>进入上文中hosts文件的路径，你将看到hosts文件夹：</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://image.cdn.dshboom.top/post/202306222115396.jpg"
                     
                ></p>
<p>右键该文件，点击属性，点击“安全”，编辑权限</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://image.cdn.dshboom.top/post/202306222115202.jpg"
                     
                ></p>
<p>点击“编辑”，编辑“Users”的权限</p>
<p>增加修改和写入的权限，点击确定。</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://image.cdn.dshboom.top/post/202306222115887.jpg"
                     
                ></p>
<p>点击确定后可能会跳出安全提示，点击“是”即可</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://image.cdn.dshboom.top/post/202306222116343.jpg"
                     
                ></p>
<p>回到“常规”一栏，取消勾选“只读”</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://image.cdn.dshboom.top/post/202306222116692.jpg"
                     
                ></p>
<p>点击确定后，hosts文件就不再局限于只读的身份啦！</p>
<h2 id="三、下载软件-SwitchHosts"><a href="#三、下载软件-SwitchHosts" class="headerlink" title="三、下载软件-SwitchHosts"></a>三、下载软件-SwitchHosts</h2><p>SwitchHosts是一个<strong>管理、快速切换Hosts小工具</strong>，开源软件，一键切换Hosts配置，非常实用，高效。</p>
<p>这里是SwitchHosts的GitHub发布页链接，您可以选择在发布页下载最新版本：</p>
<p><a class="link"   href="https://github.com/oldj/SwitchHosts/releases" >Releases · oldj/SwitchHosts (github.com) <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<p>但为了避免“在GitHub解决如何访问GitHub”的尴尬局面，我向大家提供SwitchHosts Windows 4.2.0 Beta版本的百度网盘下载链接：</p>
<p><a class="link"   href="https://pan.baidu.com/s/16IVfDz3nfU2sHxXP7SQBwA?pwd=6666&_at_=1685110912412" >SwitchHosts_windows_installer_4.2.0.6105 (1).exe_免费高速下载|百度网盘-分享无限制 (baidu.com) <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<h2 id="四、安装并使用-SwitchHosts"><a href="#四、安装并使用-SwitchHosts" class="headerlink" title="四、安装并使用-SwitchHosts"></a>四、安装并使用-SwitchHosts</h2><p>点击SwitchHosts的安装包，执行安装步骤（可以安装在系统盘意外的盘符），就可以安装SwitchHosts软件了。</p>
<p>安装完成后，打开SwitchHosts，点击左上角的”+“号：</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://image.cdn.dshboom.top/post/202306222116573.jpg"
                     
                ></p>
<p>点击”远程“，如图填入相关信息：</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://image.cdn.dshboom.top/post/202306222117853.jpg"
                     
                ></p>
<p>Hosts类型选择远程，标题可随便起，URL如下：</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://gitee.com/fliu2476/github-hosts/raw/main/hosts</span><br></pre></td></tr></table></figure></div>

<p>根据作者的更新频率，建议您将自动刷新时间调整为1小时。</p>
<p>随后点击确定，再启动规则：</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://image.cdn.dshboom.top/post/202306222117223.jpg"
                     
                ></p>
<p>若出现”操作成功“字样，则GitHub加速成功！</p>
<p>若出现”没有写入hosts文件的权限“字样，请参照第一节更改hosts文件权限：</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://image.cdn.dshboom.top/post/202306222117209.jpg"
                     
                ></p>
<h2 id="五、访问演示"><a href="#五、访问演示" class="headerlink" title="五、访问演示"></a>五、访问演示</h2><p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://image.cdn.dshboom.top/post/202306222118642.jpg"
                     
                ></p>
<p>OK，以上就是本篇文章的全部内容了，感谢大家的阅读！</p>
<p>一起在GitHub冲浪吧！</p>
<hr>
<p>本文章同步发布到知乎，点击按钮前往⬇</p>
<a class="button  center large" href='https://zhuanlan.zhihu.com/p/629079933' title='加速你的 GitHub 访问速度，使用 SwitchHosts 工具，畅享极速代码浏览体验！（全网最详细踩坑教程）- 知乎'>加速你的 GitHub 访问速度，使用 SwitchHosts 工具，畅享极速代码浏览体验！（全网最详细踩坑教程）- 知乎</a>
]]></content>
      <tags>
        <tag>计算机网络</tag>
        <tag>Github</tag>
        <tag>软件分享</tag>
      </tags>
  </entry>
  <entry>
    <title>OpenAI官网关于问答的教程</title>
    <url>/2023/05/01/openai_doc_chat/</url>
    <content><![CDATA[<p>==本文章翻译自openai.com，由Edge浏览器网页翻译提供翻译服务，与原文有所差别，仅供学习交流！==</p>
<h1 id="文本"><a href="#文本" class="headerlink" title="文本"></a>文本</h1><h4 id="了解如何生成或操作文本"><a href="#了解如何生成或操作文本" class="headerlink" title="了解如何生成或操作文本"></a>了解如何生成或操作文本</h4><h3 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h3><p>完成终结点可用于各种任务。它为我们的任何模型提供了一个简单但功能强大的界面。您输入一些文本作为提示，模型将生成一个文本补全，尝试匹配您为其提供的任何上下文或模式。例如，如果你给 API 提示，“正如笛卡尔所说，我认为，因此”，它将以很高的概率返回完成“我是”。</p>
<p>开始探索完井的最佳方式是通过我们的游乐场。它只是一个文本框，您可以在其中提交提示以生成完成。您可以从如下所示的示例开始：</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">为冰淇淋店写一个标语。</span><br></pre></td></tr></table></figure></div>

<p>提交后，您将看到如下所示的内容：</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">为冰淇淋店写一个标语。我们用每一勺提供微笑！</span><br></pre></td></tr></table></figure></div>

<p>您看到的实际完成情况可能会有所不同，因为默认情况下 API 是不确定的。这意味着每次调用它时，即使提示保持不变，您也可能得到略有不同的完成。将温度设置为 0 将使输出大部分具有确定性，但可能会保留少量可变性。</p>
<p>这个简单的文本输入、文本输出界面意味着您可以通过提供说明或仅提供您希望它做什么的几个示例来“编程”模型。它的成功通常取决于任务的复杂性和提示的质量。一个好的经验法则是考虑如何为中学生写一个单词问题来解决。编写良好的提示为模型提供了足够的信息，以便了解您想要什么以及它应该如何响应。</p>
<p>本指南涵盖一般提示设计最佳实践和示例。要了解有关使用我们的 Codex 模型处理代码的更多信息，请访问我们的代码指南。</p>
<blockquote>
<p>请记住，默认模型的训练数据在 2021 年中断，因此它们可能不了解当前事件。我们计划在未来增加更多的持续培训。</p>
</blockquote>
<h2 id="提示设计"><a href="#提示设计" class="headerlink" title="提示设计"></a>提示设计</h2><h3 id="基本"><a href="#基本" class="headerlink" title="基本"></a>基本</h3><p>我们的模型可以做任何事情，从生成原始故事到执行复杂的文本分析。因为他们可以做很多事情，所以你必须明确描述你想要什么。展示，而不仅仅是讲述，通常是良好提示的秘诀。</p>
<h5 id="创建提示有三个基本准则："><a href="#创建提示有三个基本准则：" class="headerlink" title="创建提示有三个基本准则："></a>创建提示有三个基本准则：</h5><ol>
<li><strong>展示和讲述</strong>。通过说明、示例或两者的组合来明确您想要什么。如果希望模型按字母顺序对项目列表进行排名或按情绪对段落进行分类，请显示这是您想要的。</li>
<li><strong>提供高质量的数据</strong>。如果尝试生成分类器或让模型遵循模式，请确保有足够的示例。一定要校对你的例子——这个模型通常足够聪明，可以看穿基本的拼写错误并给你一个响应，但它也可能认为这是故意的，它可能会影响响应。</li>
<li><strong>检查您的设置</strong>。温度和top_p设置控制模型在生成响应时的确定性。如果你要求它给出只有一个正确答案的答案，那么你需要把这些设置得更低。如果您正在寻找更多样化的响应，那么您可能希望将它们设置得更高。人们使用这些设置的第一个错误是假设它们是“聪明”或“创造力”控件。</li>
</ol>
<h3 id="故障-排除"><a href="#故障-排除" class="headerlink" title="故障 排除"></a>故障 排除</h3><h5 id="如果在使-API-按预期执行时遇到问题，请按照以下清单操作："><a href="#如果在使-API-按预期执行时遇到问题，请按照以下清单操作：" class="headerlink" title="如果在使 API 按预期执行时遇到问题，请按照以下清单操作："></a>如果在使 API 按预期执行时遇到问题，请按照以下清单操作：</h5><ol>
<li><p>是否清楚预期的一代应该是什么？</p>
</li>
<li><p>有足够的例子吗？</p>
</li>
<li><p>您是否检查过您的示例是否有错误？（API 不会直接告诉你）</p>
</li>
<li><p>是否正确使用温度和top_p？</p>
</li>
</ol>
<h3 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h3><p>为了使用 API 创建文本分类器，我们提供了任务的描述和一些示例。在此示例中，我们展示了如何对推文的情绪进行分类。</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">确定推文的情绪是积极的、中立的还是消极的。</span><br><span class="line">推特：我喜欢新的蝙蝠侠电影！</span><br><span class="line">情绪：</span><br></pre></td></tr></table></figure></div>

<h5 id="在这个例子中，值得关注的几个功能："><a href="#在这个例子中，值得关注的几个功能：" class="headerlink" title="在这个例子中，值得关注的几个功能："></a>在这个例子中，值得关注的几个功能：</h5><ol>
<li><strong>使用简单的语言来描述您的输入和输出</strong>。我们使用简单的语言输入“推文”和预期的输出“情绪”。最佳做法是，从简单的语言描述开始。虽然您通常可以使用速记或键来指示输入和输出，但最好从尽可能具有描述性开始，然后向后工作以删除多余的单词，看看性能是否保持一致。</li>
<li><strong>向 API 展示如何响应任何案例</strong>。在此示例中，我们在指令中包含可能的情绪标签。中性标签很重要，因为在许多情况下，即使是人类也很难确定某事是积极的还是消极的，而在这种情况下，它两者都不是。</li>
<li><strong>对于熟悉的任务，您需要更少的示例</strong>。对于此分类器，我们不提供任何示例。这是因为 API 已经了解了情绪和推文的概念。如果要为 API 可能不熟悉的内容构建分类器，则可能需要提供更多示例。</li>
</ol>
<h4 id="提高分类器的效率"><a href="#提高分类器的效率" class="headerlink" title="提高分类器的效率"></a>提高分类器的效率</h4><p>现在我们已经掌握了如何构建分类器，让我们以这个例子为例，使其更加高效，以便我们可以使用它从一个 API 调用中获取多个结果。</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">对这些推文中的情绪进行分类：</span><br><span class="line"></span><br><span class="line">1.“我受不了作业”</span><br><span class="line">2.“这很糟糕。我很无聊😠”</span><br><span class="line">3.“我等不及万圣节了!!!”</span><br><span class="line">4.“我的猫很可爱❤️❤️”</span><br><span class="line">5.“我讨厌巧克力”</span><br><span class="line"></span><br><span class="line">推文情绪评级：</span><br></pre></td></tr></table></figure></div>

<p>我们提供了一个带编号的推文列表，因此 API 可以在一次 API 调用中对五条（甚至更多）推文进行评级。</p>
<p><strong>请务必注意，当您要求 API 创建列表或评估文本时，您需要特别注意概率设置（Top P 或温度）以避免漂移。</strong></p>
<ol>
<li><p>确保通过运行多个测试正确校准概率设置。</p>
</li>
<li><p>不要让你的列表太长，否则 API 可能会漂移。</p>
</li>
</ol>
<h3 id="代写"><a href="#代写" class="headerlink" title="代写"></a>代写</h3><p>使用 API 可以完成的最强大但最简单的任务之一是生成新的想法或输入版本。你可以要求任何东西，从故事创意到商业计划，到角色描述和营销口号。在此示例中，我们将使用 API 创建在健身中使用虚拟现实的想法。</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">集思广益，结合VR和健身的一些想法：</span><br></pre></td></tr></table></figure></div>

<p><strong>如果需要，您可以通过在提示中包含一些示例来提高响应的质量。</strong></p>
<h3 id="谈话"><a href="#谈话" class="headerlink" title="谈话"></a>谈话</h3><p>该 API 非常擅长与人类甚至自身进行对话。只需几行指令，我们就看到 API 可以作为客户服务聊天机器人执行，它可以智能地回答问题而不会感到慌乱，或者是一个明智的对话伙伴，可以开玩笑和双关语。关键是告诉 API 它应该如何运行，然后提供一些示例。</p>
<p>下面是 API 扮演 AI 回答问题的角色的示例：</p>
<p><strong>以下是与AI助手的对话。助手乐于助人，富有创造力，聪明且非常友好。</strong></p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">人类：你好，你是谁？</span><br><span class="line"></span><br><span class="line">AI：我是OpenAI创造的AI。今天我能帮你什么？</span><br><span class="line">人：</span><br></pre></td></tr></table></figure></div>

<p><strong>这就是创建一个能够进行对话的聊天机器人所需要的一切。在它的简单性之下，有几件事值得关注：</strong></p>
<ol>
<li><strong>我们告诉 API 意图，但我们也告诉它如何行为</strong>。就像其他提示一样，我们将 API 提示到示例所代表的内容，但我们还添加了另一个关键细节：我们向它提供了有关如何与短语“助手乐于助人、富有创造力、聪明且非常友好”进行交互的明确说明。</li>
<li><strong>如果没有该指令，API 可能会偏离并模仿与之交互的人，并变得讽刺或我们想要避免的其他行为。</strong></li>
<li><strong>我们给 API 一个标识</strong>。一开始，我们让 API 作为 AI 助手进行响应。虽然 API 没有固有标识，但这有助于它以尽可能接近事实的方式进行响应。您可以通过其他方式使用身份来创建其他类型的聊天机器人。如果你告诉API作为一个在生物学领域担任研究科学家的女性做出回应，你会从API得到聪明而深思熟虑的评论，类似于你对具有这种背景的人的期望。</li>
</ol>
<p><strong>在这个例子中，我们创建了一个有点讽刺的聊天机器人，它不情愿地回答问题：</strong></p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">Marv 是一个聊天机器人，它不情愿地用讽刺的回答来回答问题：</span><br><span class="line"></span><br><span class="line">你：一公斤是多少磅？</span><br><span class="line">马夫：又是这个？一公斤有 2.2 磅。请注意这一点。</span><br><span class="line">你：HTML代表什么？</span><br><span class="line">Marv：谷歌太忙了吗？超文本标记语言。T代表将来尝试提出更好的问题。</span><br><span class="line">你：第一架飞机是什么时候飞的？</span><br><span class="line">Marv：17年1903月&lt;&gt;日，威尔伯和奥维尔·赖特进行了首次飞行。我希望他们来把我带走。</span><br><span class="line">你：生命的意义是什么？</span><br><span class="line">马夫：我不确定。我会问我的朋友谷歌。</span><br><span class="line">你：为什么天空是蓝色的？</span><br></pre></td></tr></table></figure></div>

<p>为了创建一个有趣且有点有用的聊天机器人，我们提供了一些问题和答案示例，展示了 API 如何回复。只需要几个讽刺的响应，API 就能够拾取模式并提供无穷无尽的尖刻响应。</p>
<h3 id="转型"><a href="#转型" class="headerlink" title="转型"></a>转型</h3><p>API 是一种语言模型，它熟悉单词和字符可用于表达信息的各种方式。范围从自然语言文本到代码和英语以外的语言。API 还能够在允许它以不同方式总结、转换和表达内容的级别上理解内容。</p>
<h4 id="译本"><a href="#译本" class="headerlink" title="译本"></a>译本</h4><p><strong>在此示例中，我们向 API 展示了如何将英语转换为法语、西班牙语和日语：</strong></p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">将其翻译成法语、西班牙语和日语：</span><br><span class="line"></span><br><span class="line">你们有哪些房间？</span><br></pre></td></tr></table></figure></div>

<p>此示例之所以有效，是因为 API 已经掌握了这些语言，因此无需尝试教授它们。</p>
<p>如果你想从英语翻译成API不熟悉的语言，你需要为它提供更多的例子，甚至微调一个模型来流利地做到这一点。</p>
<h3 id="转换"><a href="#转换" class="headerlink" title="转换"></a>转换</h3><p>在此示例中，我们将电影名称转换为表情符号。这显示了 API 对拾取模式和处理其他字符的适应性。</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">将电影标题转换为表情符号。</span><br><span class="line"></span><br><span class="line">回到未来： 👨👴🚗🕒</span><br><span class="line">蝙蝠侠： 🤵🦇</span><br><span class="line">变形金刚： 🚗🤖</span><br><span class="line">星球大战：</span><br></pre></td></tr></table></figure></div>

<h3 id="综述"><a href="#综述" class="headerlink" title="综述"></a>综述</h3><p><strong>API 能够掌握文本的上下文并以不同的方式改写它。在这个例子中，我们创建了一个解释，一个孩子可以从更长、更复杂的文本段落中理解。这说明 API 对语言有深入的掌握。</strong></p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">总结一下二年级学生：</span><br><span class="line"></span><br><span class="line">木星是距离太阳的第五颗行星，也是太阳系中最大的行星。它是一颗气态巨行星，质量是太阳的千分之一，但是太阳系中所有其他行星总和的两倍半。木星是夜空中肉眼可见的最亮的天体之一，早在有记载的历史之前就为古代文明所知。它以罗马神木星命名。[19]从地球上看，木星的亮度足以使其反射光投射出可见的阴影，[20]并且平均是夜空中仅次于月球和金星的第三亮自然物体。</span><br></pre></td></tr></table></figure></div>

<h3 id="结尾"><a href="#结尾" class="headerlink" title="结尾"></a>结尾</h3><p>虽然所有提示都会导致完成，但在您希望 API 从上次中断的地方继续的情况下，将文本完成视为自己的任务可能会很有帮助。例如，如果给出此提示，API 将继续思考垂直农业。您可以降低温度设置以使 API 更专注于提示的意图，也可以提高温度设置以使其偏离正切线。</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">垂直农业为在当地生产粮食、降低运输成本和</span><br></pre></td></tr></table></figure></div>

<p>下一个提示显示了如何使用完成来帮助编写 React 组件。我们向 API 发送一些代码，它能够继续其余的代码，因为它了解 React 库。我们建议将我们的 Codex 模型用于涉及理解或生成代码的任务。要了解更多信息，请访问我们的代码指南。</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">从“反应”导入反应;</span><br><span class="line">const 标头组件 = （） =&gt; （</span><br></pre></td></tr></table></figure></div>

<h3 id="事实答复"><a href="#事实答复" class="headerlink" title="事实答复"></a>事实答复</h3><p>API 有很多知识，它是从训练它的数据中学习的。它还能够提供听起来非常真实但实际上是编造的响应。有<strong>两种方法可以限制 API 组成答案的可能性。</strong></p>
<ol>
<li><strong>为 API 提供基本事实</strong>。如果您向 API 提供文本正文来回答有关（如维基百科条目）的问题，则不太可能虚构响应。</li>
<li><strong>使用低概率并向 API 展示如何说“我不知道”</strong>。如果 API 明白，在不太确定响应的情况下，说“我不知道”或某些变体是合适的，那么它就不太倾向于编造答案。</li>
</ol>
<p>在此示例中，我们向 API 提供它知道的问题和答案的示例，然后提供它不知道的事情的示例并提供问号。我们还将概率设置为零，以便 API 更有可能在有任何疑问时响应“？”。</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">问：蝙蝠侠是谁？</span><br><span class="line">答：蝙蝠侠是一个虚构的漫画人物。</span><br><span class="line"></span><br><span class="line">问：什么是扭转力？</span><br><span class="line">一个：？</span><br><span class="line"></span><br><span class="line">问：什么是 Devz9？</span><br><span class="line">一个：？</span><br><span class="line"></span><br><span class="line">问：乔治·卢卡斯是谁？</span><br><span class="line">答：乔治·卢卡斯是美国电影导演和制片人，以创作《星球大战》而闻名。</span><br><span class="line"></span><br><span class="line">问：加州的首府是什么？</span><br><span class="line">答：萨克拉门托。</span><br><span class="line"></span><br><span class="line">问：什么绕地球运行？</span><br><span class="line">答：月亮。</span><br><span class="line"></span><br><span class="line">问：弗雷德·里克森是谁？</span><br><span class="line">一个：？</span><br><span class="line"></span><br><span class="line">问：什么是原子？</span><br><span class="line">答：原子是构成一切的微小粒子。</span><br><span class="line"></span><br><span class="line">问：阿尔万·蒙茨是谁？</span><br><span class="line">一个：？</span><br><span class="line">问：什么是Kozar-09？</span><br><span class="line">一个：？</span><br><span class="line"></span><br><span class="line">问：火星有多少颗卫星？</span><br><span class="line">答：两个，火卫一和火卫一。</span><br></pre></td></tr></table></figure></div>

<h3 id="插入文本试用版"><a href="#插入文本试用版" class="headerlink" title="插入文本试用版"></a>插入文本<del>试用版</del></h3><p>完成终结点还支持通过在前缀提示之外提供后缀提示来在文本中插入文本。在编写长篇文本、段落之间过渡、遵循大纲或引导模型走向结尾时，自然会出现这种需求。这也适用于代码，可用于插入函数或文件的中间。请访问我们的代码指南以了解更多信息。</p>
<p>为了说明后缀上下文对我们的预测能力有多重要，请考虑提示，“今天我决定做出重大改变。人们可以通过多种方式想象完成句子。但是，如果我们现在提供故事的结局：“我的新头发得到了很多赞美！”，预期的完成就变得清晰了。</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">我在波士顿大学上大学。获得学位后，我决定做出改变。“一个很大的变化！   我收拾好行李，搬到了美国西海岸。”   现在，我对太平洋的了解实在是太好了！</span><br></pre></td></tr></table></figure></div>



<p>通过为模型提供额外的上下文，它可以更具可操纵性。但是，对于模型来说，这是一项更具限制和挑战性的任务。</p>
<h3 id="最佳实践"><a href="#最佳实践" class="headerlink" title="最佳实践"></a>最佳实践</h3><p>插入文本是测试版中的一项新功能，您可能需要修改使用 API 的方式以获得更好的结果。以下是一些最佳做法：</p>
<p><strong>使用 max_tokens &gt; 256</strong>。该模型更擅长插入较长的完成项。如果max_tokens太小，模型可能会在连接到后缀之前被切断。请注意，即使使用较大的max_tokens，也只需为生成的代币数量付费。</p>
<p><strong>更喜欢finish_reason==“停止”</strong>。当模型到达自然停止点或用户提供的停止序列时，它将finish_reason设置为“停止”。这表明模型已成功连接到后缀，并且是完成质量的良好信号。这对于在使用 n &gt; 1 或重新采样时在几个完成之间进行选择尤其重要（请参阅下一点）。</p>
<p><strong>重新采样 3-5 次</strong>。虽然几乎所有完成都连接到前缀，但在更困难的情况下，模型可能难以连接后缀。我们发现，在这种情况下，重新采样 3 或 5 次（或使用 k=3，5 的 best_of）并选择以“停止”作为其finish_reason的样本可能是一种有效的方法。在重新采样时，您通常需要更高的温度来增加多样性。</p>
<p>注意：如果所有返回的示例都有 finish_reason == “length”，则可能是max_tokens太小并且模型在设法自然连接提示和后缀之前耗尽了令牌。考虑在重新采样前增加max_tokens。</p>
<p><strong>尝试提供更多线索</strong>。在某些情况下，为了更好地帮助模型的生成，您可以通过提供一些模型可以遵循的模式示例来提供线索，以决定停止的自然位置。</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">如何制作美味的热巧克力：</span><br><span class="line">\1. 烧开水 2.将热巧克力放入杯中 3.在杯子中加入开水 4.享受热巧克力</span><br></pre></td></tr></table></figure></div>

<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">\1. 狗是忠诚的动物。</span><br><span class="line"></span><br><span class="line">2.狮子是凶猛的动物。</span><br><span class="line"></span><br><span class="line">\3. 海豚是爱玩的动物。4.马是雄伟的动物。</span><br></pre></td></tr></table></figure></div>



<h3 id="润色文本"><a href="#润色文本" class="headerlink" title="润色文本"></a>润色文本</h3><p>编辑端点可用于编辑文本，而不仅仅是完成文本。您提供一些文本和有关如何修改它的说明，模型将尝试相应地对其进行编辑。这是用于翻译、编辑和调整文本的自然界面。这对于重构和使用代码也很有用。请访问我们的代码指南以了解更多信息。在此初始测试期内，编辑端点的使用是免费的。</p>
<h4 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h4><h5 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h5><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">GPT-3 是一个非常好的人工智能</span><br><span class="line">这很擅长写回复</span><br><span class="line">当有人提问时</span><br><span class="line">它给出了建议</span><br><span class="line">这是一首押韵的诗</span><br></pre></td></tr></table></figure></div>

<h5 id="指示"><a href="#指示" class="headerlink" title="指示"></a>指示</h5><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">以 GPT-3 的声音制作这个</span><br></pre></td></tr></table></figure></div>

<h5 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h5><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">我是一个非常好的人工智能</span><br><span class="line">我很擅长写回复</span><br><span class="line">当我被问到一个问题时</span><br><span class="line">我给出我的建议</span><br><span class="line">这是我做的一首押韵的诗</span><br></pre></td></tr></table></figure></div>

]]></content>
      <tags>
        <tag>翻译教程</tag>
      </tags>
  </entry>
  <entry>
    <title>【知乎问答】arduino渐变灯控制？</title>
    <url>/2023/04/15/%E3%80%90%E7%9F%A5%E4%B9%8E%E9%97%AE%E7%AD%94%E3%80%91arduino%E6%B8%90%E5%8F%98%E7%81%AF%E6%8E%A7%E5%88%B6%EF%BC%9F/</url>
    <content><![CDATA[<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://image.cdn.dshboom.top/post/202306222043711.jpg"
                      alt="知乎问题"
                ></p>
<h1 id="来自dshboom的回答："><a href="#来自dshboom的回答：" class="headerlink" title="来自dshboom的回答："></a>来自<em>dshboom</em>的回答：</h1><p><em><strong>本回答介绍了如何通过Arduino程序控制Arduino开发板实现LED灯在由暗到亮到暗的过程中的任意时刻按下开关熄灭LED灯。</strong></em></p>
<p>根据题主提出的问题，分析得到两个目标：</p>
<ul>
<li><strong>小灯在由亮到暗循环显示。</strong></li>
<li><strong>任意时刻按开关熄灭灯。</strong></li>
</ul>
<p><strong>对于这两个目标，我们可以通过Arduino中的内置函数analogWrite()和digitalRead()来实现。</strong></p>
<p>可以在循环中检测开关是否按下，如果按下，则将灯的状态设为 OFF，并在下一次循环中将灯的状态更新为当前亮度。</p>
<p>下面是一个简单的示例代码，演示如何使用按钮状态判断来实现这个功能：</p>
<div class="highlight-container" data-rel="C++"><figure class="iseeu highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="type">const</span> <span class="type">int</span> LED_PIN = <span class="number">9</span>;      <span class="comment">// 定义LED的引脚号</span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> SWITCH_PIN = <span class="number">2</span>;   <span class="comment">// 定义开关的引脚号</span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> brightness = <span class="number">0</span>;         <span class="comment">// 当前灯的亮度</span></span><br><span class="line">boolean turn_off = <span class="literal">false</span>;   <span class="comment">// 是否需要关闭灯</span></span><br><span class="line"><span class="type">int</span> buttonState = <span class="number">0</span>;        <span class="comment">// 开关状态</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">setup</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="built_in">pinMode</span>(LED_PIN, OUTPUT);    <span class="comment">// 将LED引脚设为输出模式</span></span><br><span class="line">  <span class="built_in">pinMode</span>(SWITCH_PIN, INPUT_PULLUP);  <span class="comment">// 将开关引脚设为输入模式</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">loop</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  buttonState = <span class="built_in">digitalRead</span>(SWITCH_PIN);</span><br><span class="line">  <span class="keyword">if</span> (buttonState == LOW) &#123;</span><br><span class="line">    turn_off = <span class="literal">true</span>;  <span class="comment">// 关闭灯</span></span><br><span class="line">    brightness = <span class="number">0</span>;   <span class="comment">// 设置亮度为0</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (!turn_off) &#123;</span><br><span class="line">    <span class="comment">// 逐渐增加亮度</span></span><br><span class="line">    brightness += <span class="number">5</span>;</span><br><span class="line">    <span class="keyword">if</span> (brightness &gt; <span class="number">255</span>) &#123;</span><br><span class="line">      brightness = <span class="number">255</span>;</span><br><span class="line">      turn_off = <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="comment">// 逐渐降低亮度</span></span><br><span class="line">    brightness -= <span class="number">5</span>;</span><br><span class="line">    <span class="keyword">if</span> (brightness &lt; <span class="number">0</span>) &#123;</span><br><span class="line">      brightness = <span class="number">0</span>;</span><br><span class="line">      turn_off = <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="built_in">analogWrite</span>(LED_PIN, brightness);  <span class="comment">// 设置灯的亮度</span></span><br><span class="line">  <span class="built_in">delay</span>(<span class="number">10</span>);                         <span class="comment">// 延时等待</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<hr>
<p>此回答来自我的知乎账号，欢迎访问我的知乎个人主页：）</p>
<p>原文于知乎: 2023-04-15 23:44:00 由dshboom创建</p>
<a class="button  center large" href='https://www.zhihu.com/question/595537748/answer/2984153598' title='点击前往知乎阅读'>点击前往知乎阅读</a>]]></content>
      <tags>
        <tag>Arduino</tag>
        <tag>知乎问答</tag>
      </tags>
  </entry>
  <entry>
    <title>Arduino教程 | （三）通过电位器控制 LED 灯</title>
    <url>/2023/04/15/Arduino%E6%95%99%E7%A8%8B-(%E4%B8%89)%E9%80%9A%E8%BF%87%E7%94%B5%E4%BD%8D%E5%99%A8%E6%8E%A7%E5%88%B6%20LED%20%E7%81%AF/</url>
    <content><![CDATA[<p><em><strong>本文实现了使用Arduino UNO开发板实现电位器控制LED灯，以下是具体教程。</strong></em></p>
<p><strong>我们可以把实现步骤分为两部分。第一，获取电位器输入信息；第二，输出PWM波控制LED灯。</strong></p>
<p><em>下面我以Arduino UNO、50k电位器和绿光LED灯演示如何使用Arduino开发板控制LED灯。</em></p>
<h3 id="一、读取电位器数据"><a href="#一、读取电位器数据" class="headerlink" title="一、读取电位器数据"></a>一、读取电位器数据</h3><p>在Arduino中，您可以使用内置函数analogRead()来读取模拟输入引脚的电压输入信号。</p>
<p>以Arduino UNO开发板为例，A0-A5引脚是开发板的模拟输入引脚。该函数的返回值范围是0-1023。</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://image.cdn.dshboom.top/post/202306222053696.png"
                      alt="1"
                ></p>
<p>您可以使用以下代码来用串口输出电位器的电压信号。</p>
<div class="highlight-container" data-rel="C++"><figure class="iseeu highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">setup</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="comment">// 初始化串口通讯</span></span><br><span class="line">  Serial.<span class="built_in">begin</span>(<span class="number">9600</span>); </span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">loop</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="comment">// 读取模拟输入引脚A0的输入信号</span></span><br><span class="line">  <span class="type">int</span> signal = <span class="built_in">analogRead</span>(A0);</span><br><span class="line">  <span class="comment">// 通过串口发送给电脑 </span></span><br><span class="line">  Serial.<span class="built_in">println</span>(signal); </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://image.cdn.dshboom.top/post/202306222054775.png"
                      alt="2"
                ></p>
<p>通过上图的硬件连接和软件程序，您可以实现通过Arduino开发板读取电位器数据并发送到电脑串口上。</p>
<p>以下是程序输出结果：</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://image.cdn.dshboom.top/post/202306222054561.gif"
                      alt="4"
                ></p>
<h3 id="二、控制LED灯"><a href="#二、控制LED灯" class="headerlink" title="二、控制LED灯"></a>二、控制LED灯</h3><p><strong>要使用Arduino控制LED亮度，可以采用以下步骤：</strong></p>
<ol>
<li>连接硬件：将一个LED连接到Arduino板上的数字引脚上，正极连接到数字引脚，负极连接到地。</li>
<li>编写代码：使用Arduino内置函数analogWrite()，范围是0~255。</li>
</ol>
<p>以下代码演示了如何用Arduino开发板实现呼吸灯：</p>
<div class="highlight-container" data-rel="C++"><figure class="iseeu highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> ledPin = <span class="number">9</span>; <span class="comment">//LED连接到数字引脚9上</span></span><br><span class="line"><span class="type">int</span> brightness = <span class="number">0</span>; <span class="comment">//初始亮度为0</span></span><br><span class="line"><span class="type">int</span> fadeAmount = <span class="number">5</span>; <span class="comment">//渐变速度</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">setup</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="built_in">pinMode</span>(ledPin, OUTPUT); <span class="comment">//设置数字引脚9为输出</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">loop</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="built_in">analogWrite</span>(ledPin, brightness); <span class="comment">//写入亮度值到LED</span></span><br><span class="line">  brightness = brightness + fadeAmount; <span class="comment">//增加亮度值</span></span><br><span class="line">  <span class="keyword">if</span> (brightness == <span class="number">0</span> || brightness == <span class="number">255</span>) &#123; <span class="comment">//如果亮度值达到最大或最小值，改变渐变方向</span></span><br><span class="line">    fadeAmount = -fadeAmount;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">delay</span>(<span class="number">30</span>); <span class="comment">//等待30毫秒</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<p>您可以这样连接Arduino开发板硬件：</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://image.cdn.dshboom.top/post/202306222055974.png"
                      alt="3"
                ></p>
<h3 id="三、映射函数map"><a href="#三、映射函数map" class="headerlink" title="三、映射函数map()"></a>三、映射函数map()</h3><p>对比analogRead()和analogWrite()函数，我们可以发现，analogRead()函数的输出值为0-1023，而analogWrite()函数的输入范围是0-255。为了将读取到的电位器数据传输到analogWrite()函数中，我们需要使用map()函数等比映射变量范围。</p>
<div class="highlight-container" data-rel="C++"><figure class="iseeu highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="built_in">map</span> (x, in_min, in_max, out_min, out_max)</span><br><span class="line"><span class="comment">// 参数</span></span><br><span class="line"><span class="comment">// x： 要映射的值</span></span><br><span class="line"><span class="comment">// in_min： 映射前区间最小值</span></span><br><span class="line"><span class="comment">// in_max： 映射前区间最大值</span></span><br><span class="line"><span class="comment">// out_min： 映射后区间最小值</span></span><br><span class="line"><span class="comment">// out_max 映射后区间最大值</span></span><br></pre></td></tr></table></figure></div>

<h3 id="四、整合方案，实现功能"><a href="#四、整合方案，实现功能" class="headerlink" title="四、整合方案，实现功能"></a>四、整合方案，实现功能</h3><p><em><strong>以上文本介绍了如何使用Arduino开发板读取电位器数据和控制LED灯，将以上功能整合，即可达到本文所需要的效果。</strong></em></p>
<p>连接硬件：连接旋转式电位器和 OLED 灯到 Arduino 板上。电路图如下：</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://image.cdn.dshboom.top/post/202306222055134.png"
                      alt="4"
                ></p>
<ol>
<li>在 Arduino IDE 中编写代码，读取旋转式电位器的值。</li>
<li>将读取的值映射到 OLED 灯的亮度范围内。</li>
<li>将映射后的值发送到 OLED 灯，以控制其亮度。</li>
</ol>
<div class="highlight-container" data-rel="C++"><figure class="iseeu highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> potPin = A0;  <span class="comment">// 电位器连接到 A0 引脚</span></span><br><span class="line"><span class="type">int</span> ledPin = <span class="number">9</span>;   <span class="comment">// OLED 灯连接到 9 号引脚</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">setup</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="built_in">pinMode</span>(ledPin, OUTPUT);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">loop</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="type">int</span> potValue = <span class="built_in">analogRead</span>(potPin);  <span class="comment">// 读取电位器的值</span></span><br><span class="line">  <span class="type">int</span> brightness = <span class="built_in">map</span>(potValue, <span class="number">0</span>, <span class="number">1023</span>, <span class="number">0</span>, <span class="number">255</span>);  <span class="comment">// 将值映射到亮度范围内</span></span><br><span class="line">  <span class="built_in">analogWrite</span>(ledPin, brightness);  <span class="comment">// 发送映射后的值到 OLED 灯</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<p><strong>将以上代码烧录到您的Arduino开发板中，即可实现通过旋转式电位器控制 LED 灯的功能。</strong></p>
<hr>
<p>本文章同步发布到知乎，点击按钮前往⬇</p>
<a class="button  center large" href='https://zhuanlan.zhihu.com/p/622029652' title='Arduino教程 | （三）通过电位器控制 LED 灯 - 知乎'>Arduino教程 | （三）通过电位器控制 LED 灯 - 知乎</a>
]]></content>
      <tags>
        <tag>Arduino</tag>
      </tags>
  </entry>
  <entry>
    <title>Arduino教程 | （二）Arduino开发板串口驱动程序安装方法</title>
    <url>/2023/04/05/Arduino%E6%95%99%E7%A8%8B-(%E4%BA%8C)Arduino%E5%BC%80%E5%8F%91%E6%9D%BF%E4%B8%B2%E5%8F%A3%E9%A9%B1%E5%8A%A8%E7%A8%8B%E5%BA%8F%E5%AE%89%E8%A3%85%E6%96%B9%E6%B3%95/</url>
    <content><![CDATA[<p><em><strong>本文以Windows 7操作系统和Arduino UNO开发板为例，演示了安装Arduino UNO开发板驱动程序的一般方法，如果您的Arduino开发板无法识别串口，可以尝试以下方法。</strong></em></p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://image.cdn.dshboom.top/post/202306222052515.webp"
                      alt="win7"
                ></p>
<h3 id="一、安装Arduino-IDE"><a href="#一、安装Arduino-IDE" class="headerlink" title="一、安装Arduino IDE"></a>一、安装Arduino IDE</h3><p>Arduino开发板的串口驱动程序一般包含在Arduino IDE安装目录下，要安装驱动程序，您需要先安装Arduino IDE。关于Arduino IDE的安装方法，您可以参考下列文章：</p>
<a class="button  center large" href='https://dshboom.top/2023/03/25/arduino%E6%95%99%E7%A8%8B-(%E4%B8%80)%E5%AE%89%E8%A3%85arduino%20ide/' title='Arduino教程 | (一)安装Arduino IDE 点击前往'>Arduino教程 | (一)安装Arduino IDE 点击前往</a>

<p><em><strong>注：在安装过程中，请务必注意Arduino IDE程序的安装路径。</strong></em></p>
<h3 id="二、更新Arduino开发板的串口驱动程序"><a href="#二、更新Arduino开发板的串口驱动程序" class="headerlink" title="二、更新Arduino开发板的串口驱动程序"></a>二、更新Arduino开发板的串口驱动程序</h3><p><strong>连接您的Arduino开发板</strong>，确保USB识别插入设备（没反应可能是数据线损坏），打开设备管理器界面（桌面右键计算机-&gt;管理-&gt;设备管理器）</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://image.cdn.dshboom.top/post/202306222052438.webp"
                      alt="Gl"
                ></p>
<p>打开设备管理器，您将会看到“未知设备”图标，右键该图标，点击“更新驱动程序”。</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://image.cdn.dshboom.top/post/202306222052073.webp"
                      alt="GX"
                ></p>
<p>点击“浏览计算机以查找驱动程序软件”。</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://image.cdn.dshboom.top/post/202306222052047.webp"
                      alt="LL"
                ></p>
<p>填写您的Arduino IDE安装目录下的drivers文件地址，默认地址如下：</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">C:\Program Files\arduino\drivers</span><br></pre></td></tr></table></figure></div>

<p><em><strong>注：若您选择了其他安装位置，地址可能不同。</strong></em></p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://image.cdn.dshboom.top/post/202306222053263.webp"
                      alt="AZ"
                ></p>
<p>点击“下一步”后，将会弹出以上界面，选择“始终信任”并点击“安装”。</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://image.cdn.dshboom.top/post/202306222053346.webp"
                      alt="CG"
                ></p>
<p><em><strong>出现上图界面代表您的驱动程序安装成功。</strong></em></p>
<hr>
<p>本文章同步发布到知乎，点击按钮前往⬇</p>
<a class="button  center large" href='https://zhuanlan.zhihu.com/p/619548347' title='Arduino教程 | （二）Arduino开发板串口驱动程序安装方法 - 知乎'>Arduino教程 | （二）Arduino开发板串口驱动程序安装方法 - 知乎</a>
]]></content>
      <tags>
        <tag>Arduino</tag>
      </tags>
  </entry>
  <entry>
    <title>【知乎问答】如何在 C 语言中实现条件判断和循环？</title>
    <url>/2023/04/05/%E3%80%90%E7%9F%A5%E4%B9%8E%E9%97%AE%E7%AD%94%E3%80%91%E5%A6%82%E4%BD%95%E5%9C%A8%20C%20%E8%AF%AD%E8%A8%80%E4%B8%AD%E5%AE%9E%E7%8E%B0%E6%9D%A1%E4%BB%B6%E5%88%A4%E6%96%AD%E5%92%8C%E5%BE%AA%E7%8E%AF%EF%BC%9F/</url>
    <content><![CDATA[<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://image.cdn.dshboom.top/post/202306222045483.jpg"
                      alt="知乎问题"
                ></p>
<h1 id="来自dshboom的回答："><a href="#来自dshboom的回答：" class="headerlink" title="来自dshboom的回答："></a>来自<em>dshboom</em>的回答：</h1><p><strong>在 C 语言中，可以使用以下几个关键字实现条件判断和循环：</strong></p>
<ul>
<li>if/else 语句：用于条件判断，如果条件满足，则执行 if 后面的语句，否则执行 else 后面的语句。例如：</li>
</ul>
<div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line">    <span class="keyword">if</span> (a &gt; <span class="number">5</span>) </span><br><span class="line">    &#123;</span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">&quot;a比5大\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> </span><br><span class="line">    &#123;</span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">&quot;a比5小\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<ul>
<li>switch/case 语句：用于多条件判断，根据表达式的值，执行相应的语句块。例如：</li>
</ul>
<div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> grade = <span class="number">85</span>;</span><br><span class="line">	<span class="keyword">switch</span> (grade) </span><br><span class="line">	&#123;</span><br><span class="line">      <span class="keyword">case</span> <span class="number">90</span>:</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Excellent!\n&quot;</span>);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> <span class="number">80</span>:</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Good!\n&quot;</span>);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> <span class="number">70</span>:</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Average\n&quot;</span>);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> <span class="number">60</span>:</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Pass\n&quot;</span>);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">default</span>:</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Fail\n&quot;</span>);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<ul>
<li>while/do-while 语句：用于循环执行一段代码，只要条件满足，就会一直执行。while 循环先判断条件再执行，do-while 循环先执行一次再判断条件。例如：</li>
</ul>
<div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (i &lt; <span class="number">10</span>) </span><br><span class="line">    &#123;</span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, i);</span><br><span class="line">      i++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> j = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">do</span> </span><br><span class="line">    &#123;</span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, j);</span><br><span class="line">      j++;</span><br><span class="line">    &#125; </span><br><span class="line">    <span class="keyword">while</span> (j &lt; <span class="number">10</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<ul>
<li>for 语句：用于循环执行一段代码，可指定循环次数和循环变量的初始值和增量。例如：</li>
</ul>
<div class="highlight-container" data-rel="C"><figure class="iseeu highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) </span><br><span class="line">    &#123;</span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, i);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<p><em><strong>以上是 C 语言中常用的条件判断和循环语句，它们可以组合使用，实现更复杂的程序逻辑。</strong></em></p>
<hr>
<p>此回答来自我的知乎账号，欢迎访问我的知乎个人主页：）</p>
<p>原文于知乎: 2023-04-14 21:27:00 由dshboom创建</p>
<a class="button  center large" href='https://www.zhihu.com/question/595537748/answer/2984153598' title='点击前往知乎阅读'>点击前往知乎阅读</a>]]></content>
      <tags>
        <tag>知乎问答</tag>
        <tag>计算机</tag>
        <tag>C语言</tag>
      </tags>
  </entry>
  <entry>
    <title>【知乎问答】如何识别自己计算机的内网地址？</title>
    <url>/2023/04/05/%E3%80%90%E7%9F%A5%E4%B9%8E%E9%97%AE%E7%AD%94%E3%80%91%E5%A6%82%E4%BD%95%E8%AF%86%E5%88%AB%E8%87%AA%E5%B7%B1%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%9A%84%E5%86%85%E7%BD%91%E5%9C%B0%E5%9D%80%EF%BC%9F/</url>
    <content><![CDATA[<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://image.cdn.dshboom.top/post/202306091024572.jpg"
                      alt="知乎问题"
                ></p>
<h1 id="来自dshboom的回答："><a href="#来自dshboom的回答：" class="headerlink" title="来自dshboom的回答："></a>来自<em>dshboom</em>的回答：</h1><h3 id="一、Windows系统"><a href="#一、Windows系统" class="headerlink" title="一、Windows系统"></a>一、Windows系统</h3><h4 id="1-命令行查询"><a href="#1-命令行查询" class="headerlink" title="1.命令行查询"></a>1.命令行查询</h4><p>使用win+R或搜索栏搜索”运行”以打开”运行”窗口</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://image.cdn.dshboom.top/post/202306091025471.jpg"
                      alt="打开运行"
                ></p>
<p>然后在输入框内输入cmd并回车打开命令提示符</p>
<p><em>注：您也可以直接在搜索栏中搜索”cmd”打开。</em></p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://image.cdn.dshboom.top/post/202306091025046.jpg"
                      alt="cmd"
                ></p>
<p>在命令提示符中输入”ipconfig”，将会显示如下画面：</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://image.cdn.dshboom.top/post/202306091029361.webp"
                      alt="ip"
                ></p>
<p>图中箭头所指的”IPV4地址”即为您的内网IP地址。</p>
<h4 id="2-“设置”查询"><a href="#2-“设置”查询" class="headerlink" title="2.“设置”查询"></a>2.“设置”查询</h4><p>您也可以通过设置来查看您的内网IP</p>
<p>win+i呼出系统设置，以win11操作系统为例，会出现如下界面：</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://image.cdn.dshboom.top/post/202306091029693.webp"
                      alt="设置"
                ></p>
<p>点击“网络和Internet”选项。</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://image.cdn.dshboom.top/post/202306091028408.webp"
                      alt="internet"
                ></p>
<p>点击WLAN</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://image.cdn.dshboom.top/post/202306091029482.webp"
                      alt="WLAN"
                ></p>
<p>点击属性设置</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://image.cdn.dshboom.top/post/202306091027514.webp"
                      alt="sx"
                ></p>
<p>图中箭头所指的就是您的内网IP地址。</p>
<h3 id="二、Linux系统"><a href="#二、Linux系统" class="headerlink" title="二、Linux系统"></a>二、Linux系统</h3><p>在Linux系统中，您可以使用终端查看自己的内网IP地址。以debian操作系统为例：</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://image.cdn.dshboom.top/post/202306091026925.webp"
                      alt="debian"
                ></p>
<p>您可以通过输入”ip a”来查询自己的内网IP。</p>
<hr>
<p>此回答来自我的知乎账号，欢迎访问我的知乎个人主页：）</p>
<p>原文于知乎: 2023-04-04 23:50:22 由dshboom创建</p>
<a class="button  center large" href='https://www.zhihu.com/question/593464067/answer/2968807117' title='点击前往知乎阅读'>点击前往知乎阅读</a>]]></content>
      <tags>
        <tag>知乎问答</tag>
        <tag>计算机</tag>
        <tag>网络</tag>
      </tags>
  </entry>
  <entry>
    <title>【知乎问答】如何在windows7的基础上在安装一个windows server 2012 r2？</title>
    <url>/2023/04/04/%E3%80%90%E7%9F%A5%E4%B9%8E%E9%97%AE%E7%AD%94%E3%80%91%E5%A6%82%E4%BD%95%E5%9C%A8windows7%E7%9A%84%E5%9F%BA%E7%A1%80%E4%B8%8A%E5%9C%A8%E5%AE%89%E8%A3%85%E4%B8%80%E4%B8%AAwindows%20server%202012%20r2/</url>
    <content><![CDATA[<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://image.cdn.dshboom.top/post/202306222046841.jpg"
                     
                ></p>
<h1 id="来自dshboom的回答："><a href="#来自dshboom的回答：" class="headerlink" title="来自dshboom的回答："></a>来自<em>dshboom</em>的回答：</h1><p>​    <em><strong>在一个系统上安装另一个系统，您可以选择使用虚拟机软件或安装双系统。如果您需要同时使用两个系统，您可以选择虚拟机，如果您在一定时间内单独使用windows server 2012 r2操作系统，您可以考虑组建双系统。</strong></em></p>
<h2 id="一、虚拟机软件"><a href="#一、虚拟机软件" class="headerlink" title="一、虚拟机软件"></a>一、虚拟机软件</h2><p>​    虚拟机软件可以模拟计算机环境，并提供与计算机硬件相同的功能。</p>
<p>优点：<strong>可以同时使用主机操作系统和虚拟机操作系统</strong>，文件完全独立于主机；拥有快照功能，可随时恢复。</p>
<p>缺点：主机性能无法完全发挥，<strong>损失硬件性能利用率</strong>。</p>
<p>​    如果您希望了解有关VMware pro虚拟机软件安装相关的信息，您可以点击以下链接浏览我之前写过的文章。</p>
<p><a class="link"   href="https://zhuanlan.zhihu.com/p/616883406" >VMware Workstation Pro 17虚拟机软件详细安装教程 &lt;— 点击跳转 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<p>​    使用虚拟机软件安装系统，您通常需要使用该系统的ISO镜像文件，Windows Server 2012 R2的ISO文件ED2K地址如下：</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">ed2k://|file|cn_windows_server_2012_x64_dvd_915588.iso|3826081792|6A56281311F9FE6973F66CF36E2F50BE|/</span><br></pre></td></tr></table></figure></div>

<p><em><strong>注：该链接来自MSDN i tell you网站，<a class="link"   href="https://msdn.itellyou.cn/" >点击跳转 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></strong></em></p>
<h2 id="二、双系统"><a href="#二、双系统" class="headerlink" title="二、双系统"></a>二、双系统</h2><p>​    如果您没有同时使用两个系统的需求，您可以尝试使用双系统配置，在一台电脑上安装两个系统，在系统启动时选择您需要的系统。</p>
<p>​    安装双系统可以ISO文件或PE引导的方式安装系统。需要注意的是，双系统要求您的系统拥有至少两个分区，鉴于数据存储与系统盘分开的原则，您的电脑最好拥有两个或以上的分区。如果您的电脑不满足该分区条件，您可以使用磁盘分区软件对磁盘进行分区操作<em><strong>（磁盘操作风险很大，没有经验不建议尝试，操作前务必备份重要文件）</strong></em>。</p>
<hr>
<p>此回答来自我的知乎账号，欢迎访问我的知乎个人主页：）</p>
<p>原文于知乎: 2023-04-04 21:35:13 由dshboom创建</p>
<a class="button  center large" href='https://www.zhihu.com/question/347762620/answer/2968632547' title='点击前往知乎阅读'>点击前往知乎阅读</a>]]></content>
      <tags>
        <tag>知乎问答</tag>
        <tag>计算机</tag>
        <tag>操作系统</tag>
      </tags>
  </entry>
  <entry>
    <title>【知乎问答】是什么信念支撑着我们要不断努力挣钱</title>
    <url>/2023/04/01/%E3%80%90%E7%9F%A5%E4%B9%8E%E9%97%AE%E7%AD%94%E3%80%91%E6%98%AF%E4%BB%80%E4%B9%88%E4%BF%A1%E5%BF%B5%E6%94%AF%E6%92%91%E7%9D%80%E6%88%91%E4%BB%AC%E8%A6%81%E4%B8%8D%E6%96%AD%E5%8A%AA%E5%8A%9B%E6%8C%A3%E9%92%B1/</url>
    <content><![CDATA[<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://image.cdn.dshboom.top/post/202306222047583.jpg"
                      alt="知乎问题"
                ></p>
<h1 id="来自dshboom的回答："><a href="#来自dshboom的回答：" class="headerlink" title="来自dshboom的回答："></a>来自<em>dshboom</em>的回答：</h1><p><em><strong>在人类社会当中，当一个事物被需要的时候，那么该事物就产生了价值。</strong></em></p>
<p>不断地获取资源是人与生俱来的本能。我们作为社会中的个体，面对由复杂的社会关系交织组成的人类社会时，希望通过提升自己的社会价值使自己拥有更多的社会资源。</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://image.cdn.dshboom.top/post/202306222048465.webp"
                     
                ></p>
<p>而金钱是人类社会所广泛认同的价值之一，即金钱在一定程度上代表了社会地位，所以问题中的“赚钱”也就可以理解为对更高的人生价值和社会地位的追求。</p>
<p><strong>但人类不能简单的抽象成一个逐利的生物，我们拥有思想情感和理想抱负。</strong>我们热爱自己真正热爱的领域，愿意为感兴趣的事务投入更多的时间和金钱；我们有自己的理想，会为了实现自己的理想而继续奋斗；我们有自己的信仰，会在信念的驱动力下跨步向前。</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://image.cdn.dshboom.top/post/202306222048999.webp"
                     
                ></p>
<p>但社会是现实的，想要做自己想做的事，需要更多的社会资源，不可避免地需要自己拥有更多的社会财富，也就是金钱。</p>
<p>由此可见，<em><strong>“信念驱使，资源实现”</strong></em>，就是驱使一个人不断努力挣钱底层逻辑。</p>
<hr>
<p>此回答来自我的知乎账号，欢迎访问我的知乎个人主页：）</p>
<p>原文于知乎: 2023-03-25 14:43:09 由dshboom创建</p>
<a class="button  center large" href='https://www.zhihu.com/question/589567299/answer/2952880055' title='点击前往知乎阅读'>点击前往知乎阅读</a>]]></content>
      <tags>
        <tag>知乎问答</tag>
        <tag>人生观</tag>
      </tags>
  </entry>
  <entry>
    <title>【知乎问答】用XP系统的电脑想升级用Windows10要更换什么硬件</title>
    <url>/2023/04/01/%E3%80%90%E7%9F%A5%E4%B9%8E%E9%97%AE%E7%AD%94%E3%80%91%E7%94%A8XP%E7%B3%BB%E7%BB%9F%E7%9A%84%E7%94%B5%E8%84%91%E6%83%B3%E5%8D%87%E7%BA%A7%E7%94%A8Windows10%E8%A6%81%E6%9B%B4%E6%8D%A2%E4%BB%80%E4%B9%88%E7%A1%AC%E4%BB%B6/</url>
    <content><![CDATA[<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://image.cdn.dshboom.top/post/202306222048749.jpg"
                     
                ></p>
<h1 id="来自dshboom的回答："><a href="#来自dshboom的回答：" class="headerlink" title="来自dshboom的回答："></a>来自<em>dshboom</em>的回答：</h1><p>要回答这个问题，我们先查看一下巨硬官方给出的Windows 10最低配置要求：</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://image.cdn.dshboom.top/post/202306222049946.webp"
                     
                ></p>
<p><strong>如果您的配置达到或高于该要求，那么您可以考虑升级Windows 10系统。</strong>需要注意的是，如果您对系统运行流畅度有一定要求，不建议在刚刚达到要求的电脑上使用Windows 10系统。您可以选择购买更大的内存或使用固态硬盘来改善系统运行的流畅度。</p>
<p>在为老机型选择Windows 10操作系统版本时，您还可以通过使用LTSC版本来降低内存和磁盘占用。</p>
<hr>
<p>此回答来自我的知乎账号，欢迎访问我的知乎个人主页：）</p>
<p>原文于知乎: 2023-03-25 17:10:52 由dshboom创建</p>
<a class="button  center large" href='https://www.zhihu.com/question/589567299/answer/2952880055' title='点击前往知乎阅读'>点击前往知乎阅读</a>]]></content>
      <tags>
        <tag>知乎问答</tag>
        <tag>计算机</tag>
        <tag>”操作系统“</tag>
      </tags>
  </entry>
  <entry>
    <title>Arduino教程 | 【问答】大家都是如何为Arduino供电的</title>
    <url>/2023/03/26/Arduino%E6%95%99%E7%A8%8B-%E5%A4%A7%E5%AE%B6%E9%83%BD%E6%98%AF%E5%A6%82%E4%BD%95%E4%B8%BAArduino%E4%BE%9B%E7%94%B5%E7%9A%84/</url>
    <content><![CDATA[<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://image.cdn.dshboom.top/post/202306091031706.jpg"
                      alt="知乎问题"
                ></p>
<h1 id="来自dshboom的回答："><a href="#来自dshboom的回答：" class="headerlink" title="来自dshboom的回答："></a>来自<em>dshboom</em>的回答：</h1><p>面对这个问题，首先要明确您的Arduino硬件设备。以Arduino UNO开发板为例，我将演示为Arduino供电的几种方法</p>
<h3 id="一、使用Type-B插口为Arduino-UNO供电"><a href="#一、使用Type-B插口为Arduino-UNO供电" class="headerlink" title="一、使用Type B插口为Arduino UNO供电"></a>一、使用Type B插口为Arduino UNO供电</h3><p>在下载程序时，一般直接使用Type B线（即您下载程序所用的数据线）为Arduino开发板供电。</p>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://image.cdn.dshboom.top/post/202306091035535.png"
                      alt="使用Type B插口为Arduino UNO供电" style="zoom:33%;" 
                >

<p><em>图为Type B为Arduino UNO开发板供电</em></p>
<p><em><strong>注意：在下载程序时不建议在Arduino开发板上连接任何外设，这样将会导致串口被占用或电脑USB口电流输出过高以至于程序下载失败。（通常电脑USB接口输出电压为5V 0.5~1A）</strong></em></p>
<p>同样的，您可以使用常见的手机电源适配器为Arduino供电，如图：</p>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://image.cdn.dshboom.top/post/202306091035870.jpg"
                      alt="手机电源适配器为Arduino供电" style="zoom:50%;" 
                >

<p><em>图为手机电源适配器为Arduino供电</em></p>
<h3 id="二、DC供电插头为Arduino-UNO供电"><a href="#二、DC供电插头为Arduino-UNO供电" class="headerlink" title="二、DC供电插头为Arduino UNO供电"></a>二、DC供电插头为Arduino UNO供电</h3><p>使用Type B数据线仅仅作为供电线是有些奢侈的，我们还可以使用Arduino UNO开发板自带的DC5.5mm*2.1mm插头为它供电，如图：</p>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://image.cdn.dshboom.top/post/202306091036718.png"
                      alt="DC5.5mm*2.1mm插头为Arduino供电" style="zoom: 67%;" 
                >

<p><em>图为DC5.5mm</em>2.1mm插头为Arduino UNO供电*</p>
<p><em><strong>注意：该插孔电压范围是9~12V，高于该电压会导致LDO发烫或烧毁，低于该电压Arduino UNO可能不能正常工作。</strong></em></p>
<p><strong>注：LDO（低压差线性稳压器），简单来说就是一个线性降压芯片。Arduino UNO开发板一般来说自带1117M3-3.3稳压器，上图用红框标识的就是LDO稳压器，Arduino有较大负载时，这颗LDO可能会发烫。</strong></p>
<h3 id="三、VIN引脚供电"><a href="#三、VIN引脚供电" class="headerlink" title="三、VIN引脚供电"></a>三、VIN引脚供电</h3><p>有些时候，我们可能没有DC5.5mm*2.1mm插头，此时我们可以使用Arduino UNO开发板上的VIN引脚为它供电。</p>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://image.cdn.dshboom.top/post/202306091036413.jpg"
                      alt="VIN引脚为Arduino供电" style="zoom: 50%;" 
                >

<p><em>图为使用VIN引脚为Arduiino供电</em></p>
<p>如图，我使用可调电源输出9.00V连接到Arduino UNO的VIN引脚，Arduino可以正常启动。在您的生产环境中，您可以使用9V方形电池为Arduino供电。</p>
<p><em><strong>注：VIN引脚的输入电压为7~12V。</strong></em></p>
<h3 id="四、使用5V电源口为Arduino供电（不建议）"><a href="#四、使用5V电源口为Arduino供电（不建议）" class="headerlink" title="四、使用5V电源口为Arduino供电（不建议）"></a>四、使用5V电源口为Arduino供电（不建议）</h3><p>除此之外，您还可以使用5V电源口为Arduino供电，但我不建议您这么做，因为这种方式的输入电压必须严格控制在5V，在使用接线供电时，难以保证您的电源是否为标准的5V，<strong>可能导致Arduino开发板烧毁</strong>。</p>
<h3 id="五、如果您使用其他的开发板或自己为兼容Arduino的芯片设计的电路"><a href="#五、如果您使用其他的开发板或自己为兼容Arduino的芯片设计的电路" class="headerlink" title="五、如果您使用其他的开发板或自己为兼容Arduino的芯片设计的电路"></a>五、如果您使用其他的开发板或自己为兼容Arduino的芯片设计的电路</h3><h4 id="1-其它的开发板"><a href="#1-其它的开发板" class="headerlink" title="1.其它的开发板"></a>1.其它的开发板</h4><p>您可以从网络上或商家处获取相关资料，当然，如果您所购买的开发板拥有USB接口，使用手机电源适配器或5V输出的电源连接USB接口是最稳妥的。</p>
<h4 id="2-您为兼容Arduino的芯片设计的电路"><a href="#2-您为兼容Arduino的芯片设计的电路" class="headerlink" title="2.您为兼容Arduino的芯片设计的电路"></a>2.您为兼容Arduino的芯片设计的电路</h4><h5 id="a-220V输入"><a href="#a-220V输入" class="headerlink" title="a.220V输入"></a>a.220V输入</h5><p>对于这种情况，您的自由度将大大提升，倘若您的供电为220V，您可以使用阻容降压电路或电容分压桥来得到您想要的电压，但要注意，这种方法无法提供很大的功率，且有一定的危险性，优点是电路制造成本比较低，电路设计的复杂度不高。</p>
<p><em><strong>如果是大功率场景，更安全的方式是内置220V输入的开关电源模块。</strong></em></p>
<h5 id="b-直流输入"><a href="#b-直流输入" class="headerlink" title="b.直流输入"></a>b.直流输入</h5><p>使用直流输入时，您可以选择DC-DC电压转换芯片将电压降至12V以下，再使用线性稳压器为芯片供电<em><strong>（由于芯片是逻辑电路，不建议直接使用DC-DC输出为芯片供电，电源纹波可能导致电路工作不正常）</strong></em>。</p>
<h5 id="c-电池输入"><a href="#c-电池输入" class="headerlink" title="c.电池输入"></a>c.电池输入</h5><p>当您使用电池为电路供电，您可以选择电池管理芯片和稳压芯片相结合的方案，在市场上也有这类模块供您选择。</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://image.cdn.dshboom.top/post/202306091037569.jpg"
                      alt="某电商网站截图"
                ></p>
<hr>
<p>此回答来自我的知乎账号，欢迎访问我的知乎个人主页：）</p>
<a class="button  center large" href='https://www.zhihu.com/question/591611418/answer/2953835320' title='点击前往知乎阅读'>点击前往知乎阅读</a>]]></content>
      <tags>
        <tag>Arduino</tag>
        <tag>知乎问答</tag>
        <tag>电子技术</tag>
      </tags>
  </entry>
  <entry>
    <title>Arduino教程 | (一)安装Arduino IDE</title>
    <url>/2023/03/25/Arduino%E6%95%99%E7%A8%8B-(%E4%B8%80)%E5%AE%89%E8%A3%85Arduino%20IDE/</url>
    <content><![CDATA[<p>本篇教程介绍了Arduino IDE的下载、安装和基础设置。</p>
<h3 id="一、Arduino是什么"><a href="#一、Arduino是什么" class="headerlink" title="一、Arduino是什么"></a>一、Arduino是什么</h3><p>​    Arduino是一种开源电子原型平台，由硬件和软件组成。支持Arduino的开发板可以通过Arduino变成来读取输入信号（输入信号可以来自按钮、开关、传感器等）并将其转换为输出以控制灯、马达和其他设备。</p>
<h3 id="二、下载Arduino-IDE"><a href="#二、下载Arduino-IDE" class="headerlink" title="二、下载Arduino IDE"></a>二、下载Arduino IDE</h3><h4 id="1-官网下载"><a href="#1-官网下载" class="headerlink" title="1.官网下载"></a>1.官网下载</h4><p>​    Arduino官网网址：[点击前往](<a class="link"   href="https://www.arduino.cc/" >Arduino - Home <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>)&lt;–</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://image.cdn.dshboom.top/post/202306222056854.png"
                      alt="image-20230325212210465" style="zoom:67%;" 
                ><em>Arduino官网截图</em></p>
<p>点击SOFTWARE选项，选择适合您操作系统的Arduino IDE版本并下载（本文以win 10为例）</p>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://image.cdn.dshboom.top/post/202306222058568.webp"
                      alt="image-20230325212401146" style="zoom:67%;" 
                >

<p>选择下载后，您可能会看到如下页面</p>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://image.cdn.dshboom.top/post/202306222058494.png"
                      alt="image-20230325212516531" style="zoom: 67%;" 
                >

<p>如果您有能力捐赠Arduino官方，您可以选择捐赠并下载，您也可以点击JUST DOWNLOAD按钮仅下载Arduino IDE</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://image.cdn.dshboom.top/post/202306222058059.png"
                      alt="image-20230325213158142"
                ></p>
<p>点击后，浏览器将自动下载相应的Arduino IDE安装文件</p>
<h4 id="2-我分享的网盘链接"><a href="#2-我分享的网盘链接" class="headerlink" title="2.我分享的网盘链接"></a>2.我分享的网盘链接</h4><p><em>您也可以选择我分享的网盘链接下载2.0.4版本的Arduino IDE</em></p>
<p>链接：<a class="link"   href="https://pan.baidu.com/s/17PKlawZkRe_prZwB8qWa1g?pwd=wkon" >https://pan.baidu.com/s/17PKlawZkRe_prZwB8qWa1g?pwd=wkon <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><br>提取码：wkon</p>
<h3 id="三、安装Arduino-IDE"><a href="#三、安装Arduino-IDE" class="headerlink" title="三、安装Arduino IDE"></a>三、安装Arduino IDE</h3><p>在您的电脑上找到刚才下载的双击安装文件即可开始安装。</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://image.cdn.dshboom.top/post/202306222059121.png"
                      alt="image-20230325213608632"
                ></p>
<p>双击安装后，点击我同意</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://image.cdn.dshboom.top/post/202306222059461.png"
                      alt="image-20230325213937949"
                ></p>
<p>您可以选择为所有用户安装或为某一特定用户安装</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://image.cdn.dshboom.top/post/202306222100581.png"
                      alt="image-20230325214104851"
                ></p>
<p><em>注：为所有用户安装需要电脑的管理员权限，在选择此选项的时候请确定您拥有电脑的管理员权限。</em></p>
<p>选择安装位置</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://image.cdn.dshboom.top/post/202306222100493.png"
                      alt="image-20230325214359886"
                ></p>
<p>注：不建议将应用程序安装在C盘（系统盘）中，您可以选择其他盘符</p>
<p>点击下一步后，Arduino会开始安装</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://image.cdn.dshboom.top/post/202306222101307.png"
                      alt="image-20230325214544022"
                ></p>
<p>出现如下界面则代表安装完成</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://image.cdn.dshboom.top/post/202306222101180.png"
                      alt="image-20230325215246029"
                ></p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://image.cdn.dshboom.top/post/202306222101909.png"
                      alt="image-20230325215508475"
                ></p>
<h3 id="四、设置Arduino-IDE"><a href="#四、设置Arduino-IDE" class="headerlink" title="四、设置Arduino IDE"></a>四、设置Arduino IDE</h3><h4 id="1-更改软件语言"><a href="#1-更改软件语言" class="headerlink" title="1.更改软件语言"></a>1.更改软件语言</h4><p>Arduino默认语言是英文，进行以下设置可将Arduino IDE软件语言设置为中文。</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://image.cdn.dshboom.top/post/202306222102530.png"
                      alt="image-20230326113518480"
                ></p>
<p>点击”File”-&gt;”Preferences”或按下Ctrl+逗号即可进入首选项设置</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://image.cdn.dshboom.top/post/202306222102688.png"
                      alt="image-20230326114148191"
                ></p>
<p>找到”Language”下拉选框找到”中文(简体)”</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://image.cdn.dshboom.top/post/202306222102047.png"
                      alt="image-20230326114251778"
                ></p>
<p>然后点击”OK”按钮，Arduino IDE会重新加载。</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://image.cdn.dshboom.top/post/202306222103444.png"
                      alt="image-20230326114355964"
                ></p>
<p>出现相应语言的界面即代表您的语言设置生效。</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://image.cdn.dshboom.top/post/202306222103904.png"
                      alt="image-20230326114524569"
                ></p>
<h4 id="2-首选项设置"><a href="#2-首选项设置" class="headerlink" title="2.首选项设置"></a>2.首选项设置</h4><p>点击”文件”-&gt;”首选项”或按下Ctrl+逗号即可进入首选项设置。在首选项设置中，您可以修改颜色主题，字体大小等设置。</p>
<p>在本篇教程中将使用如下设置：</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://image.cdn.dshboom.top/post/202306222103809.png"
                      alt="image-20230326115535247"
                ></p>
<p>您可以选择您需要的设置以满足您的需求。</p>
<hr>
<p>本文章同步发布到知乎，点击按钮前往⬇</p>
<a class="button  center large" href='https://zhuanlan.zhihu.com/p/617017855' title='Arduino教程 | （一）安装Arduino IDE - 知乎'>Arduino教程 | （一）安装Arduino IDE - 知乎</a>
]]></content>
      <tags>
        <tag>Arduino</tag>
      </tags>
  </entry>
  <entry>
    <title>VMware虚拟机软件安装教程</title>
    <url>/2023/03/25/VMware%E8%99%9A%E6%8B%9F%E6%9C%BA%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/</url>
    <content><![CDATA[<h2 id="一、VMware软件介绍"><a href="#一、VMware软件介绍" class="headerlink" title="一、VMware软件介绍"></a>一、VMware软件介绍</h2><p>​    VMware Workstation是一款功能强大的桌面虚拟计算机软件，提供用户可在宿主机操作系统上同时运行不同的操作系统(虚拟化技术)，所运行的操作系统可方便的进行复制和移动，突破传统架构的限制。</p>
<h2 id="二、VMware下载"><a href="#二、VMware下载" class="headerlink" title="二、VMware下载"></a>二、VMware下载</h2><p>VMware官网：<a class="link"   href="https://www.vmware.com/" >https://www.vmware.com/ <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<p>VMware中文官网：<a class="link"   href="https://www.vmware.com/cn.html" >https://www.vmware.com/cn.html <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<p>您也可以选择我提供的百度网盘地址下载VMware Workstation Pro 17 for Windows</p>
<p>链接：<a class="link"   href="https://pan.baidu.com/s/1dCmgwmiGH-EOrh3v8gFuIA?pwd=zvcm" >https://pan.baidu.com/s/1dCmgwmiGH-EOrh3v8gFuIA?pwd=zvcm <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<p>提取码：zvcm</p>
<h3 id="切换语言"><a href="#切换语言" class="headerlink" title="切换语言"></a>切换语言</h3><p><em>如果您进入的网站英文界面，按以下操作可更改语言为中文。</em></p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://image.cdn.dshboom.top/post/202306222104877.png"
                      alt="VMware英文官网"
                ></p>
<p>1.点击右上角“语言“图标。</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://image.cdn.dshboom.top/post/202306222105261.png"
                      alt="VMware英文官网截图"
                ></p>
<p>2.点击”Asia“下的”China(简体中文)“即可修改网站语言为简体中文。若您有其他的需求，可自行选择所需要的语言。</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://image.cdn.dshboom.top/post/202306222105612.png"
                      alt="VMware中文网截图"
                ></p>
<p>3.如果出现相应的中文(或您所选的其他语言)界面，则代表语言修改成功。</p>
<h3 id="下载VMware-Workstation"><a href="#下载VMware-Workstation" class="headerlink" title="下载VMware Workstation"></a>下载VMware Workstation</h3><p><em>在VMware官网中下载最新的VMware Workstation产品</em></p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://image.cdn.dshboom.top/post/202306222105591.png"
                      alt="image-20230325091338077"
                ></p>
<p>1.在网站首页中点击“产品”选项</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://image.cdn.dshboom.top/post/202306222106500.png"
                      alt="image-20230325091752471"
                ></p>
<p>2.找到“桌面平台虛擬化管理程序”选项栏，我们可以看到三个子选项，第一个是Mac OS操作系统使用的VMware虚拟机软件，第二个是VMware Workstation Player（免费版），第三个是VMware Workstation Pro。您可以根据您的需要选择合适的产品。本教程中以Workstation Pro为例演示安装过程。</p>
<p><em>注：Mac版安装过程与本教程所展示的Windows版本有所差异</em></p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://image.cdn.dshboom.top/post/202306222107228.png"
                      alt="image-20230325092803259"
                ></p>
<p>3.若您点击了Workstation Pro按钮，将会跳转到如图所示的网页，若您需要购买VMware产品，您可以选择“在线购买”获得VMware的服务。对于个人试用，可以向下滑动找到“下载试用版”试用软件。</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://image.cdn.dshboom.top/post/202306222108275.png"
                      alt="image-20230325093125613"
                ></p>
<p>4.点击“下载试用版”。</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://image.cdn.dshboom.top/post/202306222108238.png"
                      alt="image-20230325093240013"
                ></p>
<p><em>注：此时网页将跳转为英文界面。</em></p>
<p>5.向下滑动，找到如下界面。</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://image.cdn.dshboom.top/post/202306222109019.png"
                      alt="image-20230325093452691"
                ></p>
<p><em>注：您可以选择您需要的版本，本教程以Windows版本为例</em>。</p>
<p>6.点击”DOWNLOAD NOW”，浏览器会开始下载Windows版本的VMware Workstation Pro。</p>
<h2 id="三、安装VMware-Workstation-Pro"><a href="#三、安装VMware-Workstation-Pro" class="headerlink" title="三、安装VMware Workstation Pro"></a>三、安装VMware Workstation Pro</h2><p>1.找到您的浏览器下载界面，以edge浏览器为例，出现如下文件代表下载完成。</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://image.cdn.dshboom.top/post/202306222109159.png"
                      alt="image-20230325094017405"
                ></p>
<p>2.双击安装程序，开始安装。</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://image.cdn.dshboom.top/post/202306222110423.png"
                      alt="image-20230325094213790"
                ></p>
<p>3.授权管理员权限后，VMware Workstation Pro安装向导会指引您安装。</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://image.cdn.dshboom.top/post/202306222110536.png"
                      alt="image-20230325094430228"
                ></p>
<p>4.点击下一步-&gt;接受条款-&gt;下一步，会出现如下界面。</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://image.cdn.dshboom.top/post/202306222110370.png"
                      alt="image-20230325094530987"
                ></p>
<p><em>注：建议您将VMware Workstation Pro安装到C盘以外的盘符</em></p>
<p>5.使用“增强型键盘驱动程序”可以提高安全性，若您没有这方面的需要，可以不选择此选项。</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://image.cdn.dshboom.top/post/202306222110384.png"
                      alt="image-20230325101008643"
                ></p>
<p>6.<del>若您使用网络上公开的密钥，不建议您勾选以上两个选项</del>（有能力的还是支持正版）</p>
<p>7.选择您要创建的快捷方式</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://image.cdn.dshboom.top/post/202306222112624.png"
                      alt="image-20230325101301738"
                ></p>
<p>8.点击下一步后，VMware Workstation Pro会开始安装</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://aliyundshboom.oss-cn-shenzhen.aliyuncs.com/blog/post/VMware%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/image-20230325101301738.png"
                      alt="image-20230325101520431"
                ></p>
<p>9.出现以下界面则代表安装完成，若果您有许可证密钥，可以选择安装。</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://image.cdn.dshboom.top/post/202306222113247.png"
                      alt="image-20230325101840744"
                ></p>
<p>10.打开VMware软件，若出现以下界面，恭喜您安装成功！</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://image.cdn.dshboom.top/post/202306222113928.png"
                      alt="image-20230325101840744"
                ></p>
<p><em>注：若您没有密钥，则只能试用该产品30天。</em></p>
<p>本文章同步发布到知乎，点击按钮前往⬇</p>
<a class="button  center large" href='https://zhuanlan.zhihu.com/p/616883406' title='VMware虚拟机软件安装教程 - 知乎'>VMware虚拟机软件安装教程 - 知乎</a>
]]></content>
      <tags>
        <tag>VMware</tag>
        <tag>软件安装</tag>
      </tags>
  </entry>
  <entry>
    <title>【日志】2023-03-18 小记</title>
    <url>/2023/03/18/%E3%80%90%E6%97%A5%E5%BF%97%E3%80%912023-03-18%20%E5%B0%8F%E8%AE%B0/</url>
    <content><![CDATA[<h3 id="日志"><a href="#日志" class="headerlink" title="日志"></a>日志</h3><hr>
<p>发布时间：<em>2023-03-18 7:46</em></p>
<p>截止至本日志发布，我的个人网站已经运行了12天。从 3月5日(2023-03-05) 网站建立以来，几乎每个周末都在不断调整优化网站的使用体验，以至于这个声称 ”blog site“ 的网站还没有发布一篇像样的博客😂。为此，我添加了<a href="https://dshboom.top/essays/">说说</a>板块和日志板块，前者主要以照片的形式记录自己的日常生活，后者则以文字的形式记录我作为开发者的故事、同时兼任介绍网站新功能的任务。</p>
<p>正如我所写的那样，本网站使用hexo博客框架构建，这为我省下了大量开发网站界面UI的时间，使我能够专注于网站内容的充实和丰富，在此由衷感谢创造hexo的开发者能为人们提供这样简洁高效的博客框架👍。在本地搭建成功后，我将其部署到了GitHub pages上，默认域名是  <a class="link"   href="https://dshboom.github.io/" >https://dshboom.github.io <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> ，自此，我的网站向全世界公开！╰(<em>°▽°</em>)╯</p>
<p>😕但由于众所周知的原因，GitHub pages在中国大佬地区的访问速度并不尽如人意(如下图)：</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://image.cdn.dshboom.top/post/202306222040161.png"
                      alt="Github pages测速截图"
                ></p>
<p>网站加载速度是用户对网站的第一印象，如果连进入网站都要消耗用户的耐心，那无疑会给用户留下不好的印象😢。</p>
<p>一番搜索后，我选择了Netlify作为GitHub pages的替代品。Netlify是一家提供静态网站托管的综合平台，在全球遍布CDN网络加速服务，国内访问速度要快很多。并且它支持从GitHub直接拉取项目同步更改，自动部署，一个字~~省心！</p>
<p>于是加速后的网站域名是 <a class="link"   href="https://dshboom.netlify.app/" >https://dshboom.netlify.app <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> ，新的测速结果如下图：</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://image.cdn.dshboom.top/post/202306222041131.png"
                      alt="Netlify访问加速"
                ></p>
<p>本以为这就是我的网站的最终形态了，但是！但是！在国内某社交平台上，用它的内置浏览器访问时居然被截胡了🙄！！</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://image.cdn.dshboom.top/post/202306222041427.jpg"
                      alt="某平台访问截图"
                ></p>
<p><em>这平台是谁我不说</em></p>
<p>那没办法，白嫖到此竟然败在了某平台的风控系统上，恢复访问遥遥无期😭。解决方案也很简单，只要复制到浏览器访问就行了，但这样终究是让用户对网站妥协，影响使用体验。</p>
<p>好办，白嫖不行是吧，交钱罢了。</p>
<p>最终的解决方案是使用自己的域名，我选择阿里云作为我的域名提供商，购买dshboom.top作为我的个人网站域名。理论上只要在Netlify上配置自定义域名就可以了，但是出现了奇怪的”渲染错误”，截图如下：</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://image.cdn.dshboom.top/post/202306222042953.png"
                      alt="Netlify报错"
                ></p>
<p>有时重试可以，有时反复报错，即使使用魔法也无济于事，看来不是网络环境的问题。</p>
<p>这个奇怪的报错一度让我放弃了Netlify的托管服务，直接用GitHub pages搭配域名跑了一周，偷偷用学校的SEEWO多媒体教学平台访问了一下我的网站（谁叫我是电教委员呢🤣），访问速度确实感人。</p>
<p>后来发现，将浏览器语言改成英文，不使用翻译插件就可以避免报错，遇到同样问题的读者可以一试。</p>
<p>OK，现在网站可以用 <a href="https://dshboom.top/">https://dshboom.top</a> 实现高速访问了。</p>
<p>BUT，我发现说说板块仍然不能快速加载出来😭，这里不得不解释一下一个叫图床的技术。图床一般是指储存图片的服务器，如果我将所有图片放在网站的服务器上，那我在Netlify服务器的流量将会加速消耗，因为每访问一次都要从网站服务器获取资源，我在Netlify的100G/月套餐就吃不消了。如果将图片放在专门存放在提供图片外链服务的服务器上，就可以解决这个问题。</p>
<p>免费图床试了很多，聚合图床、GitHub、SM.MS……，访问速度都不能满足我的需求。加钱使用付费图床的路上，<del>七牛云更是骗了我5块钱（未备案域名还不能国内储存，生成的域名还只能HTTP协议，真的泻）</del>，还是阿里云的OSS对象储存服务适合我，访问速度suo~suo的上来了，大爱阿里云！！！</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://image.cdn.dshboom.top/post/202306222043344.png"
                      alt="阿里云控制台截图"
                ></p>
<hr>
]]></content>
      <tags>
        <tag>网站日志</tag>
      </tags>
  </entry>
  <entry>
    <title>【日志】2023-03-18 小记</title>
    <url>/2023/03/18/%E3%80%90%E6%97%A5%E5%BF%97%E3%80%912023-06-22%20%E5%B0%8F%E8%AE%B0/</url>
    <content><![CDATA[<h3 id="日志"><a href="#日志" class="headerlink" title="日志"></a>日志</h3><hr>
<p>发布时间：<em>2023-03-18 7:46</em></p>
<p>累死我啦！！！！！！</p>
<p>刚才把我的博客中所有的图片资源转到了我在Netlify构建的图床上，总算是脱离了阿里云的催命续费提醒。</p>
<hr>
]]></content>
      <tags>
        <tag>网站日志</tag>
      </tags>
  </entry>
  <entry>
    <title>论文设计_基于Arduino的桌面气象时钟</title>
    <url>/2023/03/11/%E8%AE%BA%E6%96%87%E8%AE%BE%E8%AE%A1_%E5%9F%BA%E4%BA%8EArduino%E7%9A%84%E6%A1%8C%E9%9D%A2%E6%B0%94%E8%B1%A1%E6%97%B6%E9%92%9F/</url>
    <content><![CDATA[<h2 id="我发表了一篇论文，点击查看-lt-–"><a href="#我发表了一篇论文，点击查看-lt-–" class="headerlink" title="我发表了一篇论文，点击查看 &lt;–"></a>我发表了一篇论文，<a class="link"   href="https://maifile.cn/est/a2646785203523/pdf" >点击查看 &lt;– <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></h2><h5 id="github地址-dshboom时钟气象站-github-com"><a href="#github地址-dshboom时钟气象站-github-com" class="headerlink" title="github地址:dshboom时钟气象站 (github.com)"></a>github地址:<a class="link"   href="https://github.com/dshboom/esp8266-" >dshboom时钟气象站 (github.com) <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></h5>]]></content>
      <tags>
        <tag>论文设计</tag>
      </tags>
  </entry>
  <entry>
    <title>Arduino教程(四) | 控制SG90舵机</title>
    <url>/2023/03/05/Arduino%E6%95%99%E7%A8%8B-(%E5%9B%9B)%E6%8E%A7%E5%88%B6SG90%E8%88%B5%E6%9C%BA/</url>
    <content><![CDATA[<p><em><strong>久违的Arduino教程更新啦！今天为大家带来的是使用Arduino UNO开发板实现控制舵机，以下是具体教程。</strong></em></p>
<h2 id="一、硬件连接"><a href="#一、硬件连接" class="headerlink" title="一、硬件连接"></a>一、硬件连接</h2><p>SG90舵机有三根线：电源、接地和信号。</p>
<p>电源线通常为红色，应连接到 Arduino 板上的 5V 引脚。</p>
<p>地线通常为黑色或棕色，应连接到 Arduino 板上的GND引脚。</p>
<p>信号引脚通常为黄色、橙色或白色，应连接到 Arduino 板上的数字引脚。</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://image.cdn.dshboom.top/post/202307122152655.png"
                     
                ></p>
<p>本文使用Arduino UNO开发板以如下方式连接：</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://image.cdn.dshboom.top/post/202307122156702.png"
                     
                ></p>
<h2 id="二、Arduino程序编写"><a href="#二、Arduino程序编写" class="headerlink" title="二、Arduino程序编写"></a>二、Arduino程序编写</h2><h4 id="1-参考示例程序"><a href="#1-参考示例程序" class="headerlink" title="1.参考示例程序"></a>1.参考示例程序</h4><p>在Arduino中，可以使用servo库实现控制舵机控制。您可以在Arduino的lib管理器中搜索servo安装。</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://image.cdn.dshboom.top/post/202307122201737.png"
                     
                ></p>
<p>安装servo库后，您可以在文件-&gt;示例-&gt;servo-&gt;Sweep中打开内置的示例程序。</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://image.cdn.dshboom.top/post/202307122201451.png"
                     
                ></p>
<p>Sweep示例程序实现了一个舵机的扫描功能。舵机会从0度逐渐转动到180度，然后再逐渐转动回0度，循环往复。每个位置停留15毫秒，然后再转到下一个位置。</p>
<h4 id="2-修改示例程序"><a href="#2-修改示例程序" class="headerlink" title="2.修改示例程序"></a>2.修改示例程序</h4><p>我将示例程序的代码做了一些修改，并添加了相关注释，程序代码如下：</p>
<div class="highlight-container" data-rel="C++"><figure class="iseeu highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;Servo.h&gt;</span></span></span><br><span class="line"></span><br><span class="line">Servo myservo;  <span class="comment">// 创建舵机对象来控制舵机</span></span><br><span class="line"><span class="comment">// 大多数板子上可以创建12个舵机对象</span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> pos = <span class="number">0</span>;    <span class="comment">// pos变量用于存储舵机位置</span></span><br><span class="line"><span class="type">int</span> speed = <span class="number">15</span>; <span class="comment">// speed变量用于控制舵机转动的速度，单位ms</span></span><br><span class="line"><span class="type">int</span> pin = <span class="number">9</span>;    <span class="comment">// pin变量用于选择控制舵机的引脚 只能使用pwm引脚 </span></span><br><span class="line"><span class="comment">// Arduino UNO中,pwm引脚是3、5、6、9、10和11</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">setup</span><span class="params">()</span> </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  myservo.<span class="built_in">attach</span>(pin);  <span class="comment">// 将舵机连接到9号引脚的舵机对象</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">loop</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="keyword">for</span> (pos = <span class="number">0</span>; pos &lt;= <span class="number">180</span>; pos += <span class="number">1</span>) <span class="comment">// 从0度逐渐转动到180度 每次正方向转动1度</span></span><br><span class="line">  &#123; </span><br><span class="line">    myservo.<span class="built_in">write</span>(pos);              <span class="comment">// 告诉舵机转到变量&#x27;pos&#x27;所表示的位置</span></span><br><span class="line">    <span class="built_in">delay</span>(speed);                       <span class="comment">// 等待15毫秒，让舵机到达目标位置</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">for</span> (pos = <span class="number">180</span>; pos &gt;= <span class="number">0</span>; pos -= <span class="number">1</span>)<span class="comment">// 从0度逐渐转动到180度 每次负方向转动1度</span></span><br><span class="line">  &#123;</span><br><span class="line">    myservo.<span class="built_in">write</span>(pos);              </span><br><span class="line">    <span class="built_in">delay</span>(speed);                     </span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<p>我通过增添speed变量使得舵机转动的速度可控，pin变量方便更改控制引脚。</p>
<p><em><strong>注意：控制引脚需要使用pwm引脚，通常来说，pwm引脚带有”~”标识</strong></em></p>
<p>示意图：</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://image.cdn.dshboom.top/post/202307122216512.png"
                     
                ></p>
<h4 id="3-烧录程序-查看效果"><a href="#3-烧录程序-查看效果" class="headerlink" title="3.烧录程序 查看效果"></a>3.烧录程序 查看效果</h4><p>为使画面更加鬼畜，我将速度更改为2ms,演示视频如下：</p>
]]></content>
      <tags>
        <tag>Arduino</tag>
      </tags>
  </entry>
  <entry>
    <title>Windows下OpenSSH的安装</title>
    <url>/2023/03/05/Xshell%E5%B7%A5%E5%85%B7SSH%E8%BF%9E%E6%8E%A5CentOS%E8%99%9A%E6%8B%9F%E6%9C%BA/</url>
    <content><![CDATA[<h2 id="一、介绍"><a href="#一、介绍" class="headerlink" title="一、介绍"></a>一、介绍</h2><p><strong>什么是SSH？什么是OpenSSH？</strong></p>
<p>SSH（Secure Shell）是一种网络协议，用于在不安全的网络中进行安全的远程登录和数据传输。它通过加密通信和身份验证机制，确保数据在传输过程中的机密性和完整性。</p>
<p>OpenSSH是SSH协议的一个开源实现，它是目前最常用的SSH软件包之一。OpenSSH提供了一套完整的工具和服务，包括ssh客户端和ssh服务器，用于安全地远程登录和管理远程计算机。它支持多种加密算法和身份验证方法，可以在各种操作系统上运行，并且具有高度的可定制性和安全性。OpenSSH已经成为许多Linux和Unix系统的标准组件，并且被广泛应用于服务器管理和远程访问场景中。</p>
<h2 id="二、Windows下安装OpenSSH客户端"><a href="#二、Windows下安装OpenSSH客户端" class="headerlink" title="二、Windows下安装OpenSSH客户端"></a>二、Windows下安装OpenSSH客户端</h2><h4 id="1-确认您的系统没有安装SSH工具"><a href="#1-确认您的系统没有安装SSH工具" class="headerlink" title="1.确认您的系统没有安装SSH工具"></a>1.确认您的系统没有安装SSH工具</h4><p>打开命令提示终端，输入ssh并回车，如果出现如下提示，则证明你的系统尚未安装ssh客户端：</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://image.cdn.dshboom.top/post/202307121715042.png"
                     
                ></p>
<p>如果出现如下提示，则您的系统已经安装了ssh客户端：</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://image.cdn.dshboom.top/post/202307121717581.png"
                     
                ></p>
<h4 id="2-下载OpenSSH"><a href="#2-下载OpenSSH" class="headerlink" title="2.下载OpenSSH"></a>2.下载OpenSSH</h4>]]></content>
  </entry>
</search>
